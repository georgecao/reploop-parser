<?xml version="1.0" encoding="UTF-8"?>
<!--奇谱基础数据结构和服务的定义模块。这个模块仅包含使用thrift定义的接口以及使用protobuf定义的数据结构。具体的实现参见各实现包。
  本实现的功能包括;
  1. package 阶段： 生成zip包；包名为knowledge-schema-版本.小版本号.修正版本号.日期.zip 格式
  2. deploy阶段： 将zip包发布到Release Server上
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.qiyi.knowledge</groupId>
    <artifactId>knowledge-sdk</artifactId>
    <relativePath>../pom.xml</relativePath>
    <version>2.0.180917</version>
  </parent>
  <artifactId>knowledge-idl</artifactId>
  <packaging>jar</packaging>
  <name>Knowledge Interface Definition Language</name>
  <description>奇谱基础数据结构和服务的定义模块。这个模块仅包含使用thrift定义的接口以及使用protobuf定义的数据结构。具体的实现参见各实现包。</description>
  <url>http://www.iqiyi.com</url>
  <properties>
    <!-- 这个时间戳是用来标记版本的。每次新的schema发布，需要分配一个新的时间戳。 -->
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
    <release.file.name>knowledge-schema-${project.version}</release.file.name>
    <release.note.file>${basedir}/src/main/resources/ReleaseNotes.txt</release.note.file>
    <schema.release.server>root@qipu-web-online001-bjdxt9.qiyi.virtual</schema.release.server>
    <schema.release.server2>root@10.15.63.87</schema.release.server2>
    <!-- 注意这个文件在本地必须是600的permission -->
    <schema.release.key>/root/.ssh/qipu_id_rsa.dat</schema.release.key>
    <schema.release.folder>/usr/local/html/schema/test</schema.release.folder>
  </properties>
  <profiles>
    <profile>
      <id>product</id>
      <properties>
        <schema.release.folder>/usr/local/html/schema/product</schema.release.folder>
      </properties>
    </profile>
  </profiles>
  <build>
  	<resources>
     <resource>
        <directory>src/main/bin</directory>
        <targetPath>${project.build.directory}/bin</targetPath>
        <filtering>true</filtering>
      </resource>
	  <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      </resources>
    <plugins>
      <!-- 将/entity/*.fproto合并为/knowledge/pub/knowledge.proto -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <version>1.3.2</version>
        <executions>
          <execution>
            <id>merge fproto</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>sh</executable>
              <commandlineArgs>${basedir}/merge_fproto.sh ${basedir}/src/main/resources/entity/*.fproto ${basedir}/src/main/resources/knowledge/pub/knowledge.proto</commandlineArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- 将/portal/frontend下的proto编译成desc -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <version>1.3.2</version>
        <executions>
          <execution>
            <id>generate portal desc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>sh</executable>
              <commandlineArgs>${basedir}/gen_desc.sh</commandlineArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- 使用plugin来产生knowledge-schema-版本号-日期.zip文件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>create-distribution</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>${release.file.name}</finalName>
              <descriptors>
                <descriptor>${basedir}/src/assembly/assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- 将idl文件发布到测试服务器上 -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <version>1.3.2</version>
        <executions>
          <execution>
            <id>init-permission</id>
            <phase>deploy</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>chmod</executable>
              <commandlineArgs>0600 ${schema.release.key}</commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>upload-to-test-release-server</id>
            <phase>deploy</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>scp</executable>
              <commandlineArgs>-i ${schema.release.key} ${project.build.directory}/${release.file.name}.zip ${schema.release.server}:${schema.release.folder}/</commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>upload-to-test-release-server2</id>
            <phase>deploy</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>scp</executable>
              <commandlineArgs>-i ${schema.release.key} ${project.build.directory}/${release.file.name}.zip ${schema.release.server2}:${schema.release.folder}/</commandlineArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
