// Author: Chuanqian Wang (wangchuanqian@qiyi.com)
// Author: Lin Liu (lynnliu@qiyi.com)
// Author: Yin Zeng (zengyin@qiyi.com)


/**
 * 奇谱实体元数据定义， 这里定义是参考国标 GY/T 202.1--2004
 *
 *
**/
import "knowledge/pub/common.proto";


package knowledge.pub;

/**
 * @brief 元数据：引用属性定义。
 * @details 如需在一个实体中引用其他的实体作为属性，使用MetaSummary来定义这个引用。
**/
message MetaSummary {
  //唯一标识
  required int64 entity_id = 1;
  //视频播放次序
  optional int32 order = 2;

  /**
   * 被引用的实体类型
   **/
  enum Type {
    EPISODE_OTHER = 99; // 其他类型的Episode
    ALBUM_OTHER = 199; // 其他类型的专辑
    IMAGE_COVER = 300; // 封面图
    IMAGE_PORTRAIT = 301; // 写真
    IMAGE_OTHER = 399; // 其他图片类型
    PEOPLE_OTHER = 499; // 其他人员类型
    ClIP_OTHER = 599; // 其他剪辑
    SCENE_OTHER = 699; // 其他场景
    SHOT_OTHER = 799; // 其他快照图
    FOCUS_OTHER = 899; // 其他焦点图
    IMAGE_DR = 999; // 二维码链接
    IMAGE_HEADER = 1099; // 头图链接
  }
  //视频类型，0～99视频，100～199专辑，300封面，301～399图片……
  optional Type type = 3;

  //品牌，iqiyi,pps
  optional Brand brand = 4;

  //多发所在的频道id，此字段与上面brand字段共同确定collection中包含的episode和album
  optional int32 channel_id = 5;
  //描述
  optional string desc = 6;

  //加入父实体的时间
  optional int64 create_time = 7;

  //开始播放时间.
  optional int64 start_play_time = 8;

  //停止播放时间.
  optional int64 stop_play_time = 9;

  // 描述child和father之间关系,即:描述item(filmTV, episode等)和collection(剧集，超剧集)之间的关系.
  // 该数据由影视大全编辑来维护.
  optional string relationship = 10;

  // The relevance score of one video/people to another video/people
  // Use this to sort related videos/people by relevance
  optional double closeness = 11;

  // If true, means all episodes in this album is related to the video/people
  optional bool all_children_related = 12;

  // Depicts the role played by the celebrity in the video.
  message RoleInfo {
      optional string role = 1;
      repeated string character = 2;
  }
  repeated RoleInfo role_info = 13;

  /**
   * 音乐类型。当使用这个字段来描述被引用的Episode(音乐频道的)和主Episode的关系时使用。 
   **/
  enum MusicType {
    //片头曲
    OPENING_THEME = 1;
    //插曲
    INTERLUDE = 2;
    //片尾曲
    ENDING_THEME = 3;
    //主题曲
    THEME_SONG = 4;
  }
  //音乐类型。当使用这个字段来描述被引用的Episode(音乐频道的)和主Episode的关系时使用。 
  repeated MusicType music_type = 14;

  // 在Episode添加到 Album，以及Episode修改Boss\FatherInfo字段时，同步到Album上
  optional bool is_free = 15 [default = true];

  // MetaSummary中新增投票数，这个数据由UgcEpisode.topic_summary写入时，将vote_count数据自动同步过来
  optional int64 vote_count = 16;

  //用于同步章节信息；
  optional int64 chapter_last_online_time = 17;

  //可用状态；
  optional AvailableStatus available_status = 18;

  //章节数
  optional int64 chapter_count = 19;

  //MetaSummary中新增播放次数，这个数据由UgcEpisode.topic_summary写入时，将UgcEpisode.display_play_count数据自动同步过来
  optional int64 play_count = 20;

  // MetaSummary中新增上传时间，这个数据由UgcEpisode.topic_summary写入时，将UgcEpisode.metadata.upload_time数据自动同步过来
  optional int64 upload_time = 21;

  //总字数
  optional int64 word_count = 22;

  // MetaSummary中新增上传用户id，这个数据由UgcEpisode.topic_summary写入时，将UgcEpisode.metadata.uploader_id数据自动同步过来
  optional int64 uploader_id  = 23;

  //父子关系类型，从FatherInfo.child_father_relation同步过来。 
  optional InterEpisodeRelation child_father_relation = 24;

  /**
   * 明星类型
   */
  enum PeopleType {
    DEFAULT = 0;
    STAR = 1;
    ANCHOR = 2;
  }
  optional PeopleType people_type = 25;

  optional int64 creator_id = 26;

  // 节目直播状态
  optional PlayStatus play_status = 27;

  // 是否置顶
  optional bool is_top = 28;
  // 置顶结束时间
  optional int64 top_end_time = 29;

  // 作者名称
  optional string author_name = 30;

  // cp名称
  optional string cp_name = 31;

  // 赛程播单类型
  optional MatchCollectionSummaryType match_collection_summary_type = 32;

  //comicBookChapter page_count
  optional int64 page_count = 33;
  // 视频播放地址
  optional string play_url = 34;
  optional string vid = 35;


  //全球发行时间，年月日
  optional Date global_publish_date = 36;

  // 非正片的排序
  optional int32 clip_order = 37;
  //版本信息
  optional string version_description = 38;
  //明星地区信息
  optional string nationality = 41;
  //动态视频封面图类型
  optional VideoCoverType video_cover_type = 40 [default = UNKNOWN_VIDEO_COVER_TYPE];
  //短视频时长（s） 例如15s
  optional int32 cut_duration = 42;
  //动态视频封面类型
  optional VideoCoverContentType video_cover_content_type = 43 [default = UNKNOWN_VIDEO_COVER_CONTENT_TYPE];
}

/**
 *@brief 元数据：引用类型列表
 *@details 使用本字段来支持需要支持一次更新的列表
**/
message MetaSummaryList {
  //引用属性列表
  repeated MetaSummary meta_summary = 1;
  //最后更新时间。
  optional int64 last_update_time = 2;
}

/**
 * @brief 元数据：标题
 * @details 支持多平台、多语言的标题字段
 *
 **/
message Title {

  // 节目原名.
  optional string proper_title = 1;
  // 节目名称的首字母
  optional string proper_title_initial = 8;

  /**
   * 和语言相关的标题名称
  **/
  message ParallelProperTitle {
   //并列正题名语言种类，建议用ISO语言种类编码标准
    optional string language = 1;
   //并列正题名
    optional string title = 2;
  }
  //和语言相关的标题名称
  repeated ParallelProperTitle parallel_proper_title = 2;

  //副标题
  optional string subordinate_title = 3;


  // 别名 
  repeated string alternative_title = 4;

  //题名说明
  optional string title_description = 5;

  /**
   * 系列剧的题名
   **/
  message Series {
    //系列题名，如“越狱第一季”
    optional string series_title = 1;

    // Series title of another language
    //并列系列题名
    optional string parallel_series_title = 2;

    // How many episodes this series has. eg: 40
    //系列分集总集数
    optional int32 total_number_of_episodes = 3;

    // The position of this episode in this series. For example,
    // the first episode is 1 or 01, and so on.
    //系列分集数
    optional int32 episode_order = 4;

    //季次，如第一季（1），第二季（2）
    optional int32 season = 5;

    //期次，只对娱乐频道有效，例如1，2
    optional int32 phase = 6;
  }
  optional Series series = 6;

  //歌曲曲目
  repeated string chapter_title = 7;
  //外文名
  optional string foreign_title = 9;
}

/**
 * @brief 元数据：来源
 * @details 数据来源
 **/
message Source {
  // Including self-manufacture, outsourcing, co-produced and so on
  //资料获取方式
  optional string acquiring_method_of_source = 1;

  // Eg. Iqiyi, CCTV, China Film Group Corporation
  //资料提供者
  optional string source_provider = 2;

  // Support pps client and iqiyi UGC
  enum SourceType {
    PPC = 1;
    UGC = 2;
  }
  //来源类型，PPC购买版权，UGC用户上传
  optional SourceType source_type = 3 [default = UGC];
}

/**
 * @brief 元数据：实体描述
 * @details 实体详细描述
 **/
message Description {
  //详细描述
  optional string description = 1;
  //主题人物
  repeated string character = 2;
  //事件发生日期，年月日
  optional Date date_of_event = 3;
  //版本说明
  repeated string version_description = 4;
  //获奖情况
  repeated Award award = 5;

  message Column {
    // Eg. CCTV news or Weather forecast
    //栏目名称
    optional string column_name = 1;

    // Phase number. eg. 1,2,3,4 ...
    //期次
    optional int32 issue_number = 2;

    // annual. eg. 2001,2002 ...
    //年度
    optional int32 issue_year = 3;
  }
  repeated Column column = 6;

  message AudioChannel {
    //声道编号
    optional int32 audio_channel_number = 1;
    //声道内容（描述）
    optional string audio_channel_description = 2;
  }
  optional AudioChannel audio_channel = 7;

  // Television commentary, music, synopsis and so on is described in words
  //附件，比如电视评述，配乐，概要等
  optional string attachment = 8;

  // The lyrics of popular songs
  //流行音乐歌词内容
  optional string content = 9;
}

/**
 * @brief 元数据：内容评级
 * @details 内容评级
 **/
message ContentRating {
  enum Rank {
    // Anyone can see.
    GENERAL = 0;
    // Anyone who is school-aged after children can see.
    CHILD_PROTECTED = 1;
    // Anyone who is more than 13 years old can see.
    PARENT_GUIDED = 2;
    // Anyone who is more than 17 years old can see.
    MATURE = 3;
  }
  //等级
  optional Rank rank = 1 [default = GENERAL];

  //限制描述
  message Restriction {
   //原因
    optional string reason = 1;
    enum Level {
      HIGH = 0;
      MIDDLE = 1;
      LOW = 2;
    }
    //限制等级
    optional Level level = 2 [default = MIDDLE];
  }
  repeated Restriction restriction = 2;
}

/**
 * @brief 元数据：Episode、Album、Collection等PCC实体中使用的元数据。
 * @details Episode、Album、Collection等PCC实体中使用的元数据。元数据是实体的固有属性，不会随着发行商、提供商而改变的。
 **/
message Metadata {

  required int64 entity_id = 1; // ID of this entity

  optional Title title = 2;

  optional Description description = 4;

  message Creator {
    message DescriptionOfCreator {
      //制作者（制片人/编剧/导演等）id
      optional int64 id_of_creator = 1;
      //制作者（制片人/编剧/导演等）名字
      optional string name_of_creator = 2;
      //制作者（制片人/编剧/导演等）并列名字
      repeated string parallel_name_of_creator = 3;

      enum Role {
        CHIEF_EDITOR = 0;
        SUPERVISOR = 1;
        PRODUCER = 2;
        DIRECTOR =3 ;
        SCENARIST_DIRECTOR = 4;
        SONG_WRITER = 5;
        COMPOSER = 6;
        SCREENWRITER = 7;
        CHOREOGRAPHER = 8;
        ARRANGER = 9;
        PLANNER = 10;
        COPY_WRITER = 11;
        EDITOR = 12;
        JOURNALIST = 13;
        PHOTOGRAPHER = 14;
        VIDEOGRAPHER = 15;
        SCRIPT_CLERK = 16;
        TRANSLATOR = 17;
        CUTTING = 18;
        ART_DIRECTOR = 19;
        LIGHTING = 20;
        AUDIO = 21;
        AUDIO_MIXER = 22;
        MAKEUP_STYLING = 23;
        COSTUMER = 24;
        SINGING_DESIGN = 25;
        AUDIO_VIDEO_TECH = 26;
        // The people creates art
        CREATOR = 27;
        SCRIPT = 28;
      }
      //制作者责任方式
      repeated Role role = 4;

      // Including creator's country, post, company and so on.
      // e.g: china, director, CCTV
      //制作者的附加信息，如：国籍，职位，公司等等
      optional string other_information = 5;

      optional string taiwan_name_of_creator = 6;
    }
    repeated DescriptionOfCreator description_of_creator = 1;
  }
  optional Creator creator = 5;

  message Contributor {
    message DescriptionOfContributor {
      //其他参与者（配音/舞者/歌手/教练/演员等）id
      optional int64 id_of_contributor = 1;
      //其他参与者（配音/舞者/歌手/教练/演员等）
      optional string name_of_contributor = 2;
      //其他参与者（配音/舞者/歌手/教练/演员等）并列名字
      optional string parallel_name_of_contributor = 3;

      message Contribution {
        enum Role {
          HOST = 0;
          CAST = 1;
          DUBBER = 2;
          COMMENTATOR = 3;
          SPEAKER = 4;
          INTERVIEWEE = 5;
          GUEST = 6;
          LETURER = 7;
          MAIN_CHARACTER = 8;
          DANCER = 9;
          SINGER = 10;
          ACTOR = 11;
          GROUP_ACT = 12;
          CONDUCTOR = 13;
          ACCOMPANIST = 14;
          COACH = 15;
          ACTION_DIRECTOR = 16;
          ADVISER = 17;
          // General character related the entity.
          RELATE = 18;
          JUDGE = 19;
          PLAYER = 20;
          // Famous actor
          STAR = 21;
          // The people works on art.
          ARTIST = 22;
        }
        //其他参与者责任方式
        optional Role role = 1;
        // The character played by this contributor in the video
        //饰演角色
        optional string character = 2;
        //台湾站角色
        optional string taiwan_character  = 3; 
      }
      repeated Contribution contribution = 4;

      //其他参与者的附件信息，如：国籍，职位，公司等等
      optional string other_info = 5;

      optional string taiwan_name_of_contributor = 6;
    }
    repeated DescriptionOfContributor description_of_contributor = 1;
  }
  optional Contributor contributor = 6;

  message Publisher {
    message DescriptionOfPublisher {
      //出版者id
      optional int64 id_of_publisher = 1;
      //出版者名
      optional string name_of_publisher = 2;
      //出版地
      optional Location place_of_publication = 3;
    }
    repeated DescriptionOfPublisher description_of_publisher = 1;

    // Stakeholders legal representative
    message DescriptionOfProducer {
      //出品者id
      optional int64 id_of_producer = 1;
      //出品者名称
      optional string name_of_producer = 2;
      //出品地
      optional Location place_of_production = 3;
    }
    repeated DescriptionOfProducer description_of_producer = 2;
  }
  optional Publisher publisher = 7;

  message Dates {
  	//全球发行时间（年月日）
    optional Date global_publish_date = 1;
    //中国发行时间（年月日）
    optional Date china_publish_date = 2;
    //出品时间（年月日）
    optional Date product_date = 3;
    //首映时间（年月日）
    optional Date original_show = 4;
  }
  optional Dates dates = 8;

  message Language {
    message AudioChannel {
      // Exist multiple sound channels:Mono,stereo...,this
      // identifies sound channel order number.
      optional int64 audio_channel_number = 1;
      //声道语种，采用ISO语种编码标准
      optional string audio_channel_language = 2;
      //声道url
      optional string audio_channel_url = 3;
      //是否默认
      optional int32 is_default = 4;
    }
    repeated AudioChannel audio_channel = 1;

    message Subtitle {
      //字幕编号
      optional int64 subtitle_number = 1;
      //字幕语种，采用ISO语种编码标准
      optional string subtitle_language = 2;
      //字幕url
      optional string subtitle_url = 3;
      //是否默认
      optional int32 is_default = 4;
    }
    repeated Subtitle subtitle = 2;
  }
  optional Language language = 9;

  message Type {
    //节目类型，如运动，艺术，军事，音乐等
    repeated string program_type = 1;

    //节目形态，如新闻，动画，比赛，评论等
    repeated string program_form = 2;
  }
  optional Type type = 10;

  message Identifier {
    // Eg: CN-Z13-13-00117
    //国际标准音像制品编码
    optional string international_standard_recording_code = 1;

    // Company self-defined
    //标识代码
    optional string relations_id = 2;
  }
  optional Identifier identifier = 11;

  // Space-time covers range
  message Coverage {
    message YearsCovered {
      //时间范围的开始年份
      optional string year_of_start = 1;
      //时间范围的结束年份
      optional string year_of_end = 2;
      //时间范围的年代描述
      optional string description_of_years_covered = 3;
    }
    repeated YearsCovered year_covered = 1;

    // The addresses in the movie or the addresses of movie's event happens
    repeated string spatial = 2;
  }
  optional Coverage coverage = 12;

  optional Source source = 13;

  optional ContentRating content_rating = 14;

  // Scientific classification, now including: film, tv play, cartoon, varity.
  //科学分类
  optional int32 scientific_channel_id = 15;

  // Below three fields for other channels except film, tv play, cartoon, varity.
  repeated string film_tv_language = 16;
  repeated string film_tv_region = 17;
  repeated string film_tv_category = 18;

  // Minute. time length.
  optional int32 duration = 19;

  optional string imdb_id = 20;

  optional int64 creator_id = 21;
  optional PublicLevel public_level = 22;

}

/**
 * @brief 元数据：人物元数据，用于People中
 * @details 人物元数据，用于People中
 **/
message PeopleMetadata {
  //人物id
  required int64 entity_id = 1;
  //正式名字
  optional string proper_name = 2;
  //拼音名字
  optional string pingyin_name = 3;
  //英语名字
  optional string english_name = 4;
  //别名（绰号）
  repeated string alias_name = 5;
  optional string proper_name_initial = 23;
  repeated string former_name = 24;

  enum Gender {
    MALE = 0;
    FEMALE = 1;
    OTHER = 2;
  }
  //性别
  optional Gender gender = 6;

  optional int32 height = 7; // cm
  optional int32 weight = 8; // kg

  message BustWaistHip{
    //胸围
    optional string bust_size = 1;
    //腰围
    optional string waist_size = 2;
    //臀围
    optional string hip_size = 3;
  }
  optional BustWaistHip bust_waist_hip = 9;

  enum BloodType {
    O = 0;
    A = 1;
    B = 2;
    AB = 3;
  }
  //血型
  optional BloodType blood_type = 10;
  //生日
  optional Date birthday = 11;
  //星座
  optional Constellation constellation = 12;

  // The code for country and province should comply with
  // the ISO 3166 standard.
  //祖籍地
  optional Location ancestral_place = 13;
  //出生地
  optional Location birth_place = 14;
  //现居地
  optional Location current_place = 15;
  //曾居地
  repeated Location lived_place = 16;
  //国籍
  repeated Location nationality = 28;
  //个人详细信息链接
  optional string url = 17;
  //个人爱好
  repeated string hobby = 18;
  //所获奖项
  repeated Award award = 19;
  //个人描述
  optional string description = 20;
  //毕业学校
  repeated string graduation_school = 21;

  // Don't use obsolete_agency_company field, and not old data.
  repeated string obsolete_agency_company = 22;

  message PlayForOrganization {
    enum OrganizationType {
      CLUB = 1;
      AGENCY_COMPANY = 2;
      OTHER = 3;
    }
    optional OrganizationType organization_type = 1;

    optional string organization_name = 2;
  }
  repeated PlayForOrganization play_for_organization = 30;

  repeated string fans_nick_name = 25;
  repeated string occupation = 26;
  optional string imdb_id = 27;
  optional Date became_famous_years = 29;
  optional bool is_group = 31 [default = false];
  optional Date founding_time = 32;

  optional string taiwan_name = 33;

  //一句话推荐
  optional string prompt_description = 34;

  //时光网ID
  optional int64 mtime_id = 35;
  //豆瓣ID
  optional int64 douban_id = 36;
  
}

/**
 * @brief 元数据：图片元数据，用于Image中
 * @details 图片元数据，用于Image中
 **/
message ImageMetadata {
  //图片ID
  required int64 entity_id = 1;

  enum Type {
    POSTER = 0;
    STAGE_PHOTO = 1;
    LIFE_PHOTO = 2;
    ART_PHOTO = 3;
  }
  //图片类型
  optional Type type = 2;
  //图片描述
  optional string description = 3;
  //内容评级
  optional ContentRating content_rating = 4;
}


/**
 * @brief 元数据：UGC视频元数据，用于UGCEpisode中
 * @details UGC视频元数据，用于UGCEpisode中
 **/
message UgcMetadata {
  //用户上传视频id
  required int64 entity_id = 1;
  //用户上传视频标题
  optional Title title = 2;
  //描述
  optional Description description = 3;

  //上传用户id
  optional int64 uploader_id = 4;

  //上传用户id地址
  optional string uploader_ip_address = 16;

  // For pps ugc episode unique identification
  //pps上传ID
  optional int64 pps_upload_id = 15;
  //奇传id
  optional string qichuan_id = 5;
  //上传时间
  optional int64 upload_time = 6;

  enum ContentRank {
    NONE = 0;
    VERY_GOOD = 1;
    GOOD = 2;
    NORMAL = 3;
    BAD = 4;
  }
  // Don't use obsolete_content_rank field.
  //视频评级
  optional ContentRank obsolete_content_rank = 7 [default = NONE];

  // Don't use obsolete_result_check field.
  //编辑审核结果
  optional ResultCheck obsolete_result_check = 8;

  // Don't use obsolete_check_reason field.
  // The reason for the result be handled
  //审计审核结果的原因，已废弃
  optional string obsolete_check_reason = 9;

  // The danger rank of the video
  enum DangerLevel {
    SAFE = 0;
    DANGEROUS_HIGH = 1;
    DANGEROUS_MIDDLE = 2;
    DANGEROUS_LOW = 3;
  }
  // Don't use obsolete_danger_level field.
  //视频危险等级
  optional DangerLevel obsolete_danger_level = 10 [default = SAFE];

  // Don't use obsolete_water_mark field.
  //水印，已废弃
  optional string obsolete_water_mark = 11;

  enum CopyrightStatus {
    LEGAL = 0;
    ILLEGAL = 1;
  }
  // Don't use obsolete_copyright_status field.
  //版权状态
  optional CopyrightStatus obsolete_copyright_status = 12 [default = LEGAL];

  // Don't use obsolete_illegal_reason field.
  // The reason for the video is illegal.
  //版权非法原因，已废弃
  optional string obsolete_illegal_reason = 13;

  // Don't use obsolete_source field.
  //来源，已废弃
  optional Source obsolete_source = 14;

  /**
   * 隐私设置信息，目前支持情况如下：<ol>
   * <li>支持通过open api和PC网页端来设置隐私。易转码及其他端上传入口将在后期提供支持</li>
   * <li>目前仅支持视频被设置为 公开和仅自己可见，后期支持输密码可播放。</li>
   * <li>对于设置为公开的视频，播放流程同之前 </li>
   * <li>对于设置为仅自己可见的私密视频, <ol>
   * <li>PC网页和 H5 需要支持，自己登陆正常播放，其他账号登录无法播放，各端根据情况，可以有不同的提示
   * <li>移动APP端， PC客户端（图文+列表）分版本和TV端，区分新老版本;新版本需要支持自己登陆正常播放，其他账号登陆无法播放;对于老版本，无论自己还是其他账号登陆一律不可播放</li>
   *  </ol></li>
   * <li> 搜索会屏蔽掉被设置为仅自己可见的私密视频; </li>
   * <li> 推荐会屏蔽掉被设置为仅自己可见的私密视频；</li>
   * <li>个人中心客人态会屏蔽掉被设置为仅自己可见的私密视频–</li>
   * <li>动态feed流过滤被设置为仅自己可见的私密视频</li>
   * </ol>
   **/
  optional PublicLevel public_level = 17 [default = PUBLIC];
  //用户最后更新时间
  optional int64 last_update_time = 18;
  //所属iqiyi频道id
  optional int64 iqiyi_channel_id = 19;
  //所属pps频道id
  optional int64 pps_channel_id = 20;
  //用户设置tag
  repeated string tag = 21;

  // Store the pps ugc channel(an episode set) id.
  //pps所属频道id
  optional int64 pps_ugc_collection_id = 22;

  // Define the creator, contributor and publisher for ugcEpisode.
  optional Metadata.Creator creator = 23;
  optional Metadata.Contributor contributor = 24;
  optional Metadata.Publisher publisher = 25;

  //如果隐私设置是密码保护，则在这里设置具体的密码；
  optional PublicConfiguration public_configuration = 26;

  optional Metadata.Dates dates = 27;
}


/**
 * @brief 元数据：PPS UGC频道元数据
 * @details PPS UGC频道元数据
 **/
message PpsUgcChannelMetadata {
  required int64 id = 1;

  required string name = 2;
  optional string description = 3;
  optional int64 user_id = 4;
  optional int32 class_id = 5;
  optional string create_time = 6;

  optional int64 last_update_time = 7;
  optional int32 channel_id = 8;
}

/**
 * @brief 元数据：直播视频引用
 * @details 用于支持对LiveEpisode的引用
 **/
message LiveMetaSummary {
  //直播室id
  required int64 id = 1;
  //直播室状态
  optional LiveStatus live_status = 2 [default = NOT_EXIST];

  // The begin and end time of episode or album  access to Live entity.
  //直播开始时间
  optional int64 entry_time = 3;
  //直播结束时间
  optional int64 exit_time = 4;

  // The time of default play. E.g: the value is 2013:11:29 11:11:11,
  // The player begin to play from this time.
  //默认开始时间
  optional Date default_begin_time = 5;

  // The max time(s) of the player permit to play back.
  //允许最大回看时间
  optional int32 look_back_max_duration = 6;

  // The delay time(s) between actual play and current live.
  //实际开始与当前直播延时
  optional int32 live_delay = 7;
}

/**
 * @brief 元数据：直播视频元数据
 * @details 直播视频元数据
 **/
message LiveMetadata {
  //直播室id
  required int64 entity_id = 1;
  //直播室名称
  required string title = 2;

  optional int64 start_time = 3;
  optional int64 end_time = 4;

  // The channel number of live stream signal.
  //直播码流信号频道号
  optional int32 live_stream_channel_number = 5;

  // The player scale: 4:3 or 16:9.
  //播放器比例
  optional string player_scale = 6;

  // Related to weibo of this entity.
  optional string weibo_topic = 7;

  // The length(s) of the live video's piece.
  //直播视频分段长度
  optional int32 video_piece_length = 8;

  // For player control audio track and language, e.g: left channel and chinese;
  // right channel and english.
  message AudioChannelLanguageControl {
    // The list of audio track.
    enum AudioTrackType {
      LEFT_CHANNEL = 1;
      RIGHT_CHANNEL = 2;
    }
    optional AudioTrackType audio_track_type = 1;

    // Control the language of audio channel, e.g: chinese,english...
    optional string language = 2;
  }
  //播放器声道与语言控制
  repeated AudioChannelLanguageControl audio_channel_language_control = 9;

  // The water mark exists or not
  //水印标识
  optional bool water_mark_flag = 10;
}

/**
 * @brief 元数据：TV直播视频元数据，废弃不用
 * @details TV直播视频元数据，废弃不用
 **/
message TvLiveCenterMetadata {
  required int64 entity_id = 1;

  required string name = 2;

  optional string description = 3;
}

/**
 * @brief 元数据：资源位元数据
 * @details 资源位元数据
 **/
message ResourceMetaSummary {
  //资源位id
  required int64 entity_id = 1;

  //视频播放次序
  optional int32 order = 2;

  //资源位标题
  optional Title title = 3;

  //缩略图
  optional string thumbnail_url = 4;

  /**
   *@brief   资源位的url
   *@details 如果编辑在资源位手动修改了url，才会有entity_url。否则需要根据奇谱Id找到对应的url。
   * 所以这个值，在乐高系统中和奇谱中，会不一样。 
  **/
  optional string entity_url = 5;

  //一句话推荐
  optional string prompt_description = 6;

  /**
  * 仅供临时、内部使用的属性值，可以使用key-value键值对来保存。
  * 注意：奇谱项目组强烈**不**建议使用Key-Value来存取属性。
  * 如有需要，请务必事先和奇谱项目组沟通，确认无问题后才能使用。 
  * 当前已知的key-value如下:<ol>
  * <li>platform: </li>
  * <li>phone_show_platform: </li>
  * <li>page_target_blank：</li>
  * <li>defImg_baidu:</li>
  * </ol>
  **/
  repeated KeyValuePair key_value_pair = 7;

  //描述
  optional string desc = 8;

  //本条目创建的时间
  optional int64 create_time = 9;

  //更新时间
  optional int64 update_time = 10;
  //TV端个性图片地址
  optional string special_thumbnail_url = 11;
}

/**
 * @brief 元数据：分甘同味元数据
 * @details 分甘同味元数据
 **/
message OrganizationSharePartnerMetadata {
 //分甘同味机构id
  required int64 entity_id = 1;

  // E.g: China Central Television.
  //全称
  required string full_name = 2;

  // E.g: CCTV
  //昵称
  optional string nick_name = 3;
  //微博url
  optional string weibo_url = 4;
  //微信二维码url
  optional string weixin_two_dimensional_code_url = 5;
  //图标url
  optional string logo_url = 6;

  // E.g: cctv
  //主页短域名
  optional string home_page_short_domain_name = 7;

  optional string description = 8;

  // Each Organization has puyu-id, and in album & episode share_partner.id is puyu-id.
  // So here stores it to associated with qipu-id.
  optional int64 organization_puyu_id = 9;
  //机构类型
  optional Source.SourceType organization_type = 10 [default = PPC];

  // If the type of organization is UGC, then we must store passport id, because we need
  // to aggregate share partners according to it.
  //上传者id
  optional int64 uploader_id = 11;
}

/**
 * @brief 元数据：广告素材元数据
 * @details 广告素材元数据
 **/
message AdsMaterialMetadata {
  required int64 entity_id = 1;

  // An entity's main name
  //广告素材正式名称
  optional string proper_title = 2;
}

/**
 * @brief 元数据：AppGroup元数据
 * @details AppGroup元数据
 **/
message AppGroupMetadata {
  required int64 entity_id = 1; //app id
  //名称
  optional Title title = 2;
  //程序包名称
  optional string program_package_name = 3;

  enum AppType {
    GENERAL = 1;
    GAME = 2;
  }
  //GENERAL，GAME应用类型
  optional AppType app_type = 4;

  optional string description = 5;

  // ISO Code standard
  repeated string language = 6;
  //创建时间
  optional int64 create_time = 7;
  //开发者id
  optional int64 developer_id = 8;

  optional string developer_name = 10;

  // 页游的官网.
  // 目前web页面处理逻辑是: 点击页游图片进入home_page_url,点击进入游戏,进入detail_page_url.
  //应用主页url
  optional string home_page_url = 9;
  //分发渠道
  optional string distribute_channels = 11;

  optional int64 app_store_id = 12;

  enum AppSource{
    UNKNOWN_APP_SOURCE = -1;
    //IQIYI运营录入；
    BY_IQIYI = 1;
    //PPS运营录入；
    BY_PPS = 2; 
    //开发者上传
    BY_DEVELOPER = 3; 
    //自动抓取
    BY_CRAWLER = 4; 
  }
  optional AppSource app_source = 13;

  //具有相同group id的多个app归为一组，表示这几个app是类似的同一个app，其他功能会在这里面做筛选
  optional int64 group_id = 14;
}

/**
 * @brief 元数据：直播视频元数据
 * @details 直播视频元数据
 **/
message LiveEpisodeMetadata {
  // The start & end times of the live program.
  optional int64 start_play_time = 1;
  optional int64 stop_play_time = 2;

  optional string program_name = 3;

  optional string description = 4;

  repeated string tag = 5;

  /**
   * 现有的开始结束时间是指 直播节目比如 陕西卫视小爸爸31集  14:24-15:11 ，这个是节目本身的开始时间结束时间。
   * 新增的开始时间和结束时间是指：当前直播频道这路流在播放内容的开始时间结束时间。
   * 比如春晚时间开始是2月18日20:00，但是可能2月17日这路流就开始放点播节目了。
   * 直播频道状态为“有效”的开始时间和结束时间。 
   **/
  optional int64 start_stream_time = 6;
  optional int64 end_stream_time = 7;

  // 大V用户给粉丝的预告时间, 预告开始时间(移动到根字段)
  //optional int64 notice_start_time = 8;
  // 大V用户给粉丝的预告时间, 预告结束时间(移动到根字段)
  //optional int64 notice_end_time = 9;
}

/**
 * @brief 元数据：奇趣标签元数据
 * @details 奇趣标签元数据
 **/
message QiquTagMetadata{
  required int64 entity_id = 1;
  optional string name = 2;
  optional string url = 3;
  // 系统自动标记的类别.
  repeated QiquTagCategory category = 4;
  repeated QiquTagSource source = 5;

  // The reliability of tag.
  optional float confidence = 6;


  // The type of entity which can be added the qiqu tag.
  repeated EntityIdType entity_type = 7;

  optional int64 creator_id = 8;
  optional int64 auditor_id = 9;

  // 由人工标记的类别
  message QiquManualCategory {
    // 第一级类别名称.
    optional string level1 = 1;
    // 第二级类别名称.
    optional string level2 = 2;
    // 第三级类别名称.
    optional string level3 = 3;
  }
  // 标签上由人工标记的类别.
  repeated QiquManualCategory manual_category = 10;
}

/**
 * @brief 元数据：奇趣标签引用
 * @details 奇趣标签引用
 **/
message QiquTagSummary {
  required int64 qiqu_tag_id = 1;
  optional string name = 2;
  optional string url = 3;
  repeated QiquTagCategory category = 4;
  repeated QiquTagSource source = 5;

  // The reliability of tag.
  optional float confidence = 6;
}

/**
 * @brief 元数据：话题元数据
 * @details 话题元数据
 **/
message TopicMetadata {
  required int64 entity_id = 1;

  // 话题名
  optional string name = 2;

  // 话题页url
  optional string url = 3;

  // 征集开始时间；
  optional int64 collect_start_time = 4;

  // 征集结束时间；
  optional int64 collect_end_time = 5;

  // 话题页面有效标识
  enum PagePublishStatus {
    // The data of the page is not selected to use
    PAGE_WAIT = 0;
    // The page is online
    PAGE_ONLINE = 1;
    // The page is offline
    PAGE_OFFLINE = 2;
    // The page is use to preview and backup
    PAGE_BACKUP = 3;
    // The page for the prevue(The movie channel poster)
    PAGE_PREVUE = 5;
    // The page for baidu,360 and so on pre-push
    PAGE_THIRD_PARTY = 6;
  }
  optional PagePublishStatus page_publish_status = 6;

  // 话题描述
  optional string description = 7;

  // 征集规则
  optional string rule = 8;

  // 奖品
  optional string award = 9;

  // 参与方式
  optional string participation = 10;

  // 征集时间
  optional  string collect_date = 11;

  // 获奖名单, 多个用户UID
  repeated int64 award_uploader_list = 12;

  // 头图url;
  optional string banner_url = 13;

  // 封面图url;
  optional string logo_url = 14;

  // 头条视频奇谱ID;
  optional int64 top_video_id = 15;

  // 优秀视频关联播单id;
  optional int64 collection_id = 16;

  // 是否加密
  optional PublicLevel public_level = 17 [default = PUBLIC];

  // 如果隐私设置是密码保护，则在这里设置具体的密码；
  optional PublicConfiguration public_configuration = 18;
}

/**
 * @brief 元数据：类别引用
 * @details 类别引用
 **/
message CategorySummary {
  // 分类id.
  // 只写叶子节点.
  //所引用的category id;奇谱中category id是33结尾的，和现有的category 映射关系是：category_id * 100 + 33 = qipu_id;
  required int64 category_id= 1;
  // 分类名.
  // 只写叶子节点.
  optional string name = 2;

  // 权重.
  optional int32 weight = 3;
  // 级别.
  optional int32 level = 4;
  //在所在的category下的序号；
  optional int64 order = 5;
  // category的icon
  optional string icon = 6;

  //浮点类型的权重
  optional float score = 7;
}

/**
 * @brief 元数据：电影节元数据
 * @details 电影节元数据
 **/
message FestivalMetadata {
  //奇谱ID
  required int64 entity_id = 1;
  //电影节或颁奖典礼的中文全称、外文全称、别名、描述介绍信息
  optional Title title =2;
  //官方网站的URL地址
  optional string official_url = 3;
  // CreateTime是创建时间，设置的是年份
  //创办时间—创办该奖项或电影节的第一届年份
  optional int64 create_time = 4;
  //创办单位—奖项或电影节的发起方
  optional string create_unit = 5;
  //届数—共举办**届
  optional int32 series = 6;
  //地区信息
  optional RegionType region_type = 7;

  enum Type {
    //电影节
    FILM = 1;
    //颁奖典礼
    AWARD = 2;
    //电视节
    TV = 3; 
    //动漫
    COMIC = 4; 
  }
  //类型，电影节或颁奖典礼
  optional Type type = 8;

  optional string region_type_name = 9 [(enum_option).field = "region_type"] ;

  // 一句话推荐
  optional string prompt_description = 10;
  // 推荐级别
  optional RecommendLevel editor_recommend_level = 11;
  // 电影节图标
  optional string icon = 12;
}

/**
 * @brief 获奖信息
 * @details 获奖信息。乐高写入到FestivalSeries中，奇谱同步程序会自动补全所有信息后，同步到对应的creator\contributor\episode\album下。同步时，先根据festival删除掉所有和这个电影节相关的获奖信息，再重新写入相关信息。
**/
message AwardSummary {
  //必填，唯一索引
  required int64 award_id  = 1; 

  //所在电影节ID，由奇谱同步写入
  optional int64 festival_id = 2;

  //电影节名称，由奇谱同步写入
  optional string festival_name = 3; 

  //获奖状态，由奇谱同步写入；
  optional AwardStatus award_status = 4;

  //届次，从对应的FestivalSeries中同步过来；
  optional int32 series = 5;

  //年份，从对应的FestivalSeries中同步过来
  optional int32 year = 6;

  //英文名称
  optional string name = 7; 
  //编号
  optional int32 order = 8; 
  //显示名称
  optional string display_name = 9; 

  //获奖的制作者和角色
  optional Metadata.Creator creator = 10;
  //获奖的演员和角色
  optional Metadata.Contributor contributor = 11;
  //获奖影片
  repeated MetaSummary episode_summary = 12;
  //获奖电视剧
  repeated MetaSummary album_summary = 13;

  //获奖节目资料
  repeated MetaSummary film_tv_summary = 15;

  enum Type {
    CHARACTER_AWARD = 1;
    WORKS_AWARD = 2;
  }
  optional Type type = 14;
}


/**
 * @brief 元数据：角色元数据
 * @details 角色元数据
 **/
message CharMetadata {
  required int64 entity_id = 1;
  //角色名称全称，如哆啦A梦
  optional string proper_name = 2;
  optional string display_name = 3;
  optional string pingyin_name = 4;
  optional string english_name = 5;
  repeated string alias_name = 6;
  optional string proper_name_initial = 7;
  repeated string former_name = 8;

  enum CharType{
    UNKNOWN_CHTYPE= -1;
    //卡通形象
    CARTOON = 0; 
    //真人形象
    LIVE_ACTION = 1;
  }
  optional CharType char_type = 9;

  enum GenderPreference {
    UNKNOWN_PREFERENCE = -1;
    NONE_PREFERENCE = 1;
    MALE_PREFERENCE = 2;
    FEMALE_PREFERENCE = 3;      
  }
  optional GenderPreference gender_preference = 10;

  enum AgePreference{
    UNKNOWN_AGE_PREFERENCE = -1;
    AGE_0_3 = 1;
    AGE_4_6 = 2;
    AGE_7_10 = 3;
    AGE_11_13 = 4;
    AGE_14_18 = 5;
    AGE_18 = 6; 
  }
  repeated AgePreference age_preference = 11;

  optional string description = 12;
  //角色职业
  repeated CharacterJob job = 13;
  //主推的具体年龄（值1-13岁）
  repeated int32 precise_age_preference = 14;
}

/**
 * @brief 元数据：人际关系
 * @details 人际关系
 **/
enum InterpersonalRelation {
  UNKNOWN_INTERPERSONAL_RELATION = -1;
  FATHER = 1;
  MOTHER = 2;
  WIFE = 3;
  HUSBAND = 4;
  SON = 5;
  DAUGHTER = 6;
  BAND = 7;
  TEACHER = 8;
  STUDENT = 9;
  FRIEND = 10;
  ENEMY = 11;
  BROTHER = 12;
  SISTER = 13;
  OTHER_RELATION = 100;
}

/**
 * @brief 元数据：角色引用
 * @details 角色引用
 **/
message CharacterSummary {
  //被关联的角色的ID
  required int64 entity_id = 1;
  repeated InterpersonalRelation relation = 2;
}

/**
 * @brief 元数据：图谱计算.分类体系
 * @details 图谱计算.分类体系
 **/
message TaxonomyMetadata{
  optional int64 entity_id = 1;
  optional string proper_title = 2;
  optional string description = 3;
  // 前端展示
  optional string display_name = 4;
}

/**
 * @brief 对外合作
 * @details 记录对外合作相关的运营信息
 *
**/
message Cooperation {
  // 合作ID， 由奇谱产生。目前产生规则是：原数据ID * 100 + 39;
  // 可以根据这个ID定位到对应的奇谱数据
  optional int64 coop_id = 1; 
  // 如果专辑中包含付费节目（混合专辑或者是全部节目付费），就置为true；否则，置为false
  // 更新策略同is_boss_mixer的KV值。如果这个值修改了，则last_update_time也需要更新
  optional bool is_boss_mixer = 2; 
  // 本条数据最后更新时间，在数据更新时由奇谱写入；
  optional int64 last_update_time = 3; 
}

/**
* @brief 字段类型：和语言无关的Category设置；
* @details 和语言无关的Category设置；
**/
message CategoryMetadata{
  optional int64 entity_id = 1;
  //所在的栏目的ID
  optional int64 channel_id = 2;

  //所在的栏目的名称
  optional string channel_name = 3;

  //三级分类的tag id
  optional int64 tag_id = 4;
  
  //用在三级分类标签中的Key
  optional string category_key = 6;

  //层级，确认是从0还是1开始计算。
  optional int32 level = 9;

  //前端显示，无用；
  optional string display_type = 11;
  //所属平台，无用；
  optional string platform = 12;
  //vrs子类型
  optional int32 vrs_sub_type = 16;
  //无用。
  optional int32 type_order = 18;

  //值为 id / 100 (即去掉id的33后缀), 面向索引服务
  optional int64 old_id = 19;
}

//投票类型
enum VoteType{
  UNKNOWN_VOTE = -1;
  //视频打点投票
  SPOT_VOTE = 1;
  //pk投票
  PK_VOTE = 2;
  //打榜投票
  RANKING_VOTE = 3;
}
/**
 *  关联投票。目前投票信息尚未进入奇谱。
 *
 **/
message VoteSummary{
  //投票ID，目前投票未进入奇谱；
  required int64 vote_id = 1;

  //投票类型，默认为打点投票；
  optional VoteType vote_type = 2 [default = SPOT_VOTE];

  //实体ID，可以是视频或者专辑；
  optional int64 target_id =3;

  //投放端
  repeated PlayPlatform platform = 4;
}

/**
*@brief 图书元数据
*@details 图书元数据
*
**/
message BookMetadata{
  required int64 entity_id = 1;

  //名称，包括书名、别名、外文名等。
  optional Title title = 2;

  //总字数
  optional int64 word_count = 3;

  //图书类型，分出版物、网络文学
  optional BookType book_type = 4;

  //对于章节，设置章节类型
  optional VolumeType volume_type = 5;

  //简介
  optional string description_brief = 6;

  //一句话推荐
  optional string prompt_description = 7;

  //作者。 所有作者必须进入到People库中。
  repeated string author = 8;

  //译者。 所有作者必须进入到People库中。
  repeated string translator = 9;

  // 作者id(使用author_summary)
  //repeated int64 author_id = 10;
  // 来源类型
  optional BookSourceType source_type = 11 [default = BOOK_CP];
  // 图书创建时间
  optional int64 create_time = 12;

}

/**
* 分年电影节元数据
**/
message FestivalSeriesMetadata{
  //奇谱ID
  required int64 entity_id = 1;

  optional int32 series = 2;
  //年份
  optional int32 year = 3;
  //举办地点
  optional string venue = 4;
  //举办时间段
  optional string host_time_interval = 5;
  // 电影节专题页的url
  optional string subject_page_url = 6;
  // 编辑填写，推荐组根据这个时间来展现电影节数据
  optional int64 recommendation_start_time = 7;
  optional int64 recommendation_end_time = 8;
}

/**
* 电影节奖项元数据；
*
**/
message FestivalAwardMetadata{
  //奇谱ID
  required int64 entity_id = 1;
  //名称
  optional string name = 2;
  //编号
  optional int32 order = 3;
  //显示名称
  optional string display_name = 4;
  // 奖项id
  optional int32 award_type_id = 5;
  // 奖项 中文全称、外文全称、别名、描述介绍信息
  optional Title title = 6;
}

/**
 *  @brief 图谱实体元数据
 *  @details图谱实体元数据，数据由奇搜图谱团队写入，关于本实体定义中所涉及的内容，请与苗艳军 miaoyanjun@qiyi.com 咨询
 **/
message GraphEntityMetadata {
  required int64 entity_id = 1; 
  optional GraphEntityType type= 2 [deprecated = true];// GraphEntityType已废弃
  optional string name = 3; 
  repeated string  alternative_name = 4;
  optional string type_string = 5;// 新增Graph实体类型，字符串格式便于扩展
}

message Relation{
  optional int64 graph_id = 1; //代表与当前实体有关系的一个实体ID
  optional int64 qipu_id = 2; //代表与当前实体有关系的一个实体已经在奇谱存在时，对应的奇谱ID
  optional string relation_name = 3 [deprecated = true]; //代表关系的描述
  //实体属性
  optional GraphEntityMetadata entity_meta = 4;
  //关系明细
  repeated RelationDetail relation_detail = 5;
}

message ItemBrandMetadata {
  required int64 entity_id = 1;
  //品牌的描述、介绍
  optional string story = 2;
  //创始人
  optional string creator = 3;
  //品牌的隶属公司
  optional string owner = 4;
  //创建品牌的国家
  optional Location country =5;
  // logo图片的url
  repeated string logo_image_url = 6;
  //专题页的URL地址
  optional string subject_page_url = 7;
  //品牌涉及的行业
  repeated Industry industry = 8;
  //品牌关联的uid
  optional int64 owner_passport_id = 9;
}

message PaopaoSummary {
  //paopao id不再使用
  optional int64 paopao_id = 1 [deprecated = true];
  optional int64 circle_id = 2;
  // 旧枚举，和common.CircleType重复，不再使用
  enum CircleType{
    FANS = 0;
    STAR = 1;
    TOPIC = 2;
    ACTIVITY = 3;
    BOOK = 4;
  }
  // 旧枚举，和common.CircleType重复，不再使用
  optional CircleType circle_type = 3 [deprecated = true];
  // 圈子类型
  optional knowledge.pub.CircleType circle_id_type = 4;
  // 明星墙状态
  optional StarWallStatus star_wall_status = 5;
  //图集在圈子中的排序
  optional int32 image_album_order = 6;
}

message PaopaoMetadata {
  // 泡泡系统中的id
  required int64 entity_id = 1;
  // 泡泡名称
  optional string name = 2;
  // 泡泡头像（大图）
  optional string description = 3;
  // 泡泡最大人数
  optional int32 max_person_count = 4;
  // 泡泡状态
  optional PaopaoStatus paopao_status = 5;
  // 泡泡类型：主、副本
  optional PaopaoSubjectType subject_type = 6;
  // 主泡泡Id
  optional int64 parent_id = 7;
  // 泡泡类型
  optional PaopaoType paopao_type = 8;
  // 入口问题id
  optional int64 entry_question_id = 9;
  // 创建者
  optional int64 creator = 10;
  // 泡泡头像
  optional PaopaoImage paopao_image = 11;
  message PaopaoImage {
    optional string icon_normal = 1;
    optional string icon_large = 2;
  }
  // 泡泡标签
  repeated string tag = 12;
 
}

message CircleMetadata {
  // 老圈子id
  required int64 entity_id = 1;
  // 圈子类型
  optional CircleType circle_type = 2;
  // 圈子名称
  optional string name = 3;
  // 圈主
  optional int64 master_id = 4;
  // 圈子描述
  optional string description = 5;
  // 音频地址
  optional string audio = 6;
  // 明星排行图（圈子）
  optional string rank_image = 7;
  // 明星元数据（圈子）原json字段，不再使用
  optional string metadata = 8 [deprecated = true];
  // 明星墙状态
  optional StarWallStatus star_wall_status = 9;
  // 圈子头像
  optional CircleImage circle_image = 10;
  message CircleImage {
    optional string icon = 1;
    optional string posters = 2;
  }
  
  optional int64 creator_id = 11; //创建者
  optional int64 operator_id = 12;//更新者 
  optional bool is_master_competitive = 13 [default = true];//圈主是否可抢
  
  optional string promoted_image = 14; //广场推广图
  
  optional ActivityCircleContent activity_content = 15;
  optional FanCircleContent fan_content = 16;
  // 管理员
  repeated int64 admin_id = 17;
  //圈主身份
  optional int32 master_type =18;
  //是否展示推荐精华
  optional bool is_show_elite = 19 [default = true];
  // 0:没有过圈主 1:有过圈主
  optional int32 had_master = 20 [default = 1];
  //业务类型;0：明星业务，2：视频业务，3：运营活动业务，4：阅读业务，5：爱频道业务，6：总编室业务
  optional int32 business_type = 21;
  // 圈子标签
  optional int32 circle_mark =22;
  //圈子业务类型
  optional CircleBusinessType circle_business_type = 23 [default = UNKNOWN_CIRCLE_BUSINESS_TYPE];
}

message ActivityCircleContent {
  optional bool is_display_rule  = 1[default = true]; //活动圈是否展示规则入口
  optional string rule_image = 2; //活动圈子规则图片
  optional string rule_description = 3; //活动圈子规则描述
  repeated FeedContentType publish_feed_type = 4; //活动图书圈子发布feed类型
}

message FanCircleContent {
  optional string group_chats_image = 1; //粉丝圈子群聊列表图
  repeated FanCircleTabType tab_type = 2; //粉丝圈子页签
  repeated FanCircleCardType card_type = 3; //粉丝圈子card签
}

//message CircleSummary {
//  optional int64 circle_id = 1;
//  enum CircleType{
//    FANS = 0;
//    TOPIC = 2;
//    ACTIVITY = 3;
//  }
//  optional CircleType circle_type = 2;
//}

// 直播节目道具开关
message Prop{
  //道具渠道编号
  optional string channel_code = 1;
  //是否启动
  optional bool is_enabled = 2;
}

message FeedMetadata {
  // 用户id
  optional int64 passport_id = 1;
  // feed描述
  optional string description = 2;
  // feed类型
  optional FeedContentType content_type = 3;
  // feed子类型
  optional FeedContentExtendedType content_extended_type = 4;
  // feed来源
  optional FeedSourceType source_type = 5;
  // feed发布城市
  optional Location location = 6;
  // 长图文的抓取来源(已废弃)
  optional CrawledSource crawled_source = 7[ deprecated = true ];
  // 指纹信息
  optional string fingerprint = 8;
  // 抓取发布类型
  optional CrawledUserType crawled_user_type = 9;
  // feed标题
  optional Title title = 10;
  // 长图文的抓取来源
  // 0: unkown
  // 1: 泡泡
  // 2: 新浪微博
  // 3: 搜狐娱乐
  // 4: 兴趣部落
  // 5: 新浪
  // 6: 今日头条
  // 7: 微信
  // 8: 橘子娱乐
  // 9: 腾讯新闻
  //10:媒资
  optional int32 crawled_source_code = 11;
  // 用户身份
  optional CircleFeedCommentUserIdentity user_identity = 12;
  //0代表微博普通用户
  //1代表微博大V用户
  optional int32 crawled_source_is_big_v = 13;
  //0代表从微博抓取的普通feed
  //1代表从微博抓取的加精feed
  optional int32 crawled_source_is_selected = 14;
  //feed是否发布在了主圈子里
  optional bool is_in_master_circle = 15 [default = false];
  //素材ID
  optional int64 material_id = 16;
  //套壳前的播单02id
  optional int64 collection_id = 17;
  //信息流来源id
  optional int64 beehive_source_id = 18;
  //关联作品id,即feed后可以关联一个作品的超链接，作品可以是书（0070），章（0170）等。
  optional int64 related_works_id = 19;
}

// feed子类型
message FeedContentExtendedType {
  // 心情类型
  optional FeedMoodExtendedType mood_extended_type = 1;
  // 活动类型
  optional FeedActivityExtendedType activity_extended_type = 2;
  // 小视频来源
  optional FeedShortVideoExtendedType short_video_extended_type = 3;
  // 小尾巴扩展类型
  optional FeedCometExtendedType comet_extended_type = 4;
  // 直播feed扩展类型
  optional FeedLiveVideoExtendedType live_video_extended_type = 5;
  // 我拍feed扩展类型
  optional FeedSelfVideoExtendedType self_video_extended_type = 6;
  //啪啪奇子类型数据
  optional PapaqiExtendedType papaqi_extended_type = 8 [default = UNKNOWN_PAPAQI_EXTENDED_TYPE];
  //表白feed扩展类型
  optional FeedConfessionExtendedType confession_extended_type = 7 [default = UNKNOWN_CONFESSION_EXTENDED_TYPE];
  //笔记feed子类型
  optional FeedNotesExtendedType notes_extended_type = 9 [default = UNKNOWN_FEED_NOTES_EXTENDED_TYPE];
}


// Feed数据
message FeedContent {
  optional bool is_text = 1;
  repeated FeedContentSource source = 2;
  optional string title = 3; // feed标题
  optional string vote_title = 4; // 投票标题
  repeated string options = 5; // 投票选项
  optional string image_text_url = 6; // 长图文url
  repeated string pic_url = 7; // 图片投票地址
}

// Feed content source
message FeedContentSource {
  optional int64 duration = 1;
  optional string source_url = 2;
  optional string thumbnail = 3;
  optional int64 tv_id = 4;
  optional string tv_title = 5;
  optional int64 album_id = 6;
  optional bool is_gif = 7;
  optional string cdn_url = 8;//热点事件获取图片
  //小视频上传方式
  optional FeedShortVideoUploadType short_video_upload_type = 9 [default = UNKNOWN_FEED_SHORT_VIDEO_UPLOAD_TYPE];
  //图片生产后的所有尺寸。记录的格式为：110_70,145_90,116_65,160_90,170_100,192_108,220_124,284_160,320_180,480_270,180_101,1080_608
  optional string image_size = 10;
  //是否为动图
  optional bool is_dynamic_image = 11 [default = false];
}

message BookAuthorMetadata {
  required int64 entity_id = 1;
  // passportuid
  optional int64 uid = 2;
  // 作者名称
  optional string name = 3;
  // 作者简介
  optional string description_brief = 4;
  // 是否有签约图书(有一本书签约则此字段为true)
  optional bool book_signing_status = 5 [default = false];
  // 作者类型
  optional BookAuthorType type = 6;
  // 业务
  repeated BookBusinessType business_type = 7;
}

message EventMetadata {
  required int64 entity_id = 1; // ID of this entity
  // 事件名称
  optional string name = 2;
  // 简介
  optional string description_brief = 3;
  // 头像
  optional string image = 4;
  // 封面图
  optional string cover = 5;
  // 是否有效
  optional bool is_valid = 6[default = true];
  // 封面图7.7
  optional string cover_7_7 = 7;
  //简介feed id
  //简介改为使用feed装在，本字段用于存储关联简介feed的id。
  optional int64 description_feed_id = 8;
}

message CompetitionMetadata {
  // 赛事名称
  optional Title title = 1;
  // 赛事描述
  optional Description description = 2;
  // 赛事举办地
  repeated Location holding_place = 3;
  // 赛事开始时间
  optional Date start_date = 4;
  // 赛事结束时间
  optional Date end_date = 5;
  // 赛事关键字
  optional string keyword = 6;
  // 赛事类型
  optional CompetitionType type = 7;
  // 赛季/届次
  optional string session = 8;
  // 封面图
  optional string cover = 9;
  // PC专题页URL
  optional string pcw_url = 10;
  // H5专题页URL
  optional string h5_url = 11;
  // 上线时间段
  optional Date online_date = 12;
  // 下线时间段
  optional Date offline_date = 13;
  //赛事项目
  optional CompetitionEvent event = 14 [default = UNKNOWN_COMPETITION_EVENT];
}

message MatchSummary {
  // 赛程id
  optional int64 id = 1;
  // 赛程名称
  optional string title = 2;
  // 开始时间
  optional Date start_date = 3;
}

message TrophyListSummary {
  // 榜单id
  optional int64 id = 1;
  // 类型
  optional TrophyListType type = 2;
}

message CompetitorInfo {
  // 运动队/运动员ID
  optional int64 id = 1;
  // 组别
  optional string group = 2;
  // 运动队/运动员名称
  optional string name = 3;
  // 运动队/运动员logo
  optional string logo = 4;
  // 比赛结果
  optional CompetitionResultType result_type = 5;
  // 得分
  optional int32 score = 6;
  // 主客场类型
  optional HostGuestType host_guest  = 7;
  // 所在国家
  optional Location location = 8;
  //比赛选手
  repeated MatchPlayer player = 9;
  //比赛每小节结果
  repeated MatchInningResult inning_result = 10;
  //比赛结果
  optional string result = 11;
  //选手类型
  optional CompetitorType competitor_type = 12 [default = UNKNOWN_COMPETITOR_TYPE];
}

message MatchMetadata {
  // 赛程名称
  optional Title title = 1;
  // 开始时间
  optional Date start_date = 2;
  // 结束时间
  optional Date end_date = 3;
  // 比赛场地
  optional string location = 4;
  // 比赛场次
  optional int32 order = 5;
  // 组别
  optional string group = 6;
  // 轮次
  optional int32 round = 7;
  // 比赛阶段
  optional MatchStage stage = 8;
  // 比赛类型
  optional MatchType type = 9;
  //分站赛标题
  optional string sub_match_title = 10;
  //比赛子类型
  optional SubMatchType sub_match_type = 11 [default = UNKNOWN_SUB_MATCH_TYPE];
}

message MatchBase {
  // 是否为精彩赛程
  optional bool is_distillate = 1;
  // 一句话推荐
  optional string prompt_description = 2;
  // 是否人工维护比赛状态
  optional bool is_manual_operate = 3;
  // 比赛状态
  optional MatchStatus status = 4;
  //h5专题页地址
  optional string h5_website_url = 5;
}

message CircleFeedCommentMetadata {
  // 用户id
  optional int64 user_id = 1;
  // 评论所属的feedid
  optional int64 comment_id = 2;
  // 评论内容
  optional string content = 4;
  // 发布时间，单位为秒
  optional int64 create_time = 5;
  // 业务方类型
  optional CircleFeedCommentBusinessType business_type = 6;
  // 楼层
  optional int64 floor = 7;
  // 用户身份
  optional CircleFeedCommentUserIdentity user_identity = 8;
  // 评论所属feed的发布时间
  optional int64 feed_create_time = 9;
  // 被特殊用户点赞、回复过
  optional bool vip_focus = 10[default = false];
}

message ComicBookMetadata{
  required int64 entity_id = 1;

  // 名称，包括书名、别名、外文名等。
  optional Title title = 2;

  // 总页数 从ComicBook.Metadata column中移出，单独列出来（metadata由媒资维护，这两个字段需要移出来由运营维护）
  optional int64 online_page_count = 3 [deprecated = true];

  // 漫画类型
  optional ComicBookType book_type = 4;

  //简介
  optional string description_brief = 5;

  //一句话推荐
  optional string prompt_description = 6;

  //译者
  repeated string translator = 7;

  // 来源类型
  optional BookSourceType source_type = 8 [default = BOOK_CP];

  // 阅读顺序
  optional BookReadOrder read_order = 9;

  // 漫画总话数 从ComicBook.Metadata column中移出，单独列出来（metadata由媒资维护，这两个字段需要移出来由运营维护）
  optional int64 chapter_count = 10 [deprecated = true];

  // 创建时间
  optional int64 create_time = 11;
}

message ComicBookProperty {
  // 受众
  repeated BookSuitableGroup suitable_group = 1;
  // 标签
  repeated string book_tag = 2;
  // 自定义标签
  repeated string custom_tag = 3;
  // 适用年龄
  optional BookAgeRating age = 4;
}

message ComicBookChapterMetadata{
  required int64 entity_id = 1;

  // 名称
  optional Title title = 2;

  // 序号
  optional int32 chapter_order = 3;

  // 图片总数量
  optional int64 page_count = 4;
}

message ContentProviderMetadata {
  required int64 entity_id = 1;
  // passportuid
  optional int64 uid = 2;
  // cp名称
  optional string name = 3;
  // cp简介
  optional string description_brief = 4;
  // cp业务
  optional BookBusinessType business_type = 6;
}
// 用户特征
message FeedUserCharacteristics {
  // 用户身份
  optional CircleFeedCommentUserIdentity user_identity = 1;
  // 总数
  optional int64 count = 2;
}

message OnlineScheduleList {
  message OnlineSchedule {
    // 预计上线时间
    optional Date expected_online_date = 1;
    //更新到第X集
    optional int32 episode_order = 2;
    //更新到第X期
    optional Date episode_date = 3;
    //排片表类型
    optional OnlineScheduleType online_schedule_type = 4 [default = ONLINE_SCHEDULE_TYPE_FREE];
  }
  //排片表list
  repeated OnlineSchedule online_schedule = 1;
}

message SubjectPageMetadata {
  // 页面名称
  optional string name = 1;
  // 页面类型
  optional SubjectPageType page_type = 2 [default = SUBJECT_PAGE_TYPE_TOPIC];
  // 页面频道id
  optional int64 channel_id = 3;
  // 页面频道名称
  optional string channel_name = 4;
  // 业务类型
  optional SubjectPageBusinessType business_type = 5;
}

message SubjectPageAccessPlayControl {
  // 平台
  optional PlayPlatform play_platform = 1;
  // 支持展现
  optional SubjectPageAvailableStatus available_status = 2;
  // 上下线状态
  optional SubjectPageOnlineStatus online_status = 3;
  // 屏蔽搜索
  optional bool reject_search = 4 [default = false];
}

// 页面组件
message SubjectPageComponent {
  // 组件ID
  optional int64 component_id = 1;
  // 顺序 (按照从上往下排列)
  optional int64 order = 2;
  // 组件推送平台
  optional PlayPlatform play_platform = 3;
  // cardID
  optional int64 card_id = 4;
  // 组件名称
  optional string name = 5;
  // 标题
  optional string title = 6;
  // 标题跳转类型
  optional SubjectPageRedirectType title_redirect_type = 7;
  // 标题跳转id
  optional int64 title_redirect_id = 8;
  // 标题跳转URL
  optional int64 title_redirect_url = 9 [deprecated = true];
  // 运营位
  repeated SubjectPageComponentOperation operation = 10;
  // 端属性
  repeated SubjectPageComponentProperty property = 11;
  // 资源位奇谱id
  optional int64 resource_id = 12;
  // 扩展字段
  optional SubjectPageComponentExtended extended_property = 13;
  // 标题跳转URL(代替title_redirect_url)
  optional string title_redirect_link = 14;

  repeated KeyValuePair key_value_pair = 15;

  // 投票ID
  optional string vote_id = 16;

  // 背景图
  optional string background_image = 17 [deprecated = true];
  //订阅组件跳转类型
  optional SubscriptionRedirectType subscription_redirect_type = 18 [default = UNKNOWN_SUBSCRIPTION_REDIRECT_TYPE];
  //大V用户ID
  optional int64 iqiyihao_id = 19;
}

// 运营位
message SubjectPageComponentOperation {
  // 顺序
  optional int64 order = 1;
  // 运营位名称
  optional string name = 2;
  // 跳转类型
  optional SubjectPageRedirectType redirect_type = 3;
  // 跳转id
  optional int64 redirect_id = 4;
  // 跳转url
  optional string redirect_url = 5;
  // 跳转频道id
  optional int64 redirect_channel_id = 6;
  // 跳转片库页面
  optional string redirect_tag = 7;
  // 运营位类型
  optional SubjectPageComponentOperationType type = 8;
  // 运营位icon-pad端
  optional string icon_pad = 9;
  // 运营位icon-APP端
  optional string icon_app = 10;
}

message SubjectPageComponentProperty {
  // 平台
  optional PlayPlatform play_platform = 1;
  // 标题icon
  optional string title_icon = 2;
  // 显示数据个数
  optional int64 show_count = 3;
  // 头图banner
  optional string top_banner = 4;
  // 背景图
  optional string background_image = 5;
}

message SubjectPageComponentExtended {
  // 导语
  optional string top_introduction = 1;
  // 组件位置
  optional SubjectPageComponentPositionType position = 2[default = SUBJECT_PAGE_COMPONENT_POSITION_RECOMMEND_ABOVE];
  // 自动上线
  optional SubjectPageOnlineStatus auto_online_status = 3;
  // 是否取二级数据,TV端组件
  optional bool is_tv_load_playlist = 4 [default = false];
  // 是否有标题
  optional bool is_title_exist = 5 [default = false];
  // 配置属性，TV端card
  optional SubjectPageComponentExtendedCardPropertyType tv_card_type = 6 [default = SUBJECT_PAGE_COMPONENT_EXTENDED_CARD_PROPERTY_NONE];
}

message AudioInfo {
  // 定义多音轨中默认音轨的语种,和language_type值一致
  optional int32 default_language_type = 1;
}

message PaopaoActivityMetaData{
  required int64 entity_id = 1; // ID of this entity
  // 名称
  optional string name = 2;
  // 简介
  optional string description_brief = 3;
  // 封面图
  optional string cover = 4;
  // 标签
  optional string tag = 5;
  // 奖品描述 
  optional string award_brief = 6;
  // 奖品个数
  optional int64 award_count = 7;
  // 奖品图片
  optional string award_image = 8;
  //是否有效
  optional bool is_valid = 9;
  //开始时间
  optional int64 start_time = 10;
  //结束时间
  optional int64 end_time = 11;
}

message PaopaoCollectionMetadata {

  required int64 entity_id = 1; // ID of this entity

  optional Title title = 2;

  //前端展示的passport uid
  optional int64 display_uid = 3;

  optional string description = 4;

  // 套壳的专辑或播单的ID
  optional int64 api_id = 5;

  // 播单类型 0:剧集,1:综艺
  optional int32 type = 6;
}

//热点事件元数据
message HotEventMetadata {

  message Title {
    //事件原标题
    optional string proper_title = 1;
    //事件别名
    repeated string alias_title = 2;
  }
  optional Title title = 1;
  //来源类型
  enum SourceType {
    UNKNOWN_SOURCE_TYPE = -1;
    //百度
    SOURCE_TYPE_BAIDU = 1;
    //微博
    SOURCE_TYPE_WEIBO = 2;
    //人工创建
    SOURCE_TYPE_EDIT = 3;
    //自动发现
    SOURCE_TYPE_DISCOVERY = 4;
    //百科
    SOURCE_TYPE_BAIKE = 5;
  }
  optional SourceType source_type =2;
  //事件图片
  optional string image = 3;
  //事件简介
  optional string description = 4;
}

//图片summary
message FeedImageSummary{
  //名字
  optional FeedImageNameType feed_image_name = 1;
  //url
  optional string feed_image_url = 2;
}

// 广告Summary
message AdSummary {
  // 唯一标识，主键
  optional string uuid = 1;

  // 开始时间时间戳
  optional int64 start_time = 2;

  // 广告时长 单位为秒
  optional int64 time_length = 3;
}

message RelatedPaopaoSummary {
  // 排序，主键
  optional int64 order = 1;
  // 圈子id
  optional int64 circle_id = 2;
}
/**
 * @brief 游戏直播间相关信息
 **/
message GameLiveRoomSummary {
  //游戏直播间id
  optional int64 room_id = 1;
  //游戏直播间人气
  optional int64 room_popularity_count = 2;
}

// 基础信息(不分站点,不分语种,不分多发)
message MetaBasicInfo {
  // 科学分类
  optional int32 scientific_channel_id = 1;

  // 外文名
  repeated Title.ParallelProperTitle parallel_proper_title = 2;

  // 片长:minute
  optional int32 duration = 3;

  // 发行日期
  optional Date global_publish_date = 4;

  // 大陆上映时间
  optional Date china_publish_date = 5;

  // 奇艺上映时间
  optional Date qiyi_publish_date = 6;

  // 影院上线时间
  optional Date cinema_online_date = 7;

  // 影院下线时间
  optional Date cinema_offline_date = 8;

  // 第 X 季(部)
  optional int32 season = 9;

  // 第 X 期
  optional int32 phase = 10;

  // 总集数
  optional int32 total_number_of_episodes = 11;

  // 全球首映时间
  optional Date original_show_date = 12;

  // 播放源ID
  optional string play_source_id = 13;
}

// 多语种相关信息(不分站点,分语种,不分多发)
message MetaMultilingualInfo {
  // 语种
  optional Language language = 1;

  // 名称(节目原名/资料名)
  optional string proper_title = 2;

  // 别名
  repeated string alternative_title = 3;

  // 描述
  optional string description = 4;

  // 一句话短评
  optional string short_comment = 5;
  //关联资料标题
  optional string info_title = 6;
  //爱奇艺评级描述
  optional string qiyi_rank_description = 7;
  //爱奇艺评级关联图片地址
  optional string qiyi_rank_picture_url = 8;
  //其他国家评级（文本）
  repeated string other_countries_rank_description = 9;
}

// 电视台关联信息
message TvInfo {
  // 首播电视台
  optional string original_play_tv_station = 1;

  // 电视台首播日期
  optional string original_play_time = 2;

  // 电视台首播播放策略
  optional string original_play_frequency = 3;

  // 电视台
  repeated string play_tv_station = 4;
}

message RelatedPeopleInfo{
  message PeopleInfo{
    enum Role {
      CHIEF_EDITOR = 0;
      SUPERVISOR = 1;
      PRODUCER = 2;
      DIRECTOR =3 ;
      SCENARIST_DIRECTOR = 4;
      SONG_WRITER = 5;
      COMPOSER = 6;
      SCREENWRITER = 7;
      CHOREOGRAPHER = 8;
      ARRANGER = 9;
      PLANNER = 10;
      COPY_WRITER = 11;
      EDITOR = 12;
      JOURNALIST = 13;
      PHOTOGRAPHER = 14;
      VIDEOGRAPHER = 15;
      SCRIPT_CLERK = 16;
      TRANSLATOR = 17;
      CUTTING = 18;
      ART_DIRECTOR = 19;
      LIGHTING = 20;
      AUDIO = 21;
      AUDIO_MIXER = 22;
      MAKEUP_STYLING = 23;
      COSTUMER = 24;
      SINGING_DESIGN = 25;
      AUDIO_VIDEO_TECH = 26;
      // The people creates art
      CREATOR = 27;
      SCRIPT = 28;
      HOST = 29;
      CAST = 30;
      DUBBER = 31;
      COMMENTATOR = 32;
      SPEAKER = 33;
      INTERVIEWEE = 34;
      GUEST = 35;
      LETURER = 36;
      MAIN_CHARACTER = 37;
      DANCER = 38;
      SINGER = 39;
      ACTOR = 40;
      GROUP_ACT = 41;
      CONDUCTOR = 42;
      ACCOMPANIST = 43;
      COACH = 44;
      ACTION_DIRECTOR = 45;
      ADVISER = 46;
      // General character related the entity.
      RELATE = 47;
      JUDGE = 48;
      PLAYER = 49;
      // Famous actor
      STAR = 50;
      // The people works on art.
      ARTIST = 51;
    }

    // 影片中具体的角色
    message CharacterInfo{
      optional string character = 1;
      optional Language language = 2;
    }

    // 人物奇谱ID
    optional int64 entity_id = 1;

    // 角色：导演、演员等
    optional string entity_name = 2;

    optional string tw_entity_name = 3;

    repeated Role role = 4;

    repeated CharacterInfo character_info = 5;

    optional string other_information = 6;
  }

  // 导演
  message Creators{
    repeated PeopleInfo creator = 1;
  }

  // 主演和演员
  message Contributors{
    repeated PeopleInfo contributor = 1;
  }

  message PublishInfo {
    optional int64 entity_id = 1;
    optional Location place_of_publication = 2;
  }

  // 出版者
  message Publishers {
    repeated PublishInfo publishInfo = 1;
  }

  // 出品者
  message Producers {
    repeated PublishInfo publishInfo = 1;
  }

  // 导演信息
  optional Creators creators = 1;

  // 主演和演员信息
  optional Contributors contributors = 2;

  // 出版者信息
  optional Publishers publishers = 3;

  // 出品者信息
  optional Producers producers = 4;
}

// 相关角色信息
message RelatedCharacterInfo{

  // 角色信息
  message CharacterInfo{
    optional int64 entity_id = 1;
  }

  // 角色信息
  repeated CharacterInfo characters = 1;
}

message LiveRoomMetadata {
  // 主播信息
  message PresenterMetadata {
    // ID
    optional int64 entity_id = 1;
    // 昵称
    optional string nickname = 2;
    // 头像
    optional string head_portrait = 3;
  }

  // 主播信息
  optional PresenterMetadata presenter = 1;
  // 聊天室id
  optional int64 chat_room_id = 2;
  // 直播标题
  optional string live_room_title = 3;
  // 直播标签
  optional string live_room_tag = 4;
  // 直播类型
  optional LiveRoomType live_room_type = 5 [default = LIVE_ROOM_TYPE_GAME];
  // 业务线内部直播间id
  optional int64 live_room_id = 6;
}
/**
 * @brief 泡泡业务中kol用户认证系统，面向所有普通用户群体。
 **/
message KolUserIdentity {
  //kol认证类型
  optional KolUserIdentityType kol_identity_type = 1;
}
/**
 * @brief 关联商品
 **/
message CommoditySummary {
  //商品id
  optional int64 entity_id = 1;
  //商品展示顺序
  optional int32 order = 2;
}
/**
 * @brief 图集相关
 **/
message ImageAlbumSummary {
  //图集id
  optional int64 image_album_id = 1;
}
/**
 * @brief meta信息
 **/
message ImageAlbumMetadata {
  //标题
  optional string title = 1;
  //简介
  optional string description = 2;
  //封面图url
  optional string cover_image = 3;
  //封面图关联明星美图id
  optional int64 cover_image_id = 4;
}
/**
 * @brief 原始图片
 **/
message OriginalImage {
  //图片地址
  optional string url = 1;
  //图片文件大小(kb)
  optional int64 size_kb = 2;
}
/**
 * @brief 角色图片
 **/
message CharacterImage {
  //角色图片类型
  optional CharacterImageType image_type = 1;
  //角色图片格式
  optional string format = 2;
  //图片地址
  optional string image_url = 3;
  //图片宽度
  optional int64 width = 4;
  //图片高度
  optional int64 height = 5;
}

/**
 * @brief 角色图片列表
 **/
message CharacterImageList {
  // 角色图片
  repeated CharacterImage character_image = 1;
}

/**
 * @brief 相关feed
 **/
message FeedSummary {
  //feed id
  optional int64 entity_id = 1;
}
/**
 * @brief 头条专辑meta信息
 **/
message HeadLineAlbumMetadata {
  //专题id
  optional int64 entity_id = 1;
  //专题标题
  optional string title = 2;
  //专题封面图
  optional string image = 3;
  //专题描述
  optional string description = 4;
}
/**
 * @brief 内容摘要
 **/
message HeadLineAlbumCardSummary {
  //专题内card顺序
  optional int32 order = 1;
  //专题内card标题
  optional string title = 2;
  //专题内card id
  optional int64 card_id = 3;
  //头条专题card包含的头条摘要
  repeated HeadLineAlbumElementSummary element_summary = 4;
}
/**
 * @brief 头条专辑上传者信息
 * @details 头条专辑上传者信息
 **/
message HeadLineAlbumUploaderInfo {
  //上传者ID
  optional int64 uploader_id = 1;
}
/**
 * @brief 头条专辑详情页信息
 **/
message HeadLineAlbumDetailPageInfo {
  //详情页标题
  optional string title = 1;
  //详情页banner图
  optional string banner_image = 2;
  //详情页导语
  optional string banner_text = 3;
}
/**
 * @brief 头条专辑card包含的头条摘要
 * @details 头条专辑card包含的头条摘要
 **/
message HeadLineAlbumElementSummary {
  //card内头条的id
  optional int64 entity_id = 1;
  //card内头条的顺序
  optional int32 order = 2;
  //card内的头条标题
  optional string title = 3;
  //card内的头条图片地址
  optional string image = 4;
}
/**
 * @brief 头条专辑详原站点信息
 **/
message HeadLineIqiyiOriginalInfo {
  //视频ID
  optional int64 entity_id = 1;
  //视频频道ID
  optional int32 channel_id = 2;
  //视频创建时间
  optional int64 create_time = 3;
}
/**
 * @brief 比赛选手
 **/
message MatchPlayer {
  //选手id
  optional int64 id = 1;
  //选手姓名
  optional string name = 2;
}
/**
 * @brief 比赛每小节结果
 **/
message MatchInningResult {
  //比赛小节顺序
  optional int32 order = 1;
  //比赛小节结果
  optional string result = 2;
}
/**
 * @brief 百度推送相关信息
 **/
message BaiduSummary {
  //本视频在百度业务系统中的id
  optional string baidu_id = 1;
  //上传本视频的用户在百度系统中的账号id
  optional string baidu_uploader_id = 2;
  //本视频来源渠道
  optional string source_site = 3;
  //百度的人工时效性判断
  optional BaiduAuditEffectiveTime baidu_audit_effective_time = 40 [default = UNKNOWN_BAIDU_AUDIT_EFFECTIVE_TIME];
  //百度抓取的站外url
  optional string source_url = 4;
  //百度上传者昵称
  optional string uploader_name = 5;
  //百度人工一级分类
  optional string audit_category = 6;
  //百度人工二级分类
  optional string audit_sub_category = 7;
  //百度人工标签（多个用“;”分割）
  optional string audit_tag = 8;
  //百度人工评分(评分范围0-4分)
  optional int32 audit_score = 9;
  //百度抓取/百家号填写的自定义标签，多个用";"分隔
  optional string crawl_and_baijiahao_tag = 10;
  //百度抓取/百家号填写的一级分类，多个用";"分隔
  optional string crawl_and_baijiahao_category = 11;
  //百度抓取/百家号填写的二级分类，多个用";"分隔
  optional string crawl_and_baijiahao_sub_category = 12;
  //百家号的打分(评分范围0-10分)
  optional int32 baijiahao_score = 13;
  //视频在内容方首次生成日期（若视频为抓取，即为在第三方站点的生成日期），格式为年月日，如：20171012
  optional int64 source_create_date = 14;
  //标题
  optional string title = 15;
  //副标题
  optional string sub_title = 16;
  //别名（多个用";"分隔）
  optional string alias = 17;
  //英文标题
  optional string english_title = 18;
  //描述
  optional string description = 19;
  //视频类型（正片，片花，预告片等等）
  optional string content_type = 20;
  //语言版本
  optional string language = 21;
  //主持人（多个用";"分隔）
  optional string host = 22;
  //嘉宾（多个用";"分隔）
  optional string guest = 23;
  //地区（多个用";"分隔）
  optional string location = 24;
  //导演（多个用";"分隔）
  optional string director = 25;
  //主演（多个用";"分隔）
  optional string main_actor = 26;
  //演员（多个用";"分隔）
  optional string actor = 27;
  //当前第几集
  optional int32 current_episode_order = 28;
  //上映时间，时间戳（单位毫秒）
  optional int64 release_date = 29;
  //总播放量
  optional int64 play_count = 30;
  //总支持数（顶）
  optional int64 up_count = 31;
  //总反对数（踩）
  optional int64 down_count = 32;
  //总分享数
  optional int64 share_count = 33;
  //总评论数
  optional int64 comment_count = 34;
  //封面图URL list，视频封面图片（大于320*240）,样例：{"imageSet":["http://www.baidu.com/a.jpg", "http://www.baidu.com/b.jpg"]}
  optional string cover_image_url = 35;
  //是否独家资源
  optional bool is_exclusive = 36 [default = false];
  //是否原创
  optional bool is_original = 37 [default = false];
  //百度的高展数据
  repeated KeyValuePair key_value_pair = 38;
  //视频最后一次更新时间（任何修改都需要更新此字段），时间戳（单位毫秒）
  optional int64 last_update_time = 39;
  //内容质量
  optional string content_quality = 43;
  //有效时间（指截止时间，时间戳单位秒）
  optional int64 effective_time = 41;
  //是否PGC视频
  optional bool is_pgc = 42 [default = false];
}
/**
 * @brief 关系明细
 **/
message RelationDetail {
  //关系名称
  optional string relation_name = 1;
  //关系属性
  repeated KeyValuePair property = 2;
}
