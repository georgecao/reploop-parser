// Ahthor: Chuanqian Wang (wangchuanqian@qiyi.com)

package com.qiyi.mongodb;

message MongoConfiguration {
    message Host {
       required string name = 1;
       required string ip = 2;
       required int32 port = 3;
       
       message SecondaryNode {
         required string ip = 1;
         required int32 port= 2;
       }

       repeated SecondaryNode secondary_node = 4;
    }
    repeated Host hosts = 1;
    required string db_name = 2;
}

message MongoOption {
   // Sets whether JMX beans registered by the driver should always be
   // MBeans, regardless of whether the VM is Java 6 or greater.
   optional bool always_use_m_beans = 1 [default = true];

   // If true, the driver will keep trying to connect to the same server
   // in case that the socket cannot be established.
   optional bool auto_connect_retry = 2 [default = true];

   // The maximum amount of time in MS to spend retrying to open connection
   // to the same server.
   optional int64 max_auto_connect_retry_time = 3 [default = 100];

   // The maximum number of connections allowed per host for this Mongo
   // instance.
   optional int32 connections_per_host = 4 [default = 100];

   // The connection timeout in milliseconds.
   optional int32 connections_timeout = 5 [default = 10000];

   // The maximum wait time in milliseconds that a thread may wait for a
   // connection to become available.
   optional int32 max_wait_time = 6 [default = 1000];

   // Sets whether there is a a finalize method created that cleans up
   // instances of DBCursor that the client does not close.
   optional bool cursor_finalizer_enabled = 7 [default = true];

   // If true the driver will use a WriteConcern of WriteConcern.SAFE for
   // all operations.
   optional bool safe = 8 [default = false];

   // This flag controls the socket keep alive feature that keeps a
   // connection alive through firewalls Socket.setKeepAlive(boolean).
   optional bool socket_keep_alive = 9 [default = false];

   // The socket timeout in milliseconds It is used for I/O socket read and
   // write operations Socket.setSoTimeout(int) Default is 0 and means no
   // timeout.
   optional int32 socket_timeout = 10 [default = 0];
 }
