// Author: Chuanqian Wang (wangchuanqian@qiyi.com)
// Author: Lin Liu (lynnliu@qiyi.com)
// Author: Yin Zeng (zengyin@qiyi.com)
//
// Proto definitions for entity status, tag
// Proto definitions for collection, album, episode(feature,clip,scene,shot),
// css(focus), people and image.

//- 共有数据： 有 pps_base, pps_platform_region_control, base, puyu 节点
//- PPS独有数据： 只有 pps_base, pps_platform_region_control节点
//- 奇艺独有数据： 只有 base, puyu节点
import "google/protobuf/descriptor.proto";

import "knowledge/pub/common.proto";
import "knowledge/pub/formats.proto";
import "knowledge/pub/metadatas.proto";
import "knowledge/pub/properties.proto";
import "knowledge/graph/pub/properties.proto";
import "knowledge/pub/library/film_library_idl.proto";
import "knowledge/pub/validator.proto";
import "knowledge/pub/tracker/tracker_service.proto";
import "knowledge/hbase/options.proto";

package knowledge.pub;

message EntityOptions {
  optional Table table = 1;
  optional string entity_name = 2;
  optional EntityIdType entity_id_type = 3;
}

// 除去主站之外，其他站点的信息
message MultiSiteOptions {
  message SiteOption {
    // 站点
    optional SiteType site = 1;
    // 站点表名
    optional string table_name = 2;
    // 所属站点
    optional SiteType fallback_site = 3 [default = SITE_ZH];
  }
  optional SiteOption zh_tw = 1;
}

extend google.protobuf.MessageOptions {
  optional .com.qiyi.knowledge.hbase.option.TableOptions table_option = 50021;
  optional EntityOptions entity_option = 50001;
  optional MultiSiteOptions site_option = 50033;
}

message FieldOptions {
  optional ColumnGroup column_group = 1;
  //是否在消息中通知repeated column 的key
  optional bool is_repeated_column_notified = 2 [default = false];
  optional FieldMultiType multi_type = 3 [default = FIELD_MULTI_TYPE_NONE];
}

// 字段属性
enum FieldMultiType {
  // 普通字段
  FIELD_MULTI_TYPE_NONE = 0;
  // 多站点字段
  FIELD_MULTI_TYPE_SITE = 1;
  // 多语言字段
  FIELD_MULTI_TYPE_LANGUAGE = 2;
}

extend google.protobuf.FieldOptions {
  optional .com.qiyi.knowledge.hbase.option.ColumnOptions column_option = 50022;
  optional FieldOptions field_option = 50002;
  optional knowledge.pub.tracker.TrackOptions track_option = 50013;
}
//@@@@@@
// 动漫书
message ComicBook {
  //option
  option (entity_option).table = COMIC_BOOK_TABLE;
  option (entity_option).entity_name = "comic_book";
  option (table_option).hbase_table_name = "qipu_comic_book_table";
  option (entity_option).entity_id_type = COMIC_BOOK;

  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  
  //基本信息
  optional ComicBookMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //图书格式
  optional ComicBookFormat format = 5 [(field_option).column_group = FORMAT, (column_option).column_name = "format"];

  //完结状态 (使用serialize_status字段)
  optional BookAvailableStatus available_status = 6 [deprecated = true];

  // 漫画属性
  optional ComicBookProperty book_property = 7 [(field_option).column_group = BOOK_PROPERTY, (column_option).column_name = "book_prop"];

  // 作者
  repeated MetaSummary author_summary = 8 [(field_option).column_group = AUTHOR_SUMMARY, (column_option).column_name = "aut_sum_", (column_option).column_suffix = "${entity_id}"];

  // CP
  repeated MetaSummary cp_summary = 9 [(field_option).column_group = CP_SUMMARY, (column_option).column_name = "cp_sum_", (column_option).column_suffix = "${entity_id}"];

  //类别，三级分类
  repeated CategorySummary category = 10 [(field_option).column_group = CATEGORY_SUMMARY, (column_option).column_name = "cate_", (column_option).column_suffix = "${category_id}"];
  
  // 版权信息(废弃)
  // 漫画可能对应多个合同，使用repeated multi_puyu字段
  optional Puyu puyu = 11 [deprecated = true, (field_option).column_group = PUYU, (column_option).column_name = "puyu"];
  
  //付费
  optional Boss boss = 12 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];
  
  //相关图片，包括封面图
  repeated LocaleImage local_image = 13 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  //运营信息；
  optional BookBase base = 14 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  //播控
  repeated Publication publication= 15 [(field_option).column_group = BOOK_PUBLICATION, (column_option).column_name = "publication_", (column_option).column_suffix = "${platform}"];

  //最新章发布时间，由奇谱自动计算；
  optional int64 chapter_last_online_time = 16 [(field_option).column_group = LAST_ONLINE_TIME, (column_option).column_name = "cha_las_onl_time"];
  
  //圈子关联
  optional PaopaoSummary paopao_summary = 17 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "paopao_sum"];
  //章节
  repeated MetaSummary chapter_summary = 18 [(field_option).column_group = CHILD_CHAPTER, (column_option).column_name = "chd_cap_", (column_option).column_suffix = "${entity_id}"];


  // 日销量
  optional int64 sales_yesterday = 19 [(field_option).column_group = SALES_YESTERDAY, (column_option).column_name = "sal_yest", (track_option).notracker=true];
  // 周销量
  optional int64 sales_week= 20 [(field_option).column_group = SALES_WEEK, (column_option).column_name = "sal_week", (track_option).notracker=true];
  // 月销量
  optional int64 sales_month = 21 [(field_option).column_group = SALES_MONTH, (column_option).column_name = "sal_month", (track_option).notracker=true];
  // 总销量
  optional int64 sales_volume = 22 [default = 0, (field_option).column_group = SALES_VOLUME, (column_option).column_name = "sal_vol", (track_option).notracker=true];
  
  // 日展示量
  optional int64 click_count_yesterday = 23 [(field_option).column_group = CLICK_COUNT_YESTERDAY, (column_option).column_name = "cli_count_yest", (track_option).notracker=true];
  // 周展示量
  optional int64 click_count_week= 24 [(field_option).column_group = CLICK_COUNT_WEEK, (column_option).column_name = "cli_count_week", (track_option).notracker=true];
  // 月展示量
  optional int64 click_count_month = 25 [(field_option).column_group = CLICK_COUNT_MONTH, (column_option).column_name = "cli_count_month", (track_option).notracker=true];
  // 总展示量
  optional int64 click_count = 26 [default = 0, (field_option).column_group = CLICK_COUNT, (column_option).column_name = "cli_count", (track_option).notracker=true];
  
  // 日打赏
  optional int64 reward_yesterday = 27 [(field_option).column_group = REWARD_YESTERDAY, (column_option).column_name = "rew_yest", (track_option).notracker=true];
  // 周打赏
  optional int64 reward_week= 28 [(field_option).column_group = REWARD_WEEK, (column_option).column_name = "rew_week", (track_option).notracker=true];
  // 月打赏
  optional int64 reward_month = 29 [(field_option).column_group = REWARD_MONTH, (column_option).column_name = "rew_month", (track_option).notracker=true];
  // 总打赏
  optional int64 reward_count = 30 [(field_option).column_group = REWARD_COUNT, (column_option).column_name = "rew_count", (track_option).notracker=true];

  //版权信息
  repeated Puyu multi_puyu = 31 [(field_option).column_group = MULTI_PUYU, (column_option).column_name = "multipuyu_", (column_option).column_suffix = "${contract_code}"];

  //完结状态
  optional BookAvailableStatus serialize_status = 32 [(field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "avail"];

  //收藏量，总量
  optional int64 collect_count = 33 [default = 0, (field_option).column_group = COLLECT_COUNT, (column_option).column_name = "col_count", (track_option).notracker=true];
  //日收藏量
  optional int64 collect_count_day = 34 [default = 0,(field_option).column_group = COLLECT_COUNT_DAY, (column_option).column_name = "col_count_day", (track_option).notracker=true];
  //周收藏量
  optional int64 collect_count_week = 35 [default = 0,(field_option).column_group = COLLECT_COUNT_WEEK, (column_option).column_name = "col_count_week", (track_option).notracker=true];
  //月收藏量
  optional int64 collect_count_month = 36 [default = 0, (field_option).column_group = COLLECT_COUNT_MONTH, (column_option).column_name = "col_count_month", (track_option).notracker=true];

  //下载量，总量
  optional int64 download_count = 37 [default = 0, (field_option).column_group = DOWNLOAD_COUNT, (column_option).column_name = "down_count", (track_option).notracker=true];
  //日下载量
  optional int64 download_count_day = 38 [default = 0,(field_option).column_group = DOWNLOAD_COUNT_DAY, (column_option).column_name = "down_count_day", (track_option).notracker=true];
  //周下载量
  optional int64 download_count_week = 39 [default = 0,(field_option).column_group = DOWNLOAD_COUNT_WEEK, (column_option).column_name = "down_count_week", (track_option).notracker=true];
  //月下载量
  optional int64 download_count_month = 40 [default = 0, (field_option).column_group = DOWNLOAD_COUNT_MONTH, (column_option).column_name = "down_count_month", (track_option).notracker=true];

  // 总页数 从ComicBook.Metadata column中移出，单独列出来（metadata由媒资维护，这两个字段需要移出来由运营维护）
  optional int64 online_page_count = 41 [default = 0, (field_option).column_group = ONLINE_PAGE_COUNT, (column_option).column_name = "online_page_count", (track_option).notracker=true] ;

  // 漫画总话数 从ComicBook.Metadata column中移出，单独列出来（metadata由媒资维护，这两个字段需要移出来由运营维护）
  optional int64 chapter_count = 42  [default = 0, (field_option).column_group = CHAPTER_COUNT, (column_option).column_name = "chapter_count", (track_option).notracker=true];

  //关联的ip实体的id
  optional int64 ip_id = 43 [(field_option).column_group = IP_ID, (column_option).column_name = "ip_id"];

    // IP相关信息
  optional IntellectualPropertySummary ip_summary = 44 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "ip_sum"];
  //漫画PCW页面信息
  optional BookPageInfo page_info = 45 [(field_option).column_group = PAGE_INFO, (column_option).column_name = "c_45_n"];
  //漫画更新信息
  optional ComicBookUpdateInfo update_info = 46 [(field_option).column_group = UPDATE_INFO, (column_option).column_name = "c_46_n"];
  //付费控制信息（漫画/文学/轻小说）
  repeated PublicatonChargeControl charge_control = 47 [(field_option).column_group = CHARGE_CONTROL, (column_option).column_name = "c_47_n_", (column_option).column_suffix = "${platform}"];
}
/**
 *@brief  PPC(Professional Produced Content)视频，包括电影，电视剧的某一集内容，广告等。
 *@details 这里视频指PGC视频，即由奇艺制作的，有版权(记录在Boss字段中)的视频。 
 *
 * <p>奇艺在视频播放的时候会投放广告。对于VIP用户，去广告的逻辑：<ol>
 * <li>视频属性：是否支持全集试看、是否支持前N分钟试看、会员包月观看、会员用券观看、会员付费观看、普通用户可付费点播观看、普通用户不可点播观看;</li>
 * <li>广告属性：禁止投放给会员、会员可跳过（会员服务类消息，可投放给会员，但是会员可跳过） </li>
 * <li>VIP会员：非VIP会员、白银、黄金、白金</li>
 * </ol>
 * </p>
 **/
message Episode {
  //option
  option (entity_option).table = EPISODE_TABLE;
  option (entity_option).entity_name = "episode";
  option (table_option).hbase_table_name = "qipu_episode_table";
  option (entity_option).entity_id_type = EPISODE;

  option (site_option).zh_tw.site = SITE_ZH_TW;
  option (site_option).zh_tw.table_name = "qipu_episode_tw_table";

  //唯一识别ID，所有的Episode的ID最后两位都是00;
  required int64 id = 1 [(column_option).is_auto_set = true];
  //元数据
  optional Metadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 该视频是否可以播放。
  optional AvailableStatus available_status = 4 [default = ONLINE, (field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "avail"];

  //视频码流，由媒资写入。 
  repeated Format format = 5 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt_", (column_option).column_suffix = "${uuid}"];

  //本视频相关的片花(clip),场景(scene),镜头(shot)视频
  repeated MetaSummary css_summary = 6 [(field_option).column_group = CHILD_CSS, (column_option).column_name = "chd_css_", (column_option).column_suffix = "${entity_id}"];
  //本视频相关的图片
  repeated MetaSummary image_summary = 7 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "04", (validator_options).id_type.inside_field = "entity_id"];
  //本视频相关的预告片视频
  repeated MetaSummary prevue_summary = 8 [(field_option).column_group = CHILD_PREVUE, (column_option).column_name = "chd_pre_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];
  //本视频相关的片花视频
  repeated MetaSummary trailer_summary = 9 [(field_option).column_group = CHILD_TRAILER, (column_option).column_name = "chd_tlr_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];
  //本视频相关的花絮视频
  repeated MetaSummary titbit_summary = 10 [(field_option).column_group = CHILD_TITBIT, (column_option).column_name = "chd_ttb_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];
  //本视频相关的剪辑视频
  repeated MetaSummary clip_summary = 46 [(field_option).column_group = CHILD_CLIP, (column_option).column_name = "chd_clp_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];
  //其他相关视频
  repeated MetaSummary other_summary = 47 [(field_option).column_group = CHILD_OTHER, (column_option).column_name = "chd_oth_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];

  //版权信息
  optional Puyu puyu = 11 [(field_option).column_group = PUYU, (column_option).column_name = "puyu"];
  //PPS的版本信息
  optional Puyu pps_puyu = 48 [(field_option).column_group = PPS_PUYU, (column_option).column_name = "ppspuyu"];
  //搜索引擎优化信息
  optional Seo  seo = 12 [(field_option).column_group = SEO, (column_option).column_name = "seo"];
  //公用运营相关的信息
  optional CommonBase common_base = 55 [(field_option).column_group = COMMON_BASE, (column_option).column_name = "cmbase"];
  //运营信息；
  optional Base base = 13 [(field_option).column_group = BASE, (column_option).column_name = "base"];
  //PPS运营信息；
  optional Base pps_base = 49 [(field_option).column_group = PPS_BASE, (column_option).column_name = "ppsbase"];

  /**
   *@brief 内容类型
   *@details Episode中定义了三个内容类型，除这个，在base和pps_base中也分别定义ContentType。<ol>
   *<li>本content_type是由mems，媒资写入</li>
   *<li>base.content_type是由lego写入，乐高从mems中获取值后再写入的。</li>
   *<li>pps_base.content_type是复制base.content_type的值写入了。</li>
   *</ol>
   *这三个值应该是一致的，但是存在不相同或者某个值为空的可能。这种情况下，Episode的ContentType的优先取值顺序是：content_type, base.content_type, pps_base.content_type。
  **/
  optional ContentType content_type = 52 [(field_option).column_group = CONTENT_TYPE, (column_option).column_name = "contype"];
  //付费信息
  optional Boss boss = 14 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];

  //废弃， 不再使用
  optional Stats stats_pc = 15 [(field_option).column_group = STATS_PC, (column_option).column_name = "st_pc", (track_option).notracker=true];
  //废弃， 不再使用
  optional Stats stats_pad = 31 [(field_option).column_group = STATS_PAD, (column_option).column_name = "st_pad", (track_option).notracker=true];
  //废弃， 不再使用
  optional Stats stats_phone = 32 [(field_option).column_group = STATS_PHONE, (column_option).column_name = "st_phn", (track_option).notracker=true];
  //废弃， 不再使用
  optional Stats stats_tv = 33 [(field_option).column_group = STATS_TV, (column_option).column_name = "st_tv", (track_option).notracker=true];

  //废弃， 不再使用
  optional Stats up_down = 36;

  //在页面上显示的播放数。播放数据play_count是保密数据，不直接显示在页面上。页面上显示请使用这个数据。该数据由龙源定期写入，每3小时写入一次。 
  optional int64 display_play_count = 38 [(column_option).is_vint64 = true, (field_option).column_group = DISPLAY_PLAY_COUNT, (column_option).column_name = "dpcnt", (track_option).notracker=true];
  //实际播放播放数。播放数据play_count是保密数据，不直接显示在页面上。页面上显示请使用display_play_count这个数据。该数据由龙源定期写入，每3小时写入一次。 
  optional int64 play_count = 39 [(column_option).is_vint64 = true, (field_option).column_group = PLAY_COUNT, (column_option).column_name = "pycnt", (track_option).notracker=true];
  //评论数据。该数据由龙源定期写入，每3小时写入一次。 
  optional int64 comments_count = 40 [(column_option).is_vint64 = true, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "cmtcnt", (track_option).notracker=true];
  //分享总计数。该数据由龙源定期写入，每3小时写入一次。 
  optional int64 share_count = 41 [(column_option).is_vint64 = true, (field_option).column_group = SHARE_COUNT, (column_option).column_name = "shrcnt", (track_option).notracker=true];
  //顶次数。该数据由龙源定期写入，每3小时写入一次。 
  optional int64 up_count = 42 [(column_option).is_vint64 = true, (field_option).column_group = UP_COUNT, (column_option).column_name = "upcnt", (track_option).notracker=true];
  //踩次数。该数据由龙源定期写入，每3小时写入一次。 
  optional int64 down_count = 43 [(column_option).is_vint64 = true, (field_option).column_group = DOWN_COUNT, (column_option).column_name = "dwncnt", (track_option).notracker=true];

  //该视频所在的Album。一个视频仅可能存在一个Album中。 写入该数据后，奇谱会自动将数据同步到Album.episode_summary字段中。 
  optional FatherInfo father_album = 16 [(field_option).column_group = FATHER_ALBUM, (column_option).column_name = "dad_alb"
                                         , (validator_options).id_type.type = "01", (validator_options).id_type.inside_field = "father_id"];
  //该视频所在的播单。 一个视频可以存在多个播单中。写入该数据后，奇谱会自动将该数据同步到Collection.episode_summary中。
  repeated FatherInfo father_collection = 17 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}", (validator_options).id_type.type = "02", (validator_options).id_type.inside_field = "father_id"];
  //该视频所在的老播单。 一个视频可以存在多个老播单中。写入该数据后，奇谱会自动将该数据同步到VideoGroup.episode_summary中。
  repeated FatherInfo father_video_group = 18 [(field_option).column_group = FATHER_VIDEO_GROUP, (column_option).column_name = "dad_vgp_", (column_option).column_suffix = "${father_id}", (validator_options).id_type.type = "06", (validator_options).id_type.inside_field = "father_id"];
  //视频所在的Ugc播单中。不再使用。
  repeated FatherInfo father_ugc_collection = 44 [(field_option).column_group = FATHER_UGC_COLLECTION, (column_option).column_name = "dad_ugccln_", (column_option).column_suffix = "${father_id}"];

  //非正片视频，如剪辑、片花、预告片等，通过这个字段来标注其所在的正片。写入这个数据后，奇谱会自动根据contentType将数据同步到正片的css_summary,tittit_summary,trailer_summary等字段中。
  optional FatherInfo father_official_episode = 19 [(field_option).column_group = FATHER_OFFICIAL_EPISODE, (column_option).column_name = "dad_esd_", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "father_id"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 20 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];
  //对应的豆瓣ID
  optional int64 douban_id = 21 [(field_option).column_group = DOUBAN_ID, (column_option).column_name = "db_id"];
  /**
   * 三级分类标签
   */
  repeated string tag = 22 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

 
  /**
  * 仅供临时、内部使用的属性值，可以使用key-value键值对来保存。
  * 注意：奇谱项目组强烈**不**建议使用Key-Value来存取属性。
  * 如有需要，请务必事先和奇谱项目组沟通，确认无问题后才能使用。 
  * 当前已知的key-value如下:<ol>
  * <li>pageurl_iqiyi_pc_29: 乐高写入，视频播放页地址,最后一位是频道id。</li>
  * <li>exclusive_status_iqiyi: 乐高写入，是否奇艺独播剧。</li>
  * <li>format_iqiyi_pc：乐高写入的默认码流格式。</li>
  * <li>audit_status_version:最后一次审核结果时间。</li>
  * </ol>
  **/
  repeated KeyValuePair key_value_pair = 23 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];

  // 关联的奇谈系统的ID
  optional Qitan qitan = 24 [(field_option).column_group = QITAN, (column_option).column_name = "qtn"];

  // 支持百度视频搜索的相关信息
  optional Baidu baidu = 25 [(field_option).column_group = BAIDU, (column_option).column_name = "bdu"];

  // 关联的视链信息
  repeated ViewLink view_link = 26 [(field_option).column_group = VIEWLINK, (column_option).column_name = "vlk_", (column_option).column_suffix = "${view_link_name.begin_time}_${view_link_name.end_time}_${view_link_name.x_pos}_${view_link_name.y_pos}"];

  // 关联的多播信息。
  repeated MultiPublish multi_publish = 27 [(field_option).column_group = MULTI_PUBLISH, (column_option).column_name = "mtp_", (column_option).column_suffix = "${brand}_${channel_id}"];

  // 关联的直播视频
  optional LiveMetaSummary live_summary = 28 [(field_option).column_group = LIVE_SUMMARY, (column_option).column_name = "chd_live"];

  // 第三方及分甘同味的分享信息
  optional SharePartner share_partner = 29 [(field_option).column_group = SHARE_PARTNER, (column_option).column_name = "spr"];

  // 字幕插件信息
  repeated Subtitle subtitle = 30 [(field_option).column_group = SUBTITLE, (column_option).column_name = "sbt_", (column_option).column_suffix = "${uuid}"];

  // DRM key信息
  optional DrmKey drm_key = 34 [(field_option).column_group = DRM_KEY, (column_option).column_name = "drm"];

  //页面发布状态
  optional PagePublishStatus page_publish_status = 37 [default = PAGE_WAIT, (field_option).column_group = PAGE_PUBLISH_STATUS, (column_option).column_name = "ppsts"];

  //关联的视频文件信息
  optional VideoFileInfo film_video_file_info = 45 [(field_option).column_group = FILM_VIDEO_FILE_INFO, (column_option).column_name = "filmvfile"];


  /**
   * @brief 老播控字段，新播空请使用access_play_control字段
   * @details 视频的新老播控字段映射关系如下：<ol>
   * <li>iqiyi的所有端新播控都下线(ps.默认端端下线并且任何一个地域下线)，映射老播控为下线。 <ul>
   * <li>新播控: <br/>
   *     <code>access_play_controls.platfroms =  [ANDROID_PHONE_IQIYI,ANDROID_PAD_IQIYI,IOS_PHONE_IQIYI,IOS_PAD_IQIYI,PC_QIYI,H5_QIYI,PAD_WEB_QIYI,PC_CLIENT_IQIYI] //iqiyi的所有端</br>
   *      episode.access_play_controls.default_control.availabe_status <> ONLINE and episode.access_play_controls.region_controls.availabe_status <> ONLINE  //iqiyi的所有端（地域和默认端）不存在上线
   *	</code></li>
   * <li>老播控
   *      <code> episode.availabe_status = OFFLINE_COPYRIGHT</code></li>
   *   </ul></li>
   * <li>iqiyi有任何一个端播控上线(ps.默认端端上线或者任何一个地域上线)，映射老播控上线。<ul>
   * <li>新播控:
   *     <code>episode.access_play_control.play_platform in [ANDROID_PHONE_IQIYI,ANDROID_PAD_IQIYI,IOS_PHONE_IQIYI,IOS_PAD_IQIYI,PC_QIYI,H5_QIYI,PAD_WEB_QIYI,PC_CLIENT_IQIYI] and (episode.access_play_control.default_control.availabe_status == ONLINE or  episode.access_play_control.region_controls.availabe_status contains ONLINE)</code>
   * </li> 
   * <li>老播控
   *     <code>episode.availabe_status = ONLINE</code></li>
   * </ul></li>
   * </ol>
   **/
  optional PlatformRegionControl iqiyi_platform_region_control = 50 [(field_option).column_group = IQIYI_PLATFORM_REGION_CONTROL, (column_option).column_name = "iqiyiprc"];
   // 不再使用，播空请使用access_play_control字段
  optional PlatformRegionControl pps_platform_region_control = 51 [(field_option).column_group = PPS_PLATFORM_REGION_CONTROL, (column_option).column_name = "ppsprc"];

  // 支持奇搜的相关信息
  optional SearchInfo search_info = 53 [(field_option).column_group = SEARCH_INFO, (column_option).column_name = "sci"];

  optional FilmTvCheckStatus film_tv_check_status = 54 [(field_option).column_group = FILM_TV_CHECK_STATUS, (column_option).column_name = "ftcs"];

  //关联的影视资料库ID。这个字段写入后，奇谱会自动在对应的FilmTVLibrary下将qipu_id设置为当前视频的ID
  optional int64 film_tv_id = 56 [(field_option).column_group = FILM_TV_ID, (column_option).column_name = "ftvid"];

  //投票信息
  optional VoteInfo vote_info = 57 [(field_option).column_group = VOTE_INFO, (column_option).column_name = "voteinfo"];

  //部分PCC视频会按照运营需要被设置为UGC的视频。 通过这个字段来记录UGC的信息。 
  optional VirtualUgcInfo virtual_ugc_info = 58 [(field_option).column_group = VIRTUAL_UGC_INFO, (column_option).column_name = "vugc"];

  //在线计数器更新策略
  optional OnlineCountUpdateStrategy online_count_update_strategy = 59 [(field_option).column_group = ONLINE_COUNT_UPDATE_STRATEGY, (column_option).column_name = "onlcnt_us"];

  //视频指纹。两个视频的指纹数据相似度越高，表示这两个视频的内容的相似度越高。
  optional Fingerprint fingerprint = 60 [(field_option).column_group = FINGERPRINT, (column_option).column_name = "fgrpt"];

  //播控信息，使用方式参见http://wiki.qiyi.domain/pages/viewpage.action?pageId=25607995 
  repeated AccessPlayControl access_play_control = 61 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];

  // 相关的奇趣标签
  repeated QiquTagSummary qiqu_tag_summary = 62 [(field_option).column_group = CHILD_QIQU_TAG, (column_option).column_name = "chd_qtg_", (column_option).column_suffix = "${qiqu_tag_id}"];

  // Define the top recommend place of pps category for the album, episode, collection or ppsCategory.
  repeated PpsCategoryRanking pps_category_ranking = 63 [(field_option).column_group = PPS_CATEGORY_RANKING, (column_option).column_name = "pps_cat_rk_", (column_option).column_suffix = "${pps_category_id}"];

  //Episode类型
  optional EpisodeType episode_type = 64[default = PPC, (field_option).column_group = EPISODE_TYPE, (column_option).column_name = "epd_type"];

  // 视频标签.
  optional OcrTag ocr_tag = 65 [(field_option).column_group = OCR_TAG, (column_option).column_name = "ocr_tag"];
  // 音轨标签.
  optional AsrTag asr_tag = 66 [(field_option).column_group = ASR_TAG, (column_option).column_name = "asr_tag"];
  // 标签.
  optional SmartTag smart_tag = 67 [(field_option).column_group = SMART_TAG, (column_option).column_name = "smart_tag"];

  // 奇趣标签列表.
  repeated CategorySummary category_summary = 68 [(field_option).column_group = CATEGORY_SUMMARY, (column_option).column_name = "cat_summary_", (column_option).column_suffix = "${category_id}"];

  // 智能广告打点标记.
  optional AdPointTag ad_point_tag = 69 [(field_option).column_group = AD_POINT_TAG, (column_option).column_name = "ad_point_tag"];

  // 活动通知列表.
  repeated Notice notice = 70 [(field_option).column_group = NOTICE, (column_option).column_name = "notice_", (column_option).column_suffix = "${notice_id}"];

  //相关视频，由奇搜定时写入。 目前是每三小时更新一次，不发消息
  optional MetaSummaryList related_videos = 71 [(field_option).column_group = RELATED_VIDEOS, (column_option).column_name = "related_videos", (track_option).notracker=true];

  //相关明星，由奇搜定时写入。 目前是每三小时更新一次，不发消息
  optional MetaSummaryList related_celebrities = 72 [(field_option).column_group = RELATED_CELEBRITIES, (column_option).column_name = "related_celebrities", (track_option).notracker=true];

  // 顶踩数
  optional float up_down_score = 73 [(field_option).column_group = UP_DOWN_SCORE, (column_option).column_name = "updwnsc", (track_option).notracker=true];

  // 综合评分
  optional float sns_score = 74 [(field_option).column_group = SNS_SCORE, (column_option).column_name = "snssc"];

  // 移动端杜比码流格式；由乐高媒资写入。
  repeated AudioFormat audio_format = 75 [(field_option).column_group = AUDIO_FORMAT, (column_option).column_name = "aufmt_", (column_option).column_suffix = "${uuid}"];

  // 影视原声列表
  repeated MetaSummary music_summary = 76 [(field_option).column_group = CHILD_MUSIC, (column_option).column_name = "music_sum_", (column_option).column_suffix = "${entity_id}"];

  // 全景视频参数
  optional PanoFormat pano_format= 77 [(field_option).column_group = PANO_FORMAT, (column_option).column_name = "pano_fmt"];

  // 实体视频信息
  repeated FigureOut celebrity_figure_out = 78 [(field_option).column_group = CELEBRITY_FIGURE_OUT, (column_option).column_name = "cel_fig_out_", (column_option).column_suffix = "${figure_id}"];

  // 音视频质量
  optional Quality quality = 79 [(field_option).column_group = QUALITY_SCORE, (column_option).column_name = "quality"];

  //关联角色
  repeated CharacterSummary related_character= 80 [(field_option).column_group = RELATED_CHARACTER, (column_option).column_name = "rel_char_", (column_option).column_suffix = "${entity_id}"];

  //视频码流概要信息
  optional VideoInfo video_info = 81 [(field_option).column_group = VIDEO_INFO, (column_option).column_name = "videoinfo"];

  //本地化相关的运营字段；
  repeated LocaleBase local_base = 82 [(field_option).column_group = LOCAL_BASE, (column_option).column_name = "loc_base_", (column_option).column_suffix = "${language}"];

  //支持本地化设置的图片。
  repeated LocaleImage local_image = 83 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  /**
  * url格式： "qisu:// tvid=246005500;vid=5ec8bb5e840b2b1445c9d0a07be463af; ischarge=true;vtype=0"
  * 对于点播 <ul>
  * <li>tvid对应id，为int型 ；</li>
  *  <li>vid对应key_value_pair中format_iqiyi_pc的值 ，为string型；</li>
  *  <li>ischarge对应boss.status的值，如果boss.status值为PAIED_AVAILABLE则输出ischarge=ture，boss.status= * 其他值或者不存在的时候则输出ischarge=false； </li>
  *  <li>vtype对于奇谱id以00和09结尾的episode都会强制写为vtype=0。</li>
  * </ul>
  **/
  optional Qisu qisu = 84 [(field_option).column_group = QISU, (column_option).column_name = "qisu"];

  //关联投票信息；target_id为空；
  repeated VoteSummary vote_summary  = 85 [(field_option).column_group = VOTE_SUMMARY, (column_option).column_name = "vote_sum_", (column_option).column_suffix = "${vote_id}"];

  /**
   *@brief 广告图片设置；
   * @details 支持DSP广告的图片。这个图片是由乐高写入，但是和普通图片生产方式不同，它可以是由投放方直接提供的图片。Episode符合站外投放要求的条件有两个：
   * 1. 该视频有用于站外投放的图片素材，即这个字段有内容；
   * 2. 该视频的站外投放视频时间有效（当前时间>上线时间，当前时间<=转免时间）。 后羿会在有站外投递任务时，调用此接口，获取影片TV ID 列表；
  **/
  optional AdImage ad_image = 86 [(field_option).column_group = AD_IMAGE, (column_option).column_name = "ad_image"];

  //关联的电影节获奖信息，由奇谱负责同步；
  repeated AwardSummary award_summary = 87 [(field_option).column_group = AWARD_SUMMARY, (column_option).column_name = "awa_sum_", (column_option).column_suffix = "${award_id}", (validator_options).id_type.type = "43", (validator_options).id_type.inside_field = "award_id"];

  //多地区运营信息
  repeated RegionBase region_base = 88 [(field_option).column_group = REGION_BASE, (column_option).column_name = "reg_base_", (column_option).column_suffix = "${region}"];

  //明星看点
  repeated PeopleSceneShot people_scene_shot = 89 [(field_option).column_group = PEOPLE_SCENE_SHOT, (column_option).column_name = "peo_sce_", (column_option).column_suffix = "${entity_id}"];

  //关联圈子
  optional PaopaoSummary paopao_summary = 90 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "paopao_sum", (validator_options).id_type.type = "47", (validator_options).id_type.inside_field = "circle_id"];

  //乐高写入相关视频的挂接父视频； 一个视频可以挂接到多个关联父视频
  repeated FatherInfo relative_father_episode = 91 [(field_option).column_group = RELATIVE_FATHER_EPISODE, (column_option).column_name = "rel_dad_epi_", (column_option).column_suffix = "${father_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "father_id"];
  //乐高写入相关视频的挂接父专辑； 一个视频可以挂接到多个关联父专辑
  repeated FatherInfo relative_father_album = 92 [(field_option).column_group = RELATIVE_FATHER_ALBUM, (column_option).column_name = "rel_dad_alb_", (column_option).column_suffix = "${father_id}", (validator_options).id_type.type = "01", (validator_options).id_type.inside_field = "father_id"];
  //奇谱自动将Episode 下的relative_father_episode的关联内容同步到这里
  repeated MetaSummary relative_child_episode = 93 [(field_option).column_group = RELATIVE_CHILD_EPISODE, (column_option).column_name = "rel_chd_epi_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];

  //标签相关圈子
  //optional CircleSummary circle_summary  = 94 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "circle_sum"];

  //付费相关信息
  optional ChargeBase charge_base = 95 [(field_option).column_group = CHARGE_BASE, (column_option).column_name = "charge_base"];

  //地方站属性标签
  repeated Subsite subsite = 96 [(field_option).column_group = SUBSITE, (column_option).column_name = "reg_sta", (column_option).column_suffix = "${subsite_id}"];

  // 动画屋
  optional IqiyiChild iqiyi_child = 97 [(field_option).column_group = IQIYI_CHILD, (column_option).column_name = "iqiyi_child"];

  // 版权保护字段
  optional CopyrightProtection copyright_protection = 98 [(field_option).column_group = COPYRIGHT_PROTECTION, (column_option).column_name = "cprt_pt"];

  // 对应直播节目
  optional MetaSummary live_episode_summary = 99 [(field_option).column_group = LIVE_EPISODE_SUMMARY, (column_option).column_name = "live_video", (validator_options).id_type.type = "23", (validator_options).id_type.inside_field = "entity_id"];

  //PGC运营信息,专业版的额外功能字段
  optional PgcBase pgc_base = 100 [(field_option).column_group = PGC_BASE, (column_option).column_name = "pgcbase"];

  // 视点
  optional EpisodeViewpoint viewpoint = 101 [(field_option).column_group = EPISODE_VIEWPOINT, (column_option).column_name = "viewpoint"];

  // 音轨信息
  optional AudioInfo audio_info = 102 [(field_option).column_group = AUDIO_INFO, (column_option).column_name = "auinfo"];

  //截图
  repeated Screenshot screenshot = 103 [(field_option).column_group = SCREENSHOT, (column_option).column_name = "screenshot", (column_option).column_suffix = "${uuid}"];

  //关联的ip实体的id
  optional int64 ip_id = 104 [(field_option).column_group = IP_ID, (column_option).column_name = "ip_id"];

  repeated DrmInfo drm_info = 105 [(field_option).column_group = DRM_INFO, (column_option).column_name = "drminfo_", (column_option).column_suffix = "${content_id}"];

  //业务类型
  repeated BusinessType business_type = 106 [(field_option).column_group = BUSINESS_TYPE, (column_option).column_name = "business_type_", (column_option).column_suffix = "${business_type}"];

  // 分析信息
  repeated RecognizeInfo recognize_info = 107 [(field_option).column_group = RECOGNIZE_INFO, (column_option).column_name = "recognize_info_", (column_option).column_suffix = "${recognize_info_type}"];

  //电商打点
  optional SmartTag e_business_smart_tag = 108 [(field_option).column_group = E_BUSINESS_SMART_TAG, (column_option).column_name = "e_busi_smt_tag"];

  // 视频本身经乐高加权后播放量，不包括片花和预告片
  optional int64 weighted_play_count = 109 [(field_option).column_group = WEIGHTED_PLAY_COUNT, (column_option).column_name = "weighted_pycnt"];

  // IP相关信息
  optional IntellectualPropertySummary ip_summary = 110 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "ip_sum"];

  // VideoFormat ID 关联 同步
  optional FormatSummary format_summary = 200 [(field_option).column_group = FORMAT_SUMMARY, (column_option).column_name = "format_sum"];

  // 资料的上下线状态
  optional AvailableStatus film_tv_available_status = 201 [(field_option).column_group = FILM_TV_AVAILABLE_STATUS, (column_option).column_name = "film_tv_avail"];

  // 基础信息(不分站点,不分语种,不分多发)
  optional MetaBasicInfo meta_basic_info = 202 [(field_option).column_group = META_BASIC_INFO, (column_option).column_name = "meta_bsc_info"];

  // 多语种相关信息(不分站点,分语种,不分多发)
  repeated MetaMultilingualInfo meta_multilingual_info = 203 [(field_option).column_group = META_MULTILINGUAL_INFO, (column_option).column_name = "meta_mul_lang_info_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  // 高级信息
  optional MetaAdvancedInfo meta_advanced_info = 204 [(field_option).column_group = META_ADVANCED_INFO, (column_option).column_name = "meta_adv_info"];

  // 内容分级(分站点)
  optional ContentRating content_rating = 205 [(field_option).column_group = CONTENT_RATING, (column_option).column_name = "con_rat",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 视频相关base[无维度]
  optional VideoCommonBase video_common_base = 206 [(field_option).column_group = VIDEO_COMMON_BASE, (column_option).column_name = "v_cm_base"];

  // 主展示运营base[无维度]
  optional OperationBase operation_base = 207 [(field_option).column_group = OPERATION_BASE, (column_option).column_name = "op_base"];

  // 合作相关运营[无维度]
  optional OperationCooperationBase operation_cooperation_base = 208 [(field_option).column_group = OPERATION_COOPERATION_BASE, (column_option).column_name = "op_coop_base"];

  // 控制base[站点](分站点)
  optional OperationControlBase operation_control_base = 209 [(field_option).column_group = OPERATION_CONTROL_BASE, (column_option).column_name = "op_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 多发控制base[站点]乐高来写(分站点,分多发)
  optional OperationMultiControlBase operation_multi_control_base = 210 [(field_option).column_group = OPERATION_MULTI_CONTROL_BASE, (column_option).column_name = "op_mul_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 频道ID
  optional int32 channel_id = 211 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "c_id"];

  // 多语言显示base(分多发)
  repeated OperationLanguageBase operation_language_base = 212 [(field_option).column_group = OPERATION_LANGUAGE_BASE, (column_option).column_name = "op_lang_base_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  // 页面相关[站点](分站点,分多发)
  optional OperationPage operation_page = 213 [(field_option).column_group = OPERATION_PAGE, (column_option).column_name = "op_page",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 关联人物信息
  optional RelatedPeopleInfo related_people_info = 214 [(field_option).column_group = RELATED_PEOPLE_INFO, (column_option).column_name = "related_people"];

  // 关联角色信息
  optional RelatedCharacterInfo related_character_info = 215 [(field_option).column_group = RELATED_CHARACTER_INFO, (column_option).column_name = "related_char"];

  // 资料关联的ugc视频
  repeated MetaSummary ugc_summary = 216 [(field_option).column_group = UGC_SUMMARY, (column_option).column_name = "ugc_sum_", (column_option).column_suffix = "${entity_id}"];

  optional StagePhotos stage_photos = 217 [(field_option).column_group = STAGE_PHOTOS, (column_option).column_name = "stage_pto"];

  optional Feeds feeds = 218 [(field_option).column_group = FEEDS, (column_option).column_name = "feeds"];

  // 影视大全相关视频
  repeated MetaSummary filmtv_related_summary = 219 [(field_option).column_group = FILMTV_RELATED_SUMMARY, (column_option).column_name = "flv_rltd_sum", (column_option).column_suffix = "${entity_id}"];
  //NLP自动识别IP信息
  optional IntellectualPropertySummary nlp_ip_summary = 220 [(field_option).column_group = NLP_IP_SUMMARY, (column_option).column_name = "nlp_ip_summary"];
  //关联商品
  repeated CommoditySummary commodity_summary = 111 [(field_option).column_group = COMMODITY_SUMMARY, (column_option).column_name = "commodity_summary_", (column_option).column_suffix = "${entity_id}"];
  //相关feed
  repeated FeedSummary feed_summary = 221 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "c_221_n_", (column_option).column_suffix = "${entity_id}"];
  //视频明星看点
  optional EpisodeStarViewpoint episode_star_viewpoint = 222 [(field_option).column_group = EPISODE_STAR_POINT, (column_option).column_name = "c_222_n"];
  //短视频拆条信息
  optional CutInfo cut_info = 223 [(field_option).column_group = CUT_INFO, (column_option).column_name = "c_223_n"];
  //标签来源分类
  optional UnifiedClassification unified_classification = 224 [(field_option).column_group = UNIFIED_CLASSIFICATION, (column_option).column_name = "c_224_n"];
  //用户cut截取限制
  optional UgcCutLimit ugc_cut_limit = 226 [(field_option).column_group = UGC_CUT_LIMIT, (column_option).column_name = "c_226_n"];
  //评分信息
  optional SnsStarNumberInfo sns_star_number_info = 227 [(field_option).column_group = SNS_STAR_NUMBER_INFO, (column_option).column_name = "c_227_n"];
  //主播信息
  optional AnchorInfo anchor_info = 228 [(field_option).column_group = ANCHOR_INFO, (column_option).column_name = "c_228_n"];
  //弹幕群聊信息
  optional MynaInfo myna_info = 231 [(field_option).column_group = MYNA_INFO, (column_option).column_name = "c_231_n"];
  //弹幕数
  optional int64 danmu_count = 229 [(field_option).column_group = DANMU_COUNT, (column_option).column_name = "c_229_n"];
  //爱奇艺号信息
  optional IqiyihaoInfo iqiyihao_info = 225 [(field_option).column_group = IQIYIHAO_INFO, (column_option).column_name = "c_225_n"];
  //关联标签
  repeated TagSummary tag_summary = 233 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_233_n_", (column_option).column_suffix = "${source_type}"];
  //片头、片中、片尾信息
  repeated VideoHeadTailInfo video_head_tail_info = 232 [(field_option).column_group = VIDEO_HEAD_TAIL_INFO, (column_option).column_name = "c_232_n_", (column_option).column_suffix = "${type}"];
  //关联圈子（原paopao_summary将00视频转成feed再与不同类型的圈子进行关联，circle_summary依据业务需要如视频标签直接与圈子进行关联）
  repeated MetaSummary circle_summary = 235 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "c_235_n_", (column_option).column_suffix = "${entity_id}"];
  //关联的片段（cut）
  repeated MetaSummary cut_summary = 234 [(field_option).column_group = CUT_SUMMARY, (column_option).column_name = "c_234_n_", (column_option).column_suffix = "${entity_id}"];
  //多维度标签（视频特殊分类标签，字段值：软色情、重口味、负能量、政治敏感、其他）
  repeated string restricted_dimension = 237 [(field_option).column_group = RESTRICTED_DIMENSION, (column_option).column_name = "c_237_n_"];
  //推荐等级的理由
  repeated string editor_recommend_level_reason = 240 [(field_option).column_group = EDITOR_RECOMMEND_LEVEL_REASON, (column_option).column_name = "c_240_n_"];
  //电影票统计相关信息（电影票写入）
  optional MovieTicketStatistics movie_ticket_statistics = 238 [(field_option).column_group = MOVIE_TICKET_STATISTICS, (column_option).column_name = "c_238_n"];
  //电影票信息（乐高写入）
  optional MovieTicketBase movie_ticket_base = 239 [(field_option).column_group = MOVIE_TICKET_BASE, (column_option).column_name = "c_239_n"];
  //图片质量信息
  repeated ImageQualityInfo image_quality_info = 243 [(field_option).column_group = IMAGE_QUALITY_INFO, (column_option).column_name = "c_243_n_", (column_option).column_suffix = "${image_type}"];
  //封面视频的父视频信息
  optional FatherInfo video_cover_father_episode = 246 [(field_option).column_group = VIDEO_COVER_FATHER_EPISODE, (column_option).column_name = "c_246_n"];
  //动态视频封面
  repeated MetaSummary video_cover_summary = 236 [(field_option).column_group = VIDEO_COVER_SUMMARY, (column_option).column_name = "c_236_n_", (column_option).column_suffix = "${entity_id}"];
  //PGC审核信息
  optional PgcCheck pgc_check = 245 [(field_option).column_group = PGC_CHECK, (column_option).column_name = "c_245_n"];
  //关联头条信息
  repeated MetaSummary toutiao_summary = 247 [(field_option).column_group = TOUTIAO_SUMMARY, (column_option).column_name = "c_247_n_", (column_option).column_suffix = "${entity_id}"];
  //合成型视频信息
  //由图文转换而成的视频，一个视频可能有不同的图文来源。
  optional ConvertedVideoInfo converted_video_info = 248 [(field_option).column_group = CONVERTED_VIDEO_INFO, (column_option).column_name = "c_248_n"];
  //弹幕控制信息
  repeated AccessPlayControl danmu_control = 249 [(field_option).column_group = DANMU_CONTROL, (column_option).column_name = "c_249_n_", (column_option).column_suffix = "${play_platform}"];
  //短视频与长视频的关联信息
  repeated CutRelatedVideoSummary cut_related_video_summary = 250 [(field_option).column_group = CUT_RELATED_VIDEO_SUMMARY, (column_option).column_name = "c_250_n_", (column_option).column_suffix = "${related_type}"];
  //关联的1070素材信息
  repeated RelatedOpenRichMediaInfo related_open_rich_media_info = 252 [(field_option).column_group = RELATED_OPEN_RICH_MEDIA_INFO, (column_option).column_name = "c_252_n_", (column_option).column_suffix = "${entity_id}"];
  //审核
  optional Check check = 251 [(field_option).column_group = CHECK, (column_option).column_name = "c_251_n"];
  //视频投生产时的视频AI识别信息
  optional AiProductionInfo ai_production_info = 253 [(field_option).column_group = AI_PRODUCTION_INFO, (column_option).column_name = "c_253_n"];
  //上传视频信息
  optional UploadVideoInfo upload_video_info = 255 [(field_option).column_group = UPLOAD_VIDEO_INFO, (column_option).column_name = "c_255_n"];
  //版权判定信息
  optional CopyrightCheckInfo copyright_check_info = 256 [(field_option).column_group = COPYRIGHT_CHECK_INFO, (column_option).column_name = "c_256_n"];
  //地方站品类
  repeated SubsiteCategory subsite_category = 254 [(field_option).column_group = SUBSITE_CATEGORY, (column_option).column_name = "c_254_n_"];
  //课程信息
  optional CourseInfo course_info = 257 [(field_option).column_group = COURSE_INFO, (column_option).column_name = "c_257_n"];
  //原创属性系统判定信息
  optional OriginalCheckInfo original_check_info = 258 [(field_option).column_group = ORIGINAL_CHECK_INFO, (column_option).column_name = "c_258_n"];
  //爱奇艺号任务信息
  repeated IqiyihaoTaskInfo iqiyihao_task_info = 260 [(field_option).column_group = IQIYIHAO_TASK_INFO, (column_option).column_name = "c_260_n_", (column_option).column_suffix = "${task_id}"];
  //feed信息（由信息流业务方写入）
  optional FeedInfo feed_info = 261 [(field_option).column_group = FEED_INFO, (column_option).column_name = "c_261_n"];
}
// 动漫书 话（章节）
message ComicBookChapter {
  //option
  option (entity_option).table = COMIC_BOOK_CHAPTER_TABLE;
  option (entity_option).entity_name = "comic_book_chapter";
  option (table_option).hbase_table_name = "qipu_comic_book_chapter_table";
  option (entity_option).entity_id_type = COMIC_BOOK_CHAPTER;

  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  
  //基本信息
  optional ComicBookChapterMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

   //所在的图书
  optional FatherInfo father_book = 5 [(field_option).column_group = FATHER_BOOK, (column_option).column_name = "dad_book"];

  //发布相关
  repeated Publication publication = 6 [(field_option).column_group = BOOK_PUBLICATION, (column_option).column_name = "publication_", (column_option).column_suffix = "${platform}"];
  
  // 图片生产相关
  repeated ComicImageFormat format = 7 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt_", (column_option).column_suffix = "${uuid}"];
  
  //付费
  optional Boss boss = 8[(field_option).column_group = BOSS, (column_option).column_name = "boss"];
  
  // 日销量
  optional int64 sales_yesterday = 19 [(field_option).column_group = SALES_YESTERDAY, (column_option).column_name = "sal_yest", (track_option).notracker=true];
  // 周销量
  optional int64 sales_week= 20 [(field_option).column_group = SALES_WEEK, (column_option).column_name = "sal_week", (track_option).notracker=true];
  // 月销量
  optional int64 sales_month = 21 [(field_option).column_group = SALES_MONTH, (column_option).column_name = "sal_month", (track_option).notracker=true];
  // 总销量
  optional int64 sales_volume = 22 [default = 0, (field_option).column_group = SALES_VOLUME, (column_option).column_name = "sal_vol", (track_option).notracker=true];
  
  // 日展示量
  optional int64 click_count_yesterday = 23 [(field_option).column_group = CLICK_COUNT_YESTERDAY, (column_option).column_name = "cli_count_yest", (track_option).notracker=true];
  // 周展示量
  optional int64 click_count_week= 24 [(field_option).column_group = CLICK_COUNT_WEEK, (column_option).column_name = "cli_count_week", (track_option).notracker=true];
  // 月展示量
  optional int64 click_count_month = 25 [(field_option).column_group = CLICK_COUNT_MONTH, (column_option).column_name = "cli_count_month", (track_option).notracker=true];
  // 总展示量
  optional int64 click_count = 26 [default = 0, (field_option).column_group = CLICK_COUNT, (column_option).column_name = "cli_count", (track_option).notracker=true];
  
  // 日打赏
  optional int64 reward_yesterday = 27 [(field_option).column_group = REWARD_YESTERDAY, (column_option).column_name = "rew_yest", (track_option).notracker=true];
  // 周打赏
  optional int64 reward_week= 28 [(field_option).column_group = REWARD_WEEK, (column_option).column_name = "rew_week", (track_option).notracker=true];
  // 月打赏
  optional int64 reward_month = 29 [(field_option).column_group = REWARD_MONTH, (column_option).column_name = "rew_month", (track_option).notracker=true];
  // 总打赏
  optional int64 reward_count = 30 [(field_option).column_group = REWARD_COUNT, (column_option).column_name = "rew_count", (track_option).notracker=true];

  //下载量，总量
  optional int64 download_count = 31 [default = 0, (field_option).column_group = DOWNLOAD_COUNT, (column_option).column_name = "down_count", (track_option).notracker=true];
  //日下载量
  optional int64 download_count_day = 32 [default = 0,(field_option).column_group = DOWNLOAD_COUNT_DAY, (column_option).column_name = "down_count_day", (track_option).notracker=true];
  //周下载量
  optional int64 download_count_week = 33 [default = 0,(field_option).column_group = DOWNLOAD_COUNT_WEEK, (column_option).column_name = "down_count_week", (track_option).notracker=true];
  //月下载量
  optional int64 download_count_month = 34 [default = 0, (field_option).column_group = DOWNLOAD_COUNT_MONTH, (column_option).column_name = "down_count_month", (track_option).notracker=true];
  //原画图片总大小，单位为Byte
  optional int64 total_original_image_size_byte = 35 [(field_option).column_group = TOTAL_ORI_IMG_SIZE, (column_option).column_name = "total_ori_img_size"];
  //定宽章节JPG图片大小
  optional int64 total_fixed_width_image_size_byte = 36 [(field_option).column_group = TOTAL_FIXED_WIDTH_IMAGE_SIZE_BYTE, (column_option).column_name = "c_36_n"];
  //原图章节WEBP图片大小
  optional int64 total_webp_original_image_size_byte = 37 [(field_option).column_group = TOTAL_WEBP_ORIGINAL_IMAGE_SIZE_BYTE, (column_option).column_name = "c_37_n"];
  //定宽章节WEBP图片大小
  optional int64 total_webp_fixed_width_image_size_byte = 38 [(field_option).column_group = TOTAL_WEBP_FIXED_WIDTH_IMAGE_SIZE_BYTE, (column_option).column_name = "c_38_n"];
  //漫画PCW页面信息
  optional BookPageInfo page_info = 39 [(field_option).column_group = PAGE_INFO, (column_option).column_name = "c_39_n"];
  //低质原画图片总大小，单位为Byte
  optional int64 total_original_image_size_byte_50 = 40 [(field_option).column_group = TOTAL_ORIGINAL_IMAGE_SIZE_BYTE_50, (column_option).column_name = "c_40_n"];
  //低质定宽章节JPG图片大小
  optional int64 total_fixed_width_image_size_byte_50 = 41 [(field_option).column_group = TOTAL_FIXED_WIDTH_IMAGE_SIZE_BYTE_50, (column_option).column_name = "c_41_n"];
  //低质原图章节WEBP图片大小
  optional int64 total_webp_original_image_size_byte_50 = 42 [(field_option).column_group = TOTAL_WEBP_ORIGINAL_IMAGE_SIZE_BYTE_50, (column_option).column_name = "c_42_n"];
  //低质定宽章节WEBP图片大小
  optional int64 total_webp_fixed_width_image_size_byte_50 = 43 [(field_option).column_group = TOTAL_WEBP_FIXED_WIDTH_IMAGE_SIZE_BYTE_50, (column_option).column_name = "c_43_n"];
  //付费控制字段
  repeated PublicatonChargeControl charge_control = 44 [(field_option).column_group = CHARGE_CONTROL, (column_option).column_name = "c_44_n_", (column_option).column_suffix = "${platform}"];
}
/**
 *@brief   专辑
 *@details 专辑指电视连续剧、综艺节目等。专辑的每一集视频保存在Episode中。
 **/
message Album {
  //option
  option (entity_option).table = ALBUM_TABLE;
  option (entity_option).entity_name = "album";
  option (table_option).hbase_table_name = "qipu_album_table";
  option (entity_option).entity_id_type = ALBUM;

  option (site_option).zh_tw.site = SITE_ZH_TW;
  option (site_option).zh_tw.table_name = "qipu_album_tw_table";

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional Metadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated MetaSummary episode_summary = 4 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order,entity_id", (field_option).is_repeated_column_notified = true];
  repeated MetaSummary image_summary = 5 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "04", (validator_options).id_type.inside_field = "entity_id"];
  // 预告片列表
  repeated MetaSummary prevue_summary = 6 [(field_option).column_group = CHILD_PREVUE, (column_option).column_name = "chd_pre_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order", (field_option).is_repeated_column_notified = true, (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];
  // 剪辑列表
  repeated MetaSummary trailer_summary = 7 [(field_option).column_group = CHILD_TRAILER, (column_option).column_name = "chd_tlr_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];
  //花絮列表
  repeated MetaSummary titbit_summary = 8 [(field_option).column_group = CHILD_TITBIT, (column_option).column_name = "chd_ttb_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];
  //片段列表
  repeated MetaSummary clip_summary = 37 [(field_option).column_group = CHILD_CLIP, (column_option).column_name = "chd_clp_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id", (field_option).is_repeated_column_notified = true];
  repeated MetaSummary other_summary = 38 [(field_option).column_group = CHILD_OTHER, (column_option).column_name = "chd_oth_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];

  //版权信息
  optional Puyu puyu = 9 [(field_option).column_group = PUYU, (column_option).column_name = "puyu"];
  optional Puyu pps_puyu = 39 [(field_option).column_group = PPS_PUYU, (column_option).column_name = "ppspuyu"];
  optional Seo  seo = 10 [(field_option).column_group = SEO, (column_option).column_name = "seo"];
  optional CommonBase common_base = 46 [(field_option).column_group = COMMON_BASE, (column_option).column_name = "cmbase"];
  optional Base base = 11 [(field_option).column_group = BASE, (column_option).column_name = "base"];
  optional Base pps_base = 40 [(field_option).column_group = PPS_BASE, (column_option).column_name = "ppsbase"];
  optional ContentType content_type = 43 [(field_option).column_group = CONTENT_TYPE, (column_option).column_name = "contype"];
  optional Boss boss = 12 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];

  // Below 5 fields are deprecated
  // Only stores play counts statistics data for below
  // stats_pc,stats_pad,stats_phone,stats_tv
  optional Stats stats_pc = 13 [(field_option).column_group = STATS_PC, (column_option).column_name = "st_pc", (track_option).notracker=true];
  optional Stats stats_pad = 25 [(field_option).column_group = STATS_PAD, (column_option).column_name = "st_pad", (track_option).notracker=true];
  optional Stats stats_phone = 26 [(field_option).column_group = STATS_PHONE, (column_option).column_name = "st_phn", (track_option).notracker=true];
  optional Stats stats_tv = 27 [(field_option).column_group = STATS_TV, (column_option).column_name = "st_tv", (track_option).notracker=true];
  // Only stores up and down counts statistics data for below up_down
  optional Stats up_down = 28;

  optional int64 display_play_count = 30 [(column_option).is_vint64 = true, (field_option).column_group = DISPLAY_PLAY_COUNT, (column_option).column_name = "dpcnt", (track_option).notracker=true];
  optional int64 play_count = 31 [(column_option).is_vint64 = true, (field_option).column_group = PLAY_COUNT, (column_option).column_name = "pycnt", (track_option).notracker=true];
  optional int64 comments_count = 32 [(column_option).is_vint64 = true, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "cmtcnt", (track_option).notracker=true];
  optional int64 share_count = 33 [(column_option).is_vint64 = true, (field_option).column_group = SHARE_COUNT, (column_option).column_name = "shrcnt", (track_option).notracker=true];
  optional int64 up_count = 34 [(column_option).is_vint64 = true, (field_option).column_group = UP_COUNT, (column_option).column_name = "upcnt", (track_option).notracker=true];
  optional int64 down_count = 35 [(column_option).is_vint64 = true, (field_option).column_group = DOWN_COUNT, (column_option).column_name = "dwncnt", (track_option).notracker=true];

  // Album is subordinated to collection,then we can
  // fix album's father relation.
  repeated FatherInfo father_collection = 14 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}", (validator_options).id_type.type = "02", (validator_options).id_type.inside_field = "father_id"];
  repeated FatherInfo father_video_group = 15 [(field_option).column_group = FATHER_VIDEO_GROUP, (column_option).column_name = "dad_vgp_", (column_option).column_suffix = "${father_id}", (validator_options).id_type.type = "06", (validator_options).id_type.inside_field = "father_id"];
  repeated FatherInfo father_ugc_collection = 36 [(field_option).column_group = FATHER_UGC_COLLECTION, (column_option).column_name = "dad_ugccln_", (column_option).column_suffix = "${father_id}"];

  optional int64 last_update_time = 16 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  optional int64 douban_id = 17 [(field_option).column_group = DOUBAN_ID, (column_option).column_name = "db_id"];

  repeated string tag = 18 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  // 当前已知的key-value如下:
  // id_url_hashcode: 乐高写入，这是Album ID的hashcode。在视频播放页上，如果有list={ id_url_hashcode }
  //   则会同时展示该视频所在的播放页。如：http://www.iqiyi.com/v_19rrnmmvtk.html?list=19rrn7c88y
  //   http://www.iqiyi.com/v_19rrnmmvtk.html为视频358362100 的播放地址，19rrn7c88y为该视频所作的album的hashcode。
  // pageurl_iqiyi_pc_29: 乐高写入，这是这个Album详情页面的地址。
  // album_source_type=0剧集类型；=1来源类
  repeated KeyValuePair key_value_pair = 19 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];

  // Related to Qitan of this entity
  optional Qitan qitan = 20 [(field_option).column_group = QITAN, (column_option).column_name = "qtn"];

  // TV play's original TV & time & play schedule, for baidu vedio search
  optional Baidu baidu = 21 [(field_option).column_group = BAIDU, (column_option).column_name = "bdu"];

  // Define the multiple publish for the album or episode.
  repeated MultiPublish multi_publish = 22 [(field_option).column_group = MULTI_PUBLISH, (column_option).column_name = "mtp_", (column_option).column_suffix = "${brand}_${channel_id}"];

  // Define Live information.
  optional LiveMetaSummary live_summary = 23 [(field_option).column_group = LIVE_SUMMARY, (column_option).column_name = "chd_live"];

  // Define share sweet and bitter plan information
  optional SharePartner share_partner = 24 [(field_option).column_group = SHARE_PARTNER, (column_option).column_name = "spr"];

  optional PagePublishStatus page_publish_status = 29 [default = PAGE_WAIT, (field_option).column_group = PAGE_PUBLISH_STATUS, (column_option).column_name = "ppsts"];

  // Below 2 fields are deprecated
  // Recommended, to use the field of "access_play_control".
  // Support platform and region control.
  optional PlatformRegionControl iqiyi_platform_region_control = 41 [(field_option).column_group = IQIYI_PLATFORM_REGION_CONTROL, (column_option).column_name = "iqiyiprc"];
  optional PlatformRegionControl pps_platform_region_control = 42 [(field_option).column_group = PPS_PLATFORM_REGION_CONTROL, (column_option).column_name = "ppsprc"];

  // The play source id from search for FilmTv.
  optional SearchInfo search_info = 44 [(field_option).column_group = SEARCH_INFO, (column_option).column_name = "sci"];

  optional FilmTvCheckStatus film_tv_check_status = 45 [(field_option).column_group = FILM_TV_CHECK_STATUS, (column_option).column_name = "ftcs"];
  optional int64 film_tv_id = 47 [(field_option).column_group = FILM_TV_ID, (column_option).column_name = "ftvid"];

  optional VoteInfo vote_info = 48 [(field_option).column_group = VOTE_INFO, (column_option).column_name = "voteinfo"];

  optional VirtualUgcInfo virtual_ugc_info = 49 [(field_option).column_group = VIRTUAL_UGC_INFO, (column_option).column_name = "vugc"];

  optional RecommendDataSourceList recommend_data_source_list = 50 [(field_option).column_group = RECOMMEND_DATA_SOURCE_LIST, (column_option).column_name = "recdsl"];

  optional OnlineCountUpdateStrategy online_count_update_strategy = 51 [(field_option).column_group = ONLINE_COUNT_UPDATE_STRATEGY, (column_option).column_name = "onlcnt_us"];

  // Support platform and region play control.
  repeated AccessPlayControl access_play_control = 52 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];

  // Define the related qiqu tag.
  repeated QiquTagSummary qiqu_tag_summary = 53 [(field_option).column_group = CHILD_QIQU_TAG, (column_option).column_name = "chd_qtg_", (column_option).column_suffix = "${qiqu_tag_id}"];

  // Define the top recommend place of pps category for the album, episode, collection or ppsCategory.
  repeated PpsCategoryRanking pps_category_ranking = 54 [(field_option).column_group = PPS_CATEGORY_RANKING, (column_option).column_name = "pps_cat_rk_", (column_option).column_suffix = "${pps_category_id}"];

  // 分类或剧集的更新时间(频率), 单位"分钟", 默认为15分钟.
  optional int32 update_frequence = 55 [default = 15, (field_option).column_group = UPDATE_FREQUENCE, (column_option).column_name = "upf"];
  // 数据来源, 标明此分类或剧集的下层信息从特定URL处拿PB文件.
  repeated string update_source = 56 [(column_option).has_value = false, (field_option).column_group = UPDATE_SOURCE, (column_option).column_name = "ups_"];

  // 奇趣标签列表.
  repeated CategorySummary category_summary = 57 [(field_option).column_group = CATEGORY_SUMMARY, (column_option).column_name = "cat_summary_", (column_option).column_suffix = "${category_id}"];

  // 活动通知列表.
  repeated Notice notice = 58 [(field_option).column_group = NOTICE, (column_option).column_name = "notice_", (column_option).column_suffix = "${notice_id}"];

  optional MetaSummaryList related_videos = 59 [(field_option).column_group = RELATED_VIDEOS, (column_option).column_name = "related_videos", (track_option).notracker=true];
  optional MetaSummaryList related_celebrities = 60 [(field_option).column_group = RELATED_CELEBRITIES, (column_option).column_name = "related_celebrities", (track_option).notracker=true];

  // 顶踩数
  optional float up_down_score = 61 [(field_option).column_group = UP_DOWN_SCORE, (column_option).column_name = "updwnsc", (track_option).notracker=true];

  // 综合评分
  optional float sns_score = 62 [(field_option).column_group = SNS_SCORE, (column_option).column_name = "snssc"];

  // 影视原声
  repeated MetaSummary music_summary = 63 [(field_option).column_group = CHILD_MUSIC, (column_option).column_name = "music_sum_", (column_option).column_suffix = "${entity_id}"];

  //关联角色
  repeated CharacterSummary related_character= 64 [(field_option).column_group = RELATED_CHARACTER, (column_option).column_name = "rel_char_", (column_option).column_suffix = "${entity_id}"];

  //视频码流概要信息
  optional VideoInfo video_info = 65 [(field_option).column_group = VIDEO_INFO, (column_option).column_name = "videoinfo"];

   // 合作伙伴相关信息。
  optional Cooperation cooperation = 66 [(field_option).column_group = COOPERATION, (column_option).column_name = "coop"];

  //本地化相关的运营字段；
  repeated LocaleBase local_base = 67 [(field_option).column_group = LOCAL_BASE, (column_option).column_name = "loc_base_", (column_option).column_suffix = "${language}"];

  //支持本地化设置的图片。
  repeated LocaleImage local_image = 68 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  //将关联的episode上的投票信息同步到这里来。Target_id 为 episode的ID；
  repeated VoteSummary episode_vote_summary  = 69 [(field_option).column_group = VOTE_SUMMARY, (column_option).column_name = "vote_sum_", (column_option).column_suffix = "${vote_id}_${target_id}"];

  /**
   *@brief 广告图片设置；
   * @details 支持DSP广告的图片。这个图片是由乐高写入，但是和普通图片生产方式不同，它可以是由投放方直接提供的图片。Episode符合站外投放要求的条件有两个：
   * 1. 该视频有用于站外投放的图片素材，即这个字段有内容；
   * 2. 该视频的站外投放视频时间有效（当前时间>上线时间，当前时间<=转免时间）。 后羿会在有站外投递任务时，调用此接口，获取影片TV ID 列表；
  **/
  optional AdImage ad_image = 70 [(field_option).column_group = AD_IMAGE, (column_option).column_name = "ad_image"];

  //关联的电影节获奖信息，由奇谱负责同步；
  repeated AwardSummary award_summary = 71 [(field_option).column_group = AWARD_SUMMARY, (column_option).column_name = "awa_sum_", (column_option).column_suffix = "${award_id}", (validator_options).id_type.type = "43", (validator_options).id_type.inside_field = "award_id"];

  //多地区运营信息
  repeated RegionBase region_base = 72 [(field_option).column_group = REGION_BASE, (column_option).column_name = "reg_base_", (column_option).column_suffix = "${region}"];

  //圈子关联
  optional PaopaoSummary paopao_summary = 73 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "paopao_sum", (validator_options).id_type.type = "47", (validator_options).id_type.inside_field = "circle_id"];

  //奇谱自动将Episode 下的relative_father_album的关联内容同步到这里
  repeated MetaSummary relative_child_episode = 74 [(field_option).column_group = RELATIVE_CHILD_EPISODE, (column_option).column_name = "rel_chd_epi_", (column_option).column_suffix = "${entity_id}", (validator_options).id_type.type = "00", (validator_options).id_type.inside_field = "entity_id"];

  //圈子关联, 废弃，使用paopaosummary(业务方已有部分对接)
  //optional CircleSummary circle_summary  = 75 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "circle_sum"];

  //付费相关信息
  optional ChargeBase charge_base = 76 [(field_option).column_group = CHARGE_BASE, (column_option).column_name = "charge_base"];

  //地方站属性标签
  repeated Subsite subsite = 96 [(field_option).column_group = SUBSITE, (column_option).column_name = "reg_sta", (column_option).column_suffix = "${subsite_id}"];

  // 动画屋
  optional IqiyiChild iqiyi_child = 97 [(field_option).column_group = IQIYI_CHILD, (column_option).column_name = "iqiyi_child"];

  //排片表list
  optional OnlineScheduleList online_schedule_list = 98 [(field_option).column_group = ONLINE_SCHEDULE_LIST, (column_option).column_name = "online_schedule_list"];

  //关联的ip实体的id
  optional int64 ip_id = 99 [(field_option).column_group = IP_ID, (column_option).column_name = "ip_id"];

  //业务类型
  repeated BusinessType business_type = 100 [(field_option).column_group = BUSINESS_TYPE, (column_option).column_name = "business_type_", (column_option).column_suffix = "${business_type}"];

  // 视频本身经乐高加权后播放量，不包括片花和预告片
  optional int64 weighted_play_count = 101 [(field_option).column_group = WEIGHTED_PLAY_COUNT, (column_option).column_name = "weighted_pycnt"];

  // IP相关信息
  optional IntellectualPropertySummary ip_summary = 102 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "ip_sum"];

  // VideoFormat ID 关联 同步
  optional FormatSummary format_summary = 200 [(field_option).column_group = FORMAT_SUMMARY, (column_option).column_name = "format_sum"];

  // 资料的上下线状态
  optional AvailableStatus film_tv_available_status = 201 [(field_option).column_group = FILM_TV_AVAILABLE_STATUS, (column_option).column_name = "film_tv_avail"];

  // 基础信息(不分站点,不分语种,不分多发)
  optional MetaBasicInfo meta_basic_info = 202 [(field_option).column_group = META_BASIC_INFO, (column_option).column_name = "meta_bsc_info"];

  // 多语种相关信息(不分站点,分语种,不分多发)
  repeated MetaMultilingualInfo meta_multilingual_info = 203 [(field_option).column_group = META_MULTILINGUAL_INFO, (column_option).column_name = "meta_mul_lang_info_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  // 高级信息
  optional MetaAdvancedInfo meta_advanced_info = 204 [(field_option).column_group = META_ADVANCED_INFO, (column_option).column_name = "meta_adv_info"];

  // 内容分级(分站点)
  optional ContentRating content_rating = 205 [(field_option).column_group = CONTENT_RATING, (column_option).column_name = "con_rat",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 视频相关base[无维度]
  optional VideoCommonBase video_common_base = 206 [(field_option).column_group = VIDEO_COMMON_BASE, (column_option).column_name = "v_cm_base"];

  // 主展示运营base[无维度]
  optional OperationBase operation_base = 207 [(field_option).column_group = OPERATION_BASE, (column_option).column_name = "op_base"];

  // 合作相关运营[无维度]
  optional OperationCooperationBase operation_cooperation_base = 208 [(field_option).column_group = OPERATION_COOPERATION_BASE, (column_option).column_name = "op_coop_base"];

  // 控制base[站点](分站点)
  optional OperationControlBase operation_control_base = 209 [(field_option).column_group = OPERATION_CONTROL_BASE, (column_option).column_name = "op_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 多发控制base[站点]乐高来写(分站点,分多发)
  optional OperationMultiControlBase operation_multi_control_base = 210 [(field_option).column_group = OPERATION_MULTI_CONTROL_BASE, (column_option).column_name = "op_mul_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 频道ID
  optional int32 channel_id = 211 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "c_id"];

  // 多语言显示base(分多发)
  repeated OperationLanguageBase operation_language_base = 212 [(field_option).column_group = OPERATION_LANGUAGE_BASE, (column_option).column_name = "op_lang_base_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  // 页面相关[站点](分站点,分多发)
  optional OperationPage operation_page = 213 [(field_option).column_group = OPERATION_PAGE, (column_option).column_name = "op_page",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  optional AlbumSourceType album_source_type = 214 [default = ALBUM_SOURCE_TYPE_EPISODE,(field_option).column_group = ALBUM_SOURCE_TYPE, (column_option).column_name = "src_type"];

  // 关联人物信息
  optional RelatedPeopleInfo related_people_info = 215 [(field_option).column_group = RELATED_PEOPLE_INFO, (column_option).column_name = "related_people"];

  // 关联角色信息
  optional RelatedCharacterInfo related_character_info = 216 [(field_option).column_group = RELATED_CHARACTER_INFO, (column_option).column_name = "related_char"];

  // 资料关联的ugc视频
  repeated MetaSummary ugc_summary = 217 [(field_option).column_group = UGC_SUMMARY, (column_option).column_name = "ugc_sum_", (column_option).column_suffix = "${entity_id}"];

  optional StagePhotos stage_photos = 218 [(field_option).column_group = STAGE_PHOTOS, (column_option).column_name = "stage_pto"];

  optional Feeds feeds = 219 [(field_option).column_group = FEEDS, (column_option).column_name = "feeds"];

  // 影视大全相关视频
  repeated MetaSummary filmtv_related_summary = 220 [(field_option).column_group = FILMTV_RELATED_SUMMARY, (column_option).column_name = "flv_rltd_sum", (column_option).column_suffix = "${entity_id}"];
  //NLP自动识别IP信息
  optional IntellectualPropertySummary nlp_ip_summary = 221 [(field_option).column_group = NLP_IP_SUMMARY, (column_option).column_name = "nlp_ip_summary"];
  //Episode类型
  optional EpisodeType episode_type = 222 [default = UNKNOWN_EPISODE_TYPE, (field_option).column_group = EPISODE_TYPE, (column_option).column_name = "c_222_n"];
  //评分信息
  optional SnsStarNumberInfo sns_star_number_info = 224 [(field_option).column_group = SNS_STAR_NUMBER_INFO, (column_option).column_name = "c_224_n"];
  //爱奇艺号信息
  optional IqiyihaoInfo iqiyihao_info = 223 [(field_option).column_group = IQIYIHAO_INFO, (column_option).column_name = "c_223_n"];
  //弹幕群聊信息
  optional MynaInfo myna_info = 225 [(field_option).column_group = MYNA_INFO, (column_option).column_name = "c_225_n"];
  //关联的片段（cut）
  //关联的视频
  repeated MetaSummary cut_summary = 226 [(field_option).column_group = CUT_SUMMARY, (column_option).column_name = "c_226_n_", (column_option).column_suffix = "${entity_id}"];
  //PGC审核信息
  optional PgcCheck pgc_check = 227 [(field_option).column_group = PGC_CHECK, (column_option).column_name = "c_227_n"];
  //弹幕控制信息
  repeated AccessPlayControl danmu_control = 228 [(field_option).column_group = DANMU_CONTROL, (column_option).column_name = "c_228_n_", (column_option).column_suffix = "${play_platform}"];
  //品类关系
  repeated SubsiteCategory subsite_category = 103 [(field_option).column_group = SUBSITE_CATEGORY, (column_option).column_name = "c_103_n_"];
  //课程专辑信息
  optional CourseInfo course_album_info = 229 [(field_option).column_group = COURSE_ALBUM_INFO, (column_option).column_name = "c_229_n"];
}
/**
 * CP
 */
message ContentProvider {
  //option
  option (entity_option).table = CONTENT_PROVIDER_TABLE;
  option (entity_option).entity_name = "content_provider";
  option (table_option).hbase_table_name = "qipu_content_provider_table";
  option (entity_option).entity_id_type = CONTENT_PROVIDER;

  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // 元数据
  optional ContentProviderMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  // 作者列表
  repeated MetaSummary author_summary = 5 [(field_option).column_group = AUTHOR_SUMMARY, (column_option).column_name = "aut_sum_", (column_option).column_suffix = "${entity_id}"];
}
/**
 * @brief 02剧集
 * @details 一个collection可以包含多个episode和album，一个episode和album可以属于多个collection
 * collection之间不能嵌套。
 * album下只能是episode，episode只能属于一个album，episode可以属于多个collection
 **/
message Collection {
  //option
  option (entity_option).table = COLLECTION_TABLE;
  option (entity_option).entity_name = "collection";
  option (table_option).hbase_table_name = "qipu_collection_table";
  option (entity_option).entity_id_type = COLLECTION;
  //集合id
  required int64 id = 1[(column_option).is_auto_set = true];
  //不变数据
  optional Metadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  //是否删除标志
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //专辑摘要
  repeated MetaSummary album_summary = 4 [(field_option).column_group = CHILD_ALBUM, (column_option).column_name = "chd_alb_", (column_option).column_suffix = "${entity_id}", (field_option).is_repeated_column_notified = true];
  // ugc_episode, episode（视频摘要）
  repeated MetaSummary episode_summary = 5 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}", (field_option).is_repeated_column_notified = true];
  //人物摘要
  repeated MetaSummary people_summary = 6 [(field_option).column_group = CHILD_PEOPLE, (column_option).column_name = "chd_pep_", (column_option).column_suffix = "${entity_id}"];
  //图片摘要
  repeated MetaSummary image_summary = 7 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}"];
  // Define the elements of playlist
  //播单子集摘要
  repeated MetaSummary video_group_summary = 8 [(field_option).column_group = CHILD_VIDEO_GROUP, (column_option).column_name = "chd_vgp_", (column_option).column_suffix = "${entity_id}", (field_option).is_repeated_column_notified = true];
  //搜索引擎优化信息
  optional Seo  seo = 9 [(field_option).column_group = SEO, (column_option).column_name = "seo"];
  optional CommonBase common_base = 38 [(field_option).column_group = COMMON_BASE, (column_option).column_name = "cmbase"];
  //对应的vrs信息
  optional Base base = 10 [(field_option).column_group = BASE, (column_option).column_name = "base"];
  optional Base pps_base = 31 [(field_option).column_group = PPS_BASE, (column_option).column_name = "ppsbase"];
  optional Boss boss = 11 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];

  // Below 5 fields are deprecated
  // Only stores play counts statistics data for below
  // stats_pc,stats_pad,stats_phone,stats_tv
  optional Stats stats_pc = 12 [(field_option).column_group = STATS_PC, (column_option).column_name = "st_pc", (track_option).notracker=true];
  optional Stats stats_pad = 20 [(field_option).column_group = STATS_PAD, (column_option).column_name = "st_pad", (track_option).notracker=true];
  optional Stats stats_phone = 21 [(field_option).column_group = STATS_PHONE, (column_option).column_name = "st_phn", (track_option).notracker=true];
  optional Stats stats_tv = 22 [(field_option).column_group = STATS_TV, (column_option).column_name = "st_tv", (track_option).notracker=true];
  // Only stores up and down counts statistics data
  optional Stats up_down = 23;

  optional int64 display_play_count = 25 [(column_option).is_vint64 = true, (field_option).column_group = DISPLAY_PLAY_COUNT, (column_option).column_name = "dpcnt", (track_option).notracker=true];
  optional int64 play_count = 26 [(column_option).is_vint64 = true, (field_option).column_group = PLAY_COUNT, (column_option).column_name = "pycnt", (track_option).notracker=true];
  optional int64 comments_count = 27 [(column_option).is_vint64 = true, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "cmtcnt", (track_option).notracker=true];
  optional int64 share_count = 28 [(column_option).is_vint64 = true, (field_option).column_group = SHARE_COUNT, (column_option).column_name = "shrcnt", (track_option).notracker=true];
  optional int64 up_count = 29 [(column_option).is_vint64 = true, (field_option).column_group = UP_COUNT, (column_option).column_name = "upcnt", (track_option).notracker=true];
  optional int64 down_count = 30 [(column_option).is_vint64 = true, (field_option).column_group = DOWN_COUNT, (column_option).column_name = "dwncnt", (track_option).notracker=true];
  optional int64 subscribe_count = 37 [(column_option).is_vint64 = true, (field_option).column_group = SUBSCRIBE_COUNT, (column_option).column_name = "ssbcnt", (track_option).notracker=true];

  optional int64 douban_id = 13 [(field_option).column_group = DOUBAN_ID, (column_option).column_name = "db_id"];

  repeated string tag = 14 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 15 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];
  //最后更新时间
  optional int64 last_update_time = 16 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // Related to Qitan of this entity
  optional Qitan qitan = 17 [(field_option).column_group = QITAN, (column_option).column_name = "qtn"];

  //集合类型
  optional CollectionCommon.CollectionType collection_type = 18 [(field_option).column_group = COLLECTION_TYPE, (column_option).column_name = "ctp"];

  optional CollectionCommon.CollectionSubType collection_sub_type = 19 [(field_option).column_group = COLLECTION_SUB_TYPE, (column_option).column_name = "cstp"];

  optional PagePublishStatus page_publish_status = 24 [default = PAGE_WAIT, (field_option).column_group = PAGE_PUBLISH_STATUS, (column_option).column_name = "ppsts"];

  // Below 2 fields are deprecated
  // Recommended, to use the field of "access_play_control".
  // Support platform and region control.
  optional PlatformRegionControl iqiyi_platform_region_control = 32 [(field_option).column_group = IQIYI_PLATFORM_REGION_CONTROL, (column_option).column_name = "iqiyiprc"];
  optional PlatformRegionControl pps_platform_region_control = 33 [(field_option).column_group = PPS_PLATFORM_REGION_CONTROL, (column_option).column_name = "ppsprc"];

  // Total duration of all child episodes.
  optional int32 total_duration = 34 [(field_option).column_group = TOTAL_DURATION, (column_option).column_name = "ttdt"];

  optional UgcPlayListInfo ugc_play_list_info = 35 [(field_option).column_group = UGC_PLAY_LIST_INFO, (column_option).column_name = "ugc_pli"];

  optional Brand which_brand_create = 36 [(field_option).column_group = WHICH_BRAND_CREATE, (column_option).column_name = "wbdc"];

  optional VoteInfo vote_info = 39 [(field_option).column_group = VOTE_INFO, (column_option).column_name = "voteinfo"];

  // Support platform and region play control.
  repeated AccessPlayControl access_play_control = 40 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];

  // Define the top recommend place of pps category for the album, episode, collection or ppsCategory.
  repeated PpsCategoryRanking pps_category_ranking = 41 [(field_option).column_group = PPS_CATEGORY_RANKING, (column_option).column_name = "pps_cat_rk_", (column_option).column_suffix = "${pps_category_id}"];

  // Pps片单.
  optional AutoPlaylistInfo auto_playlist_info = 42 [(field_option).column_group = AUTO_PLAYLIST_INFO, (column_option).column_name = "atplinfo"];

  // 影视资料列表
  repeated MetaSummary film_tv_summary = 43 [(field_option).column_group = CHILD_FILM_TV, (column_option).column_name = "chd_ftv_", (column_option).column_suffix = "${entity_id}"];

  //Define the type of GraphPlaylistType

  enum GraphPlaylistType{
    UNKNOWN_GRAPH_PLAY_LIST_TYPE = -1;
    // Define the timeline of the events and milestones. The subtype of the GraphPlaylistType.
    EVENTS = 1;
    // Define  the auto set with ppc or ugc episodes according to the content association. The subtype of the GraphPlaylistType.
    AUTO_ALBUM = 2;
    // Define the auto set of ppc or ugc episodes according to their theming. The subtype of the GraphPlaylistType.
    AUTO_ALBUM_THEME=3;
  }
  optional GraphPlaylistType graph_playlist_type = 44 [(field_option).column_group = GRAPH_PLAYLIST_TYPE, (column_option).column_name = "gptp"];

  // 顶踩数
  optional float up_down_score = 45 [(field_option).column_group = UP_DOWN_SCORE, (column_option).column_name = "updwnsc", (track_option).notracker=true];
  message Event {
    //相关关键词
    repeated string keyword = 1;
    //事件有效起止时间
    optional StartEndPoint effective_time = 2;
  }
  //事件类相关信息
  optional Event event = 46 [(field_option).column_group = COLLECTION_EVENT, (column_option).column_name = "event"];

  //热度
  optional float heat = 47 [(field_option).column_group = HEAT, (column_option).column_name = "heat"];

  //付费相关信息
  optional ChargeBase charge_base = 48 [(field_option).column_group = CHARGE_BASE, (column_option).column_name = "charge_base"];

  //多地区运营信息
  repeated RegionBase region_base = 49 [(field_option).column_group = REGION_BASE, (column_option).column_name = "reg_base_", (column_option).column_suffix = "${region}"];

  //关联feed信息
  repeated FeedSummary feed_summary = 50 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "c_50_n_", (column_option).column_suffix = "${entity_id}"];
  //片段合集关联视频信息
  repeated CutSetRelatedVideoInfo cut_set_related_video_info = 51 [(field_option).column_group = CUT_SET_RELATED_VIDEO_INFO, (column_option).column_name = "c_51_n_", (column_option).column_suffix = "${related_video_id}"];
  //播单类型
  optional PlaylistType playlist_type = 52 [default = UNKNOWN_PLAYLIST_TYPE, (field_option).column_group = PLAYLIST_TYPE, (column_option).column_name = "c_52_n"];
  //关联的专辑
  repeated MetaSummary related_album = 53 [(field_option).column_group = RELATED_ALBUM, (column_option).column_name = "c_53_n_", (column_option).column_suffix = "${entity_id}"];
  //相关推荐（00、01、02、09视频）
  repeated MetaSummary related_recommend_video = 54 [(field_option).column_group = RELATED_RECOMMEND_VIDEO, (column_option).column_name = "c_54_n_", (column_option).column_suffix = "${entity_id}"];
  //播单运营信息
  optional CollectionBase collection_base = 56 [(field_option).column_group = COLLECTION_BASE, (column_option).column_name = "c_56_n"];
}
// 专题页面
message SubjectPage {
  //option
  option (entity_option).table = SUBJECT_PAGE_TABLE;
  option (entity_option).entity_name = "subject_page";
  option (table_option).hbase_table_name = "qipu_subject_page_table";
  option (entity_option).entity_id_type = SUBJECT_PAGE;

  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional SubjectPageMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  
  // 播控
  repeated SubjectPageAccessPlayControl access_play_control = 5 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];
  // 页面缩略图大图
  optional string page_thumbnail_large = 6 [(field_option).column_group = PAGE_THUMBNAIL_LARGE, (column_option).column_name = "page_thu_large"];
  // 页面缩略图小图
  optional string page_thumbnail_small = 7 [(field_option).column_group = PAGE_THUMBNAIL_SMALL, (column_option).column_name = "page_thu_small"];
  // 页面url
  optional string page_url = 8 [(field_option).column_group = PAGE_URL, (column_option).column_name = "page_url"];
  // 移动端资源位组id
  optional MetaSummary resource_group_summary = 9 [(field_option).column_group = RESOURCE_GROUP_SUMMARY, (column_option).column_name = "res_group_summary"];
  // 组件
  repeated SubjectPageComponent page_component = 10 [(field_option).column_group = PAGE_COMPONENT, (column_option).column_name = "pagecomp_", (column_option).column_suffix = "${component_id}"];

  // 专题描述
  optional string topic_description = 11 [(field_option).column_group = TOPIC_DESCRIPTION, (column_option).column_name = "topic_desc"];
  //关联标签
  repeated TagSummary tag_summary = 12 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_12_n_", (column_option).column_suffix = "${source_type}"];
}
/**
 *@brief 片段/场景/镜头
 *@details  片段/场景/镜头
 *
**/
message ClipSceneShot {
  //option
  option (entity_option).table = CSS_TABLE;
  option (entity_option).entity_name = "css";
  option (table_option).hbase_table_name = "qipu_css_table";
  option (entity_option).entity_id_type = CSS;
  
  required int64 id = 1[(column_option).is_auto_set = true];
  optional Metadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated MetaSummary css_summary = 4 [(field_option).column_group = CHILD_CSS, (column_option).column_name = "chd_css_", (column_option).column_suffix = "${entity_id}"];
  repeated MetaSummary image_summary = 5 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}"];

  // Mainly ContentType distinguishes clip, scene, shot and focus.
  optional CommonBase common_base = 16 [(field_option).column_group = COMMON_BASE, (column_option).column_name = "cmbase"];
  optional Base base = 6 [(field_option).column_group = BASE, (column_option).column_name = "base"];
  optional ContentType content_type = 15 [(field_option).column_group = CONTENT_TYPE, (column_option).column_name = "contype"];

  // Define the view links of video
  repeated ViewLink view_link = 7 [(field_option).column_group = VIEWLINK, (column_option).column_name = "vlk_", (column_option).column_suffix = "${view_link_name.begin_time}_${view_link_name.end_time}_${view_link_name.x_pos}_${view_link_name.y_pos}"];

  // Start-point and end-point from the episode for CSS
  optional StartEndPoint start_end_point = 8 [(field_option).column_group = START_END_POINT, (column_option).column_name = "sep"];

  repeated string tag = 9 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 10 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 11 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional PagePublishStatus page_publish_status = 12 [default = PAGE_WAIT, (field_option).column_group = PAGE_PUBLISH_STATUS, (column_option).column_name = "ppsts"];

  // Support platform and region control.
  optional PlatformRegionControl iqiyi_platform_region_control = 13 [(field_option).column_group = IQIYI_PLATFORM_REGION_CONTROL, (column_option).column_name = "iqiyiprc"];
  optional PlatformRegionControl pps_platform_region_control = 14 [(field_option).column_group = PPS_PLATFORM_REGION_CONTROL, (column_option).column_name = "ppsprc"];

  //本地化相关的运营字段；
  repeated LocaleBase local_base = 17 [(field_option).column_group = LOCAL_BASE, (column_option).column_name = "loc_base_", (column_option).column_suffix = "${language}"];

}
/**
 * 泡泡相关活动，如福利社等
 */
message PaopaoActivity {
  //option
  option (entity_option).table = PAOPAO_ACTIVITY_TABLE;
  option (entity_option).entity_name = "paopao_activity";
  option (table_option).hbase_table_name = "qipu_paopao_activity_table";
  option (entity_option).entity_id_type = PAOPAO_ACTIVITY;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional PaopaoActivityMetaData metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  // 创建时间
  optional int64 create_time = 3 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];
   //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 5 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //活动参与人数
  optional int64 attendance_count = 6 [(field_option).column_group = ATTENDANCE_COUNT, (column_option).column_name = "attend_count"];

  // 相关圈子
  repeated MetaSummary circle_summary = 7 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "circle_sum_", (column_option).column_suffix = "${entity_id}"];

  // 相关feed
  repeated MetaSummary feed_summary = 8 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "feed_sum_", (column_option).column_suffix = "${entity_id}"];

}
/**
 *@brief 图片
 *@details 图片
 **/
message Image {
  //option
  option (entity_option).table = IMAGE_TABLE;
  option (entity_option).entity_name = "image";
  option (table_option).hbase_table_name = "qipu_image_table";
  option (entity_option).entity_id_type = IMAGE;
  
  required int64 id = 1 [(column_option).is_auto_set = true];
  optional ImageMetadata metadata = 2 [(field_option).column_group = IMAGE_METADATA, (column_option).column_name = "img_meta"];
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated ImageFormat image_format = 4 [(field_option).column_group = IMAGE_FORMAT, (column_option).column_name = "imgfmt_", (column_option).column_suffix = "${uuid}"];

  repeated string tag = 5 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 6 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 7 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
}
/**
 * 头条
 */
message HeadLine {
  //option
  option (entity_option).table = HEAD_LINE_TABLE;
  option (entity_option).entity_name = "head_line";
  option (table_option).hbase_table_name = "qipu_head_line_table";
  option (entity_option).entity_id_type = HEAD_LINE;

  required int64 id = 1 [(column_option).is_auto_set = true];

  //是否删除
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //来源类型
  optional HeadLineUploadType upload_type = 4 [default = HEAD_LINE_UPLOAD_TYPE_AUTO_CRAWL,(field_option).column_group = UPLOAD_TYPE, (column_option).column_name = "uptype"];

  //类别
  optional CategorySummaryList category_summaries = 5 [(field_option).column_group = CATEGORY_SUMMARIES, (column_option).column_name = "cate"];

  //标签
  optional StringList tags = 6 [(field_option).column_group = TAGS, (column_option).column_name = "tag"];

  //城市id，具体到市
  repeated int64 city_id = 7 [(column_option).has_value = false,(field_option).column_group = CITY_ID, (column_option).column_name = "city_"];

  // 数据第一次写入奇谱的时间
  optional int64 create_time = 8 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];

  //原始站点信息
  optional OriginalSiteInfo original_site_info = 9 [(field_option).column_group = ORIGINAL_SITE_INFO, (column_option).column_name = "ori_site_info"];

  //关联的feed id列表
  repeated MetaSummary feed_summary = 10 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "feed_sum_", (column_option).column_suffix = "${entity_id}"];

  //封面图
  repeated ImageFormat cover_image = 11 [(field_option).column_group = COVER_IMAGE, (column_option).column_name = "coverimg_", (column_option).column_suffix = "${order}"];

  //头条内容
  repeated HeadLineContent content = 12 [(field_option).column_group = CONTENT, (column_option).column_name = "content_", (column_option).column_suffix = "${order}"];

  //上下线状态
  optional AvailableStatus available_status = 13 [default = ONLINE, (field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "avail"];

  //浏览PV
  optional int64 display_view_count = 14 [default = 0, (field_option).column_group = DISPLAY_VIEW_COUNT, (column_option).column_name = "dis_view_count", (track_option).notracker=true];

  //视频VV（仅视频类头条）
  optional int64 display_play_count = 15 [default = 0, (field_option).column_group = DISPLAY_PLAY_COUNT, (column_option).column_name = "dis_play_count", (track_option).notracker=true];

  //点赞数
  optional int64 like_count = 16 [default = 0, (field_option).column_group = LIKE_COUNT, (column_option).column_name = "like_count", (track_option).notracker=true];

  //评论数
  optional int64 comment_count = 17 [default = 0, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "comment_count", (track_option).notracker=true];

  //分享数
  optional int64 share_count = 18 [default = 0, (field_option).column_group = SHARE_COUNT, (column_option).column_name = "share_count", (track_option).notracker=true];

  //头条审核状态
  optional HeadLineCheckStatus check_status = 19 [default = HEAD_LINE_CHECK_STATUS_CHECKING, (field_option).column_group = CHECK_STATUS, (column_option).column_name = "check_status"];

  //头条类型
  optional HeadLineType type = 20 [default = UNKNOWN_HEAD_LINE_TYPE, (field_option).column_group = TYPE, (column_option).column_name = "type"];

  optional Base base = 21 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  //头条最近一次发布时间
  optional int64 publish_time = 22 [(field_option).column_group = HEAD_LINE_PUBLISH_TIME, (column_option).column_name = "pubt"];

  //头条h5地址
  optional string h5_page_url = 23 [(field_option).column_group = H5_PAGE_URL, (column_option).column_name = "h5_page_url"];

  //头条号uid
  optional int64 uploader_id = 24 [default = 0, (field_option).column_group = UPLOADER_ID, (column_option).column_name = "uploader_id"];

  //频道
  optional IntegerList channel_ids = 25 [(field_option).column_group = CHANNEL_IDS, (column_option).column_name = "cid"];

  //关联的素材实体id
  optional int64 material_id = 26 [(field_option).column_group = MATERIAL_ID, (column_option).column_name = "material_id"];

  //搜索过滤：true是过滤，false是不过滤
  optional bool reject_search = 27 [default = false, (field_option).column_group = REJECT_SEARCH, (column_option).column_name = "reject_search"];

  //推荐过滤
  optional bool reject_recommend =28 [default = false, (field_option).column_group = REJECT_RECOMMEND, (column_option).column_name = "reject_recommend"];

  //标记tag和category是否经过人工修改
  optional HeadLineLabelType label_type = 29 [default = HEAD_LINE_LABEL_TYPE_AUTO, (field_option).column_group = LABEL_TYPE, (column_option).column_name = "label_type"];

  //推荐等级
  optional Base.EDITOR_RECOMMEND_LEVEL editor_recommend_level = 30 [default = GENERAL, (field_option).column_group = EDITOR_RECOMMEND_LEVEL, (column_option).column_name = "edit_recom_lev"];

  optional Qitan qitan = 31 [(field_option).column_group = QITAN, (column_option).column_name = "qtn"];

  // 父素材ID
  optional int64 father_material_id = 32 [(field_option).column_group = FATHER_MATERIAL_ID, (column_option).column_name = "fthr_mtrl_id"];

  // 最后更新原因
  optional HeadLineUpdateReason last_update_reason = 33 [(field_option).column_group = LAST_UPDATE_REASON, (column_option).column_name = "lu_reason"];
  //kvp数组，数据定义请咨询业务线。
  repeated KeyValuePair key_value_pair = 34 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];
  //套壳UGC视频运营信息
  optional UgcBase ugc_base = 35 [(field_option).column_group = UGC_BASE, (column_option).column_name = "ugc_base"];
  //是否为奇艺独播剧
  optional bool is_iqiyi_exclusive = 36 [default = false, (field_option).column_group = IS_IQIYI_EXCLUSIVE, (column_option).column_name = "is_iqy_exclv"];
  //头条关联节目信息
  repeated FatherProgramInfo father_program_info = 38 [(field_option).column_group = FATHER_PROGRAM_INFO, (column_option).column_name = "c_38_n_", (column_option).column_suffix = "${uuid}"];
  //主站统计数据
  optional IqiyiDailyStatistics iqiyi_daily_statistics = 39 [(field_option).column_group = IQIYI_DAILY_STATISTICS, (column_option).column_name = "c_39_n"];
  //奇搜统计数据
  optional QisoDailyStatistics qiso_daily_statistics = 40 [(field_option).column_group = QISO_DAILY_STATISTICS, (column_option).column_name = "c_40_n"];
  //头条天级统计数据
  optional ToutiaoDailyStatistics toutiao_daily_statistics = 41 [(field_option).column_group = TOUTIAO_DAILY_STATISTICS, (column_option).column_name = "c_41_n"];
  //头条小时级统计数据
  optional ToutiaoHourlyStatistics toutiao_hourly_statistics = 42 [(field_option).column_group = TOUTIAO_HOURLY_STATISTICS, (column_option).column_name = "c_42_n"];
  //视频时长
  optional int32 video_duration_seconds = 43 [(field_option).column_group = VIDEO_DURATION_SECONDS, (column_option).column_name = "c_43_n"];
  //内容来源类型
  optional OpenRichMediaSourceType open_rich_media_source_type = 44 [default = UNKNOWN_OPEN_RICH_MEDIA_SOURCE_TYPE, (field_option).column_group = OPEN_RICH_MEDIA_SOURCE_TYPE, (column_option).column_name = "c_44_n"];
  //上传者类型
  optional OpenRichMediaUploaderType open_rich_media_uploader_type = 45 [default = UNKNOWN_OPEN_RICH_MEDIA_UPLOADER_TYPE, (field_option).column_group = OPEN_RICH_MEDIA_UPLOADER_TYPE, (column_option).column_name = "c_45_n"];
  //全景视频类型
  optional PanoFormat.VideoType pano_type = 46 [default = COMMON_VIDEO, (field_option).column_group = PANO_TYPE, (column_option).column_name = "c_46_n"];
  //百度相关信息
  optional BaiduSummary baidu_summary = 47 [(field_option).column_group = BAIDU_SUMMARY, (column_option).column_name = "c_47_n"];
  //是否热点
  //区分每天最新的一些热点内容
  optional bool is_hot = 37 [default = false, (field_option).column_group = IS_HOT, (column_option).column_name = "is_hot"];
  //片头、片中、片尾信息
  repeated VideoHeadTailInfo video_head_tail_info = 48 [(field_option).column_group = VIDEO_HEAD_TAIL_INFO, (column_option).column_name = "c_48_n_", (column_option).column_suffix = "${type}"];
  //短视频拆条信息
  optional CutInfo cut_info = 49 [(field_option).column_group = CUT_INFO, (column_option).column_name = "c_49_n"];
  //NLP自动识别IP信息
  optional IntellectualPropertySummary nlp_ip_summary = 50 [(field_option).column_group = NLP_IP_SUMMARY, (column_option).column_name = "c_50_n"];
  //推荐等级的理由
  repeated string editor_recommend_level_reason = 51 [(field_option).column_group = EDITOR_RECOMMEND_LEVEL_REASON, (column_option).column_name = "c_51_n_"];
  //多维度标签（视频特殊分类标签，字段值：软色情、重口味、负能量、政治敏感、其他）
  repeated string restricted_dimension = 52 [(field_option).column_group = RESTRICTED_DIMENSION, (column_option).column_name = "c_52_n_"];
  //热度状态更改时间（时间戳，毫秒）
  optional int64 hot_status_change_time = 53 [(field_option).column_group = HOT_STATUS_CHANGE_TIME, (column_option).column_name = "c_53_n"];
  //推荐等级更改时间（时间戳，毫秒）
  optional int64 recommend_level_change_time = 54 [(field_option).column_group = RECOMMEND_LEVEL_CHANGE_TIME, (column_option).column_name = "c_54_n"];
  //关联标签
  //开放平台写入
  repeated TagSummary tag_summary = 56 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_56_n_", (column_option).column_suffix = "${source_type}"];
  //地方站属性标签
  //开放平台写入
  repeated Subsite subsite = 57 [(field_option).column_group = SUBSITE, (column_option).column_name = "c_57_n_", (column_option).column_suffix = "${subsite_id}"];
  //下线原因
  optional string offline_reason = 55 [(field_option).column_group = OFFLINE_REASON, (column_option).column_name = "c_55_n"];
  //记录该feed信息的原始来源ID
  optional int64 beehive_source_id = 58 [(field_option).column_group = BEEHIVE_SOURCE_ID, (column_option).column_name = "c_58_n"];
  //修改数据来源类型
  repeated OpenRichMediaUpdateInfo update_info = 59 [(field_option).column_group = UPDATE_INFO, (column_option).column_name = "c_59_n_", (column_option).column_suffix = "${demander_type}"];
}
// Next field id is: 20
//人物
message People {
  //option
  option (entity_option).table = PEOPLE_TABLE;
  option (entity_option).entity_name = "people";
  option (table_option).hbase_table_name = "qipu_people_table";
  option (entity_option).entity_id_type = PEOPLE;
  
  required int64 id = 1 [(column_option).is_auto_set = true];
  optional PeopleMetadata metadata = 2 [(field_option).column_group = PEOPLE_METADATA, (column_option).column_name = "ppl_meta"];
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated MetaSummary image_summary = 4 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}"];

  repeated string tag = 5 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  //
  // 1. people_audit_status: 审核状态，0表示待审核，1表示审核通过，2表示不通过
  //
  repeated KeyValuePair key_value_pair = 6 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 7 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //关联的人物
  optional RelatedPeopleList related_people_list = 8 [(field_option).column_group = RELATED_PEOPLE_LIST, (column_option).column_name = "rpp_lst"];
  //关联的视频
  // This field has be deprecated.
  optional RelatedEpisodeList obsolete_related_episode_list = 9;

  optional Qitan qitan = 10 [(field_option).column_group = QITAN, (column_option).column_name = "qtn"];

  optional int64 passport_id = 11 [(field_option).column_group = PASSPORT_ID, (column_option).column_name = "pss_id"];

  optional RepresentativeWorkList representative_work_list = 12 [(field_option).column_group = REPRESENTATIVE_WORK_LIST, (column_option).column_name = "rwk_lst"];

  // For baidu baike url.
  optional Baidu baidu = 13 [(field_option).column_group = BAIDU, (column_option).column_name = "bdu"];

  optional int64 comments_count = 14 [(column_option).is_vint64 = true, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "cmtcnt", (track_option).notracker=true];
  optional int64 up_count = 15 [(column_option).is_vint64 = true, (field_option).column_group = UP_COUNT, (column_option).column_name = "upcnt", (track_option).notracker=true];
  optional int64 down_count = 16 [(column_option).is_vint64 = true, (field_option).column_group = DOWN_COUNT, (column_option).column_name = "dwncnt", (track_option).notracker=true];

  optional MetaSummaryList related_videos = 17 [(field_option).column_group = RELATED_VIDEOS, (column_option).column_name = "related_videos", (track_option).notracker=true];
  optional MetaSummaryList related_celebrities = 18 [(field_option).column_group = RELATED_CELEBRITIES, (column_option).column_name = "related_celebrities", (track_option).notracker=true];

  // 顶踩数
  optional float up_down_score = 19 [(field_option).column_group = UP_DOWN_SCORE, (column_option).column_name = "updwnsc", (track_option).notracker=true];

  //关联的电影节获奖信息，由奇谱负责同步；
  repeated AwardSummary award_summary = 20 [(field_option).column_group = AWARD_SUMMARY, (column_option).column_name = "awa_sum_", (column_option).column_suffix = "${award_id}"];

  //泡泡入口图  
  optional string paopao_entrance_image = 21 [(field_option).column_group = PAOPAO_ENTRANCE_IMAGE, (column_option).column_name = "paopao_ent_img"]; 

  //圈子关联, 废弃，使用paopaosummary(业务方已有部分对接)
  //optional CircleSummary circle_summary  = 22 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "circle_sum"];

  //圈子关联
  optional PaopaoSummary paopao_summary = 24 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "paopao_sum"];
  
  repeated ImageFormat portrait = 23 [(field_option).column_group = PORTRAIT, (column_option).column_name = "portrait_", (column_option).column_suffix = "${uuid}"];
  //搜索运营信息
  optional SearchBase search_base = 25 [(field_option).column_group = SEARCH_BASE, (column_option).column_name = "c_25_n"];
}
/**
 * 泡泡视频专题表
 */
message PaopaoCollection {
  //option
  option (entity_option).table = PAOPAO_COLLECTION_TABLE;
  option (entity_option).entity_name = "paopao_collection";
  option (table_option).hbase_table_name = "qipu_paopao_collection_table";
  option (entity_option).entity_id_type = PAOPAO_COLLECTION;

  required int64 id = 1 [(column_option).is_auto_set = true];

  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //展现数据
  optional PaopaoCollectionMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  repeated MetaSummary feed_summary = 5 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "feed_sum_", (column_option).column_suffix = "${entity_id}"];

  repeated MetaSummary circle_summary = 6 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "circle_sum_", (column_option).column_suffix = "${entity_id}"];

  optional AvailableStatus available_status = 7 [default = ONLINE, (field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "avail"];

  optional int64 create_time = 8 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];

  //业务更新时间，需要业务方写入
  optional int64 update_time = 9 [(field_option).column_group = UPDATE_TIME, (column_option).column_name = "updt"];

  repeated LocaleImage locale_image = 10 [(field_option).column_group = LOCALE_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  //泡泡专辑创建的来源
  optional CreateSource create_source = 11 [(field_option).column_group = CREATE_SOURCE, (column_option).column_name = "create_source"];
}
// Define an album or episode set
//播单子集
// Next field id is: 10
message VideoGroup {
  //option
  option (entity_option).table = VIDEO_GROUP_TABLE;
  option (entity_option).entity_name = "video_group";
  option (table_option).hbase_table_name = "qipu_videogroup_table";
  option (entity_option).entity_id_type = VIDEO_GROUP;
  
  required int64 id = 1 [(column_option).is_auto_set = true];
  optional Metadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated MetaSummary album_summary = 4 [(field_option).column_group = CHILD_ALBUM, (column_option).column_name = "chd_alb_", (column_option).column_suffix = "${entity_id}"];
  repeated MetaSummary episode_summary = 5[(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order,entity_id"];

  repeated FatherInfo father_collection = 6 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}"];
  repeated FatherInfo father_ugc_collection = 9 [(field_option).column_group = FATHER_UGC_COLLECTION, (column_option).column_name = "dad_ugccln_", (column_option).column_suffix = "${father_id}"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 7 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 8 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
}
/**
 * IP关联表
 */
message IntellectualProperty {
  //option
  option (entity_option).table = INTELLECTUAL_PROPERTY_TABLE;
  option (entity_option).entity_name = "intellectual_property";
  option (table_option).hbase_table_name = "qipu_intellectual_property_table";
  option (entity_option).entity_id_type = INTELLECTUAL_PROPERTY;

  required int64 id = 1 [(column_option).is_auto_set = true];

  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //运营信息
  optional IntellectualPropertyBase base = 4 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  //节目
  repeated IntellectualPropertySummary episode_summary = 5 [(field_option).column_group = EPISODE_SUMMARY, (column_option).column_name = "episode_sum_", (column_option).column_suffix = "${entity_id}"];

  //专辑
  repeated IntellectualPropertySummary album_summary = 6 [(field_option).column_group = ALBUM_SUMMARY, (column_option).column_name = "album_sum_", (column_option).column_suffix = "${entity_id}"];

  //文学
  repeated IntellectualPropertySummary book_summary = 7 [(field_option).column_group = BOOK_SUMMARY, (column_option).column_name = "book_sum_", (column_option).column_suffix = "${entity_id}"];

  //漫画
  repeated IntellectualPropertySummary comicbook_summary = 8 [(field_option).column_group = COMICBOOK_SUMMARY, (column_option).column_name = "comicbook_sum_", (column_option).column_suffix = "${entity_id}"];

  //游戏
  repeated IntellectualPropertySummary game_summary = 9 [(field_option).column_group = GAME_SUMMARY, (column_option).column_name = "game_sum_", (column_option).column_suffix = "${entity_id}"];

  //电影票
  repeated IntellectualPropertySummary ticket_summary = 10 [(field_option).column_group = TICKET_SUMMARY, (column_option).column_name = "ticket_sum_", (column_option).column_suffix = "${entity_id}"];

  //电商商品
  repeated IntellectualPropertySummary commodity_summary = 11 [(field_option).column_group = COMMODITY_SUMMARY, (column_option).column_name = "cmdt_sum_", (column_option).column_suffix = "${entity_id}"];

  //电商专题
  repeated IntellectualPropertySummary commodity_subject_summary = 12 [(field_option).column_group = COMMODITY_SUBJECT_SUMMARY, (column_option).column_name = "cmdt_sbjct_sum_", (column_option).column_suffix = "${entity_id}"];
  //游戏专场
  repeated IntellectualPropertySummary game_activity_summary = 13 [(field_option).column_group = GAME_ACTIVITY_SUMMARY, (column_option).column_name = "gme_acty_smry_", (column_option).column_suffix = "${entity_id}"];
  //电商书籍
  repeated IntellectualPropertySummary commodity_book_summary = 14 [(field_option).column_group = COMMODITY_BOOK_SUMMARY, (column_option).column_name = "c_14_n_", (column_option).column_suffix = "${entity_id}"];
  //NLP文学
  repeated IntellectualPropertySummary nlp_book_summary = 15 [(field_option).column_group = NLP_BOOK_SUMMARY, (column_option).column_name = "c_15_n_", (column_option).column_suffix = "${entity_id}"];
  //nlp漫画
  repeated IntellectualPropertySummary nlp_comicbook_summary = 16 [(field_option).column_group = NLP_COMICBOOK_SUMMARY, (column_option).column_name = "c_16_n_", (column_option).column_suffix = "${entity_id}"];
  //nlp游戏
  repeated IntellectualPropertySummary nlp_game_summary = 17 [(field_option).column_group = NLP_GAME_SUMMARY, (column_option).column_name = "c_17_n_", (column_option).column_suffix = "${entity_id}"];
  //nlp电影票
  repeated IntellectualPropertySummary nlp_ticket_summary = 18 [(field_option).column_group = NLP_TICKET_SUMMARY, (column_option).column_name = "c_18_n_", (column_option).column_suffix = "${entity_id}"];
  //nlp电商商品
  repeated IntellectualPropertySummary nlp_commodity_summary = 19 [(field_option).column_group = NLP_COMMODITY_SUMMARY, (column_option).column_name = "c_19_n_", (column_option).column_suffix = "${entity_id}"];
  //轻小说
  repeated IntellectualPropertySummary light_novel_summary = 20 [(field_option).column_group = LIGHT_NOVEL_SUMMARY, (column_option).column_name = "c_20_n_", (column_option).column_suffix = "${entity_id}"];
  //nlp轻小说
  repeated IntellectualPropertySummary nlp_light_novel_summary = 21 [(field_option).column_group = NLP_LIGHT_NOVEL_SUMMARY, (column_option).column_name = "c_21_n_", (column_option).column_suffix = "${entity_id}"];
}
/**
 * 多发Episode实体
 **/
message MultiPublishEpisode {
  option (entity_option).table = MULTI_PUBLISH_EPISODE_TABLE;
  option (entity_option).entity_name = "multi_publish_episode";
  option (table_option).hbase_table_name = "qipu_multi_publish_episode_table";
  option (entity_option).entity_id_type = MULTI_PUBLISH_EPISODE;

  option (site_option).zh_tw.site = SITE_ZH_TW;
  option (site_option).zh_tw.table_name = "qipu_multi_publish_episode_tw_table";

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  optional OperationMultiControlBase operation_multi_control_base = 4 [(field_option).column_group = OPERATION_MULTI_CONTROL_BASE, (column_option).column_name = "op_mul_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 频道id
  optional int32 channel_id = 5 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "c_id"];

  //区分主多发的多语种base
  repeated OperationLanguageBase operation_language_base = 6 [(field_option).column_group = OPERATION_LANGUAGE_BASE, (column_option).column_name = "op_lang_base_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  optional OperationPage operation_page = 7 [(field_option).column_group = OPERATION_PAGE, (column_option).column_name = "op_page",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 主实体的最新修改时间；由奇谱同步，用于在主发更新的情况下，触发多发ID的消息
  //optional Date primary_last_update_time = 8 [(field_option).column_group = PRIMARY_LAST_UPDATE_TIME, (column_option).column_name = "primary_lut"];

  optional int64 primary_entity_id = 9 [(field_option).column_group = PRIMARY_ENTITY_ID, (column_option).column_name = "primary_id"];

  repeated FatherInfo father_album = 10 [(field_option).column_group = FATHER_ALBUM, (column_option).column_name = "c_10_n_", (column_option).column_suffix = "${father_id}", (validator_options).id_type.type = "08", (validator_options).id_type.inside_field = "father_id"];

  repeated FatherInfo father_collection = 11 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}"];

  repeated string tag = 12 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  repeated LocaleImage local_image = 13 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  repeated KeyValuePair key_value_pair = 14 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];

  optional ContentType content_type = 15 [(field_option).column_group = CONTENT_TYPE, (column_option).column_name = "contype"];
  //合作相关运营[无维度]
  optional OperationCooperationBase operation_cooperation_base = 16 [(field_option).column_group = OPERATION_COOPERATION_BASE, (column_option).column_name = "c_16_n"];
  //VideoFormat ID 关联 同步
  optional FormatSummary format_summary = 17 [(field_option).column_group = FORMAT_SUMMARY, (column_option).column_name = "c_17_n"];
}
/**
 * 热点事件
 */
message HotEvent {
  //option
  option (entity_option).table = HOT_EVENT_TABLE;
  option (entity_option).entity_name = "hot_event";
  option (table_option).hbase_table_name = "qipu_hot_event_table";
  option (entity_option).entity_id_type = HOT_EVENT;

  required int64 id = 1 [(column_option).is_auto_set = true];

  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //运营信息
  optional Base base = 4 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  //元数据
  optional HotEventMetadata metadata = 5 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //关联事件id
  repeated int64 father_id = 6 [(column_option).has_value = false,(field_option).column_group = FATHER_ID, (column_option).column_name = "father_"];

  //事件内容
  repeated HotEventSummary hotevent_summary = 7 [(field_option).column_group = HOT_EVENT_SUMMARY, (column_option).column_name = "hot_event_summary_", (column_option).column_suffix = "${entity_id}"];

  //相关脉络/事件
  repeated RelatedHotEvent related_hotevent = 8 [(field_option).column_group = RELATED_HOT_EVENT, (column_option).column_name = "related_hot_event_", (column_option).column_suffix = "${entity_id}"];

  //相关明星
  repeated RelatedPeople related_people = 9 [(field_option).column_group = RELATED_PEOPLE, (column_option).column_name = "related_people_", (column_option).column_suffix = "${people_id}"];

  //创建时间
  optional int64 create_time = 10 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];

  //标签
  repeated string tag = 11 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  //上线状态
  optional HotEventStatus status = 12 [(field_option).column_group = STATUS, (column_option).column_name = "status"];

  //阅读数
  optional int64 read_count = 13 [default = 0, (field_option).column_group = READ_COUNT, (column_option).column_name = "read_count"];

  //评论数
  optional int64 comment_count = 14 [default = 0, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "comment_count"];

  //点赞数
  optional int64 like_count = 15 [default = 0, (field_option).column_group = LIKE_COUNT, (column_option).column_name = "like_count"];
  //热点类型
  optional HotCollectionType hot_collection_type = 16 [(field_option).column_group = HOT_COLLECTION_TYPE, (column_option).column_name = "c_16_n"];
  //关联影视剧
  repeated HotEventRelatedVideo related_video = 17 [(field_option).column_group = RELATED_VIDEO, (column_option).column_name = "c_17_n_", (column_option).column_suffix = "${video_id}"];
}
/**
 * 多发Album实体
 **/
message MultiPublishAlbum {
  option (entity_option).table = MULTI_PUBLISH_ALBUM_TABLE;
  option (entity_option).entity_name = "multi_publish_album";
  option (table_option).hbase_table_name = "qipu_multi_publish_album_table";
  option (entity_option).entity_id_type = MULTI_PUBLISH_ALBUM;

  option (site_option).zh_tw.site = SITE_ZH_TW;
  option (site_option).zh_tw.table_name = "qipu_multi_publish_album_tw_table";

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 区分主多发的控制base
  optional OperationMultiControlBase operation_multi_control_base = 4 [(field_option).column_group = OPERATION_MULTI_CONTROL_BASE, (column_option).column_name = "op_mul_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  //频道
  optional int32 channel_id = 5 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "c_id"];

  //区分主多发的多语种base
  repeated OperationLanguageBase operation_language_base = 6 [(field_option).column_group = OPERATION_LANGUAGE_BASE, (column_option).column_name = "op_lang_base_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  optional OperationPage operation_page = 7 [(field_option).column_group = OPERATION_PAGE, (column_option).column_name = "op_page",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 主实体的最新修改时间；由奇谱同步，用于在主发更新的情况下，触发多发ID的消息
  //optional Date primary_last_update_time = 8 [(field_option).column_group = PRIMARY_LAST_UPDATE_TIME, (column_option).column_name = "primary_lut"];

  optional int64 primary_entity_id = 9 [(field_option).column_group = PRIMARY_ENTITY_ID, (column_option).column_name = "primary_id"];

  repeated MetaSummary episode_summary = 10 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order,entity_id", (field_option).is_repeated_column_notified = true];

  // 预告片列表
  repeated  MetaSummary prevue_summary = 11 [(field_option).column_group = CHILD_PREVUE, (column_option).column_name = "chd_pre_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order", (field_option).is_repeated_column_notified = true];

  // 剪辑列表
  repeated  MetaSummary trailer_summary = 12 [(field_option).column_group = CHILD_TRAILER, (column_option).column_name = "chd_tlr_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order"];

  // 花絮列表
  repeated  MetaSummary titbit_summary = 13 [(field_option).column_group = CHILD_TITBIT, (column_option).column_name = "chd_ttb_", (column_option).column_suffix = "${entity_id}"];

  // 片段列表
  repeated  MetaSummary clip_summary = 14 [(field_option).column_group = CHILD_CLIP, (column_option).column_name = "chd_clp_", (column_option).column_suffix = "${entity_id}"];

  repeated  MetaSummary other_summary = 15 [(field_option).column_group = CHILD_OTHER, (column_option).column_name = "chd_oth_", (column_option).column_suffix = "${entity_id}"];

  repeated FatherInfo father_collection = 16 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}"];

  repeated string tag = 17 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // 支持本地化设置的图片。
  repeated LocaleImage local_image = 18 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  repeated KeyValuePair key_value_pair = 19 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];
  //合作相关运营[无维度]
  optional OperationCooperationBase operation_cooperation_base = 20 [(field_option).column_group = OPERATION_COOPERATION_BASE, (column_option).column_name = "c_20_n"];
  //VideoFormat ID 关联 同步
  optional FormatSummary format_summary = 21 [(field_option).column_group = FORMAT_SUMMARY, (column_option).column_name = "c_21_n"];
}
/**
 * @brief UGC视频
 * @details
 * User Generated Content，即UGC视频，指由用户自制的，没有版权的内容；开放平台视频托管服务的内容；合作方上传的内容。
 * 由爱奇艺制作的内容，放在Episode里面，并通过UgcInfo来标记这是自制内容。
 * 所有UGC视频都是以09结尾的ID，UGC视频的ID按规定是大于2亿09结尾的，乐高写入的UGC视频奇谱ID都大于2亿，其他端写入的奇谱ID可能小于2亿。
 * UGC视频满足如下任何一个条件时，不会展示在页面上：<ol>
 * <li>deleted为true；</li>
 * <li>iqiyi_check_result不是pass,且不是later_check；</li>
 * <li>iqiyi_page_publish_status不是online。<li>
 * <li>available_status不是online(offline_copyright提示版权原因不可播，offline_other提示其他原因不可播) </li>
 * </ol>
 * PPS页面不可播条件目前由PPS自行控制。具体请咨询PPS同事。
 * Ugc视频满足如下任何一个条件时，播放器就不会播放这个视频: <ol>
 * <li>deleted为true；</li>
 * <li>iqiyi_check_result不是pass,且不是later_check；</li>
 * <li>iqiyi_page_publish_status不是online；</li>
 * <li>available_status不是online(offline_copyright提示版权原因不可播，offline_other提示其他原因不可播) </li>
 * </ol>
 * PPS播放器不可播条件，满足以下任一条件即可：<ol>
 * <li>deleted为true；</li>
 * <li>pps_check_result不是pass,且不是later_check；</li>
 * <li>pps_page_publish_status不是online；</li>
 * <li>4.pps_available_status不是online(offline_copyright提示版权原因不可播，offline_other提示其他原因不可播)</li>
 * </ol>
 * Next field id is: 46
 **/
message UgcEpisode {
  //option
  option (entity_option).table = UGC_EPISODE_TABLE;
  option (entity_option).entity_name = "ugc_episode";
  option (table_option).hbase_table_name = "qipu_ugc_episode_table";
  option (entity_option).entity_id_type = UGC_EPISODE;
 
  //奇谱ID，  所有UGC视频都是以09结尾的ID
  required int64 id = 1 [(column_option).is_auto_set = true];

 //UGC视频的metadata。 存放和运营无关的基础数据。
  optional UgcMetadata metadata= 2 [(field_option).column_group = UGC_METADATA, (column_option).column_name = "ugc_meta"];
  //是否用户删除
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //相关图片
  repeated MetaSummary image_summary = 4 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}"];
  //@Deprecated, 废弃，请使用father_collection.
  repeated FatherInfo father_ugc_collection = 5 [(field_option).column_group = FATHER_UGC_COLLECTION, (column_option).column_name = "dad_ugccln_", (column_option).column_suffix = "${father_id}"];
  //该视频所属的播单ID。对应的，在这些播单下会有这个视频。 业务方仅需在视频中写入这个father_collection，奇谱自动同步这个信息到Collection下。
  repeated FatherInfo father_collection = 35 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}"];
  //码流信息。
  repeated Format format = 6 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt_", (column_option).column_suffix = "${uuid}"];

   //废弃
  optional Stats stats_pc = 7 [(field_option).column_group = STATS_PC, (column_option).column_name = "st_pc", (track_option).notracker=true];
   //废弃
  optional Stats stats_pad = 8 [(field_option).column_group = STATS_PAD, (column_option).column_name = "st_pad", (track_option).notracker=true];
   //废弃
  optional Stats stats_phone = 9 [(field_option).column_group = STATS_PHONE, (column_option).column_name = "st_phn", (track_option).notracker=true];
   //废弃
  optional Stats stats_tv = 10 [(field_option).column_group = STATS_TV, (column_option).column_name = "st_tv", (track_option).notracker=true];
   //废弃
  optional Stats up_down = 16;

  //在页面上显示的播放次数。真实的播放次数记录在play_count中，为了保密，对外不显示真实播放次数。数据由龙源定期（目前是3小时一次）写入到奇谱。
  optional int64 display_play_count = 19 [(column_option).is_vint64 = true, (field_option).column_group = DISPLAY_PLAY_COUNT, (column_option).column_name = "dpcnt", (track_option).notracker=true];
  //实际的播放次数。数据由龙源写入（目前是3小时）。
  optional int64 play_count = 20 [(column_option).is_vint64 = true, (field_option).column_group = PLAY_COUNT, (column_option).column_name = "pycnt", (track_option).notracker=true];
   //评论总数。数据由龙源写入（目前是3小时）。
  optional int64 comments_count = 26 [(column_option).is_vint64 = true, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "cmtcnt", (track_option).notracker=true];
   //分享次数。数据由龙源写入（目前是3小时）。
  optional int64 share_count = 27 [(column_option).is_vint64 = true, (field_option).column_group = SHARE_COUNT, (column_option).column_name = "shrcnt", (track_option).notracker=true];
  //顶次数， 数据由龙源写入（目前是3小时）。
  optional int64 up_count = 28 [(column_option).is_vint64 = true, (field_option).column_group = UP_COUNT, (column_option).column_name = "upcnt", (track_option).notracker=true];
   //踩次数。数据由龙源写入（目前是3小时）；
  optional int64 down_count = 29 [(column_option).is_vint64 = true, (field_option).column_group = DOWN_COUNT, (column_option).column_name = "dwncnt", (track_option).notracker=true];
  /**
   * 三级分类标签。这里的标签是编辑在乐高审核系统中给视频打的tag， metadata下的tag是用户上传视频的时候给视频打的tag。这两个tag会存在重复内容的情况。 另外，音乐频道抓取的视频有额外的一些tag逻辑会写入音乐歌手地区什么的，需要可以咨询产品。
   */
  repeated string tag = 11 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

   /**
   *@brief 键值对。
   *@details 目前已知的有：<ol>
   * <li>iqiyi_check_result：针对iqiyi品牌的审核结果，对应的值有pass/fail/later_check,</li>
   * <li>pps_check_result：针对pps品牌的审核结果，pass/fail/later_check</li>
   * <li>is_display_BulletHell_iqiyi: 是否显示弹幕；</li>
   * <li>isdisplay_CommentStatus_iqi: 是否显示评论；新建资讯、少儿、教育、公益频道的节目，弹幕默认为关闭，评论默认为开启，is_display_BulletHell_iqiyi 为0，isdisplay_CommentStatus_iqiyi为1；新建其他频道（除资讯、少儿、教育、公益频道），如电影频道，弹幕默认为开启，评论默认为开启，is_display_BulletHell_iqiyi 为1，isdisplay_CommentStatus_iqiyi为1；
   * </li>
   * </ol>
   **/
  repeated KeyValuePair key_value_pair = 12 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];

 //最后更新时间，由奇谱自动生成；
  optional int64 last_update_time = 13 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //针对iqiyi品牌的视频播放状态
  optional AvailableStatus available_status = 14 [default = ONLINE, (field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "avail"];
  //针对pps品牌的视频播放状态
  optional AvailableStatus pps_available_status = 24 [default = ONLINE, (field_option).column_group = PPS_AVAILABLE_STATUS, (column_option).column_name = "ppsavail"];

  // 不再使用，请使用ugc_base
  optional Base base = 15 [(field_option).column_group = BASE, (column_option).column_name = "base"];
  //运营信息
  optional UgcBase ugc_base = 22 [(field_option).column_group = UGC_BASE, (column_option).column_name = "ugcbase"];

  optional PpsUgcChannelIdList pps_ugc_channel_id_list = 17 [(field_option).column_group = PPS_UGC_CHANNEL_ID_LIST, (column_option).column_name = "pucil"];

  optional VideoFileInfo raw_video_file_info = 18 [(field_option).column_group = RAW_VIDEO_FILE_INFO, (column_option).column_name = "rawvfile"];
  optional VideoFileInfo film_video_file_info = 30 [(field_option).column_group = FILM_VIDEO_FILE_INFO, (column_option).column_name = "filmvfile"];

  optional UgcCheck ugc_check = 21 [(field_option).column_group = UGC_CHECK, (column_option).column_name = "ugcchk"];
  //针对iqiyi品牌的发布状态
  optional PagePublishStatus iqiyi_page_publish_status = 23 [default = PAGE_WAIT, (field_option).column_group = IQIYI_PAGE_PUBLISH_STATUS, (column_option).column_name = "ppiqysts"];
  //针对pps品牌的页面发布状态
  optional PagePublishStatus pps_page_publish_status = 25 [default = PAGE_WAIT, (field_option).column_group = PPS_PAGE_PUBLISH_STATUS, (column_option).column_name = "ppppssts"];

  // 不再使用，播空请使用access_play_control字段
  optional PlatformRegionControl iqiyi_platform_region_control = 31 [(field_option).column_group = IQIYI_PLATFORM_REGION_CONTROL, (column_option).column_name = "iqiyiprc"];
  // 不再使用，播空请使用access_play_control字段
  optional PlatformRegionControl pps_platform_region_control = 32 [(field_option).column_group = PPS_PLATFORM_REGION_CONTROL, (column_option).column_name = "ppsprc"];

  //Ugc运营优化新增字段
  optional UgcOperation ugc_operation = 33 [(field_option).column_group = UGC_OPERATION, (column_option).column_name = "uoptn"];

 //PPS客户端协议地址和PPS flash播放
  optional PpsUrls pps_urls = 34 [(field_option).column_group = PPS_URLS, (column_option).column_name = "purls"];

  optional UploadType upload_type = 36 [(field_option).column_group = UPLOAD_TYPE, (column_option).column_name = "uptype"];

  optional VoteInfo vote_info = 37 [(field_option).column_group = VOTE_INFO, (column_option).column_name = "voteinfo"];

  optional CopyrightProtection copyright_protection = 38 [(field_option).column_group = COPYRIGHT_PROTECTION, (column_option).column_name = "cprt_pt"];

  //导入音悦台数据时新建的演唱者信息。
  optional MusicInfo music_info = 39 [(field_option).column_group = MUSIC_INFO, (column_option).column_name = "music_info"];

  // The play source id from search for FilmTv.
  optional SearchInfo search_info = 40 [(field_option).column_group = SEARCH_INFO, (column_option).column_name = "sci"];

  optional Fingerprint fingerprint = 41 [(field_option).column_group = FINGERPRINT, (column_option).column_name = "fgrpt"];

  //播控信息.
  repeated AccessPlayControl access_play_control = 42 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];

  //奇趣标签.
  repeated QiquTagSummary qiqu_tag_summary = 43 [(field_option).column_group = CHILD_QIQU_TAG, (column_option).column_name = "chd_qtg_", (column_option).column_suffix = "${qiqu_tag_id}"];

 //关联的话题
  repeated TopicSummary topic_summary = 44 [(field_option).column_group = TOPIC_SUMMARY, (column_option).column_name = "tp_summary_", (column_option).column_suffix = "${topic_id}"];

  // 智能广告打点标记.
  optional AdPointTag ad_point_tag = 45 [(field_option).column_group = AD_POINT_TAG, (column_option).column_name = "ad_point_tag"];

  // 顶踩数得分
  optional float up_down_score = 46 [(field_option).column_group = UP_DOWN_SCORE, (column_option).column_name = "updwnsc", (track_option).notracker=true];

  // 音视频质量
  optional Quality quality = 47 [(field_option).column_group = QUALITY_SCORE, (column_option).column_name = "quality"];

  optional MetaSummaryList related_videos = 48 [(field_option).column_group = RELATED_VIDEOS, (column_option).column_name = "related_videos"];
  optional MetaSummaryList related_celebrities = 49 [(field_option).column_group = RELATED_CELEBRITIES, (column_option).column_name = "related_celebrities"];

  //地方站属性标签
  repeated Subsite subsite = 96 [(field_option).column_group = SUBSITE, (column_option).column_name = "reg_sta", (column_option).column_suffix = "${subsite_id}"];


  //Episode类型
  optional EpisodeType episode_type = 97 [default = PGC, (field_option).column_group = EPISODE_TYPE, (column_option).column_name = "epd_type"];
  
  // User_type
  optional UserType user_type = 98 [default = NORMAL_USER, (field_option).column_group = USER_TYPE, (column_option).column_name = "use_type"];

  // 对应直播节目
  optional MetaSummary live_episode_summary = 99 [(field_option).column_group = LIVE_EPISODE_SUMMARY, (column_option).column_name = "live_video"];

  // 全景视频参数
  optional PanoFormat pano_format= 100 [(field_option).column_group = PANO_FORMAT, (column_option).column_name = "pano_fmt"];

  // 视频本身经乐高加权后播放量，不包括片花和预告片
  optional int64 weighted_play_count = 101 [(field_option).column_group = WEIGHTED_PLAY_COUNT, (column_option).column_name = "weighted_pycnt"];

  //IP相关信息
  optional IntellectualPropertySummary ip_summary = 103 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "ip_summary"];
  //NLP自动识别IP信息
  optional IntellectualPropertySummary nlp_ip_summary = 104 [(field_option).column_group = NLP_IP_SUMMARY, (column_option).column_name = "nlp_ip_summary"];

  //首次上线时间
  optional int64 first_online_time = 105 [(field_option).column_group = FIRST_ONLINE_TIME, (column_option).column_name = "first_online_time"];
  //相关feed
  repeated FeedSummary feed_summary = 107 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "c_107_n_", (column_option).column_suffix = "${entity_id}"];
  //百度推送相关信息
  optional BaiduSummary baidu_summary = 108 [(field_option).column_group = BAIDU_SUMMARY, (column_option).column_name = "c_108_n"];
  //标签来源分类
  optional UnifiedClassification unified_classification = 109 [(field_option).column_group = UNIFIED_CLASSIFICATION, (column_option).column_name = "c_109_n"];
  //True：禁止进入推荐；Flase：允许进入推荐
  optional bool reject_recommend = 110 [default = false, (field_option).column_group = REJECT_RECOMMEND, (column_option).column_name = "c_110_n"];
  //短视频拆条信息
  optional CutInfo cut_info = 112 [(field_option).column_group = CUT_INFO, (column_option).column_name = "c_112_n"];
  //弹幕群聊信息
  optional MynaInfo myna_info = 114 [(field_option).column_group = MYNA_INFO, (column_option).column_name = "c_114_n"];
  //弹幕数
  optional int64 danmu_count = 113 [(field_option).column_group = DANMU_COUNT, (column_option).column_name = "c_113_n"];
  //爱奇艺号信息
  optional IqiyihaoInfo iqiyihao_info = 111 [(field_option).column_group = IQIYIHAO_INFO, (column_option).column_name = "c_111_n"];
  //关联标签
  repeated TagSummary tag_summary = 116 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_116_n_", (column_option).column_suffix = "${source_type}"];
  //标签相关圈子
  repeated MetaSummary circle_summary = 119 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "c_119_n_", (column_option).column_suffix = "${entity_id}"];
  //片头、片中、片尾信息
  repeated VideoHeadTailInfo video_head_tail_info = 115 [(field_option).column_group = VIDEO_HEAD_TAIL_INFO, (column_option).column_name = "c_115_n_", (column_option).column_suffix = "${type}"];
  //片段关联视频信息
  repeated CutRelatedVideoInfo cut_related_video_info = 117 [(field_option).column_group = CUT_RELATED_VIDEO_INFO, (column_option).column_name = "c_117_n_", (column_option).column_suffix = "${entity_id}"];
  //多维度标签（视频特殊分类标签，字段值：软色情、重口味、负能量、政治敏感、其他）
  repeated string restricted_dimension = 120 [(field_option).column_group = RESTRICTED_DIMENSION, (column_option).column_name = "c_120_n_"];
  //推荐等级的理由
  repeated string editor_recommend_level_reason = 121 [(field_option).column_group = EDITOR_RECOMMEND_LEVEL_REASON, (column_option).column_name = "c_121_n_"];
  //是否展示广告
  optional bool is_display_ad = 118 [default = false, (field_option).column_group = IS_DISPLAY_AD, (column_option).column_name = "c_118_n"];
  //图片质量信息
  repeated ImageQualityInfo image_quality_info = 124 [(field_option).column_group = IMAGE_QUALITY_INFO, (column_option).column_name = "c_124_n_", (column_option).column_suffix = "${image_type}"];
  //关联头条信息
  repeated MetaSummary toutiao_summary = 126 [(field_option).column_group = TOUTIAO_SUMMARY, (column_option).column_name = "c_126_n_", (column_option).column_suffix = "${entity_id}"];
  //支持本地化设置的图片
  repeated LocaleImage local_image = 125 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "c_125_n_", (column_option).column_suffix = "${type}"];
  //短视频关联信息
  repeated CutRelatedVideoSummary cut_related_video_summary = 127 [(field_option).column_group = CUT_RELATED_VIDEO_SUMMARY, (column_option).column_name = "c_127_n_", (column_option).column_suffix = "${related_type}"];
  //原始站点信息
  optional OriginalSiteInfo original_site_info = 130 [(field_option).column_group = ORIGINAL_SITE_INFO, (column_option).column_name = "c_130_n"];
  //关联的其他素材信息
  repeated RelatedOpenRichMediaInfo related_open_rich_media_info = 131 [(field_option).column_group = RELATED_OPEN_RICH_MEDIA_INFO, (column_option).column_name = "c_131_n_", (column_option).column_suffix = "${entity_id}"];
  //视频投生产时的视频AI识别信息
  optional AiProductionInfo ai_production_info = 132 [(field_option).column_group = AI_PRODUCTION_INFO, (column_option).column_name = "c_132_n"];
  //审核
  optional Check check = 128 [(field_option).column_group = CHECK, (column_option).column_name = "c_128_n"];
  //该视频所在的Album。一个视频仅可能存在一个Album中。 写入该数据后，奇谱会自动将数据同步到Album.episode_summary字段中。
  optional FatherInfo father_album = 129 [(field_option).column_group = FATHER_ALBUM, (column_option).column_name = "c_129_n"];
  //上传视频信息
  optional UploadVideoInfo upload_video_info = 134 [(field_option).column_group = UPLOAD_VIDEO_INFO, (column_option).column_name = "c_134_n"];
  //版权判定信息
  optional CopyrightCheckInfo copyright_check_info = 135 [(field_option).column_group = COPYRIGHT_CHECK_INFO, (column_option).column_name = "c_135_n"];
  //地方站品类
  repeated SubsiteCategory subsite_category = 133 [(field_option).column_group = SUBSITE_CATEGORY, (column_option).column_name = "c_133_n_"];
  //视频码流概要信息
  optional VideoInfo video_info = 138 [(field_option).column_group = VIDEO_INFO, (column_option).column_name = "c_138_n"];
  //原创属性系统判定信息
  optional OriginalCheckInfo original_check_info = 136 [(field_option).column_group = ORIGINAL_CHECK_INFO, (column_option).column_name = "c_136_n"];
  //爱奇艺号任务信息
  repeated IqiyihaoTaskInfo iqiyihao_task_info = 139 [(field_option).column_group = IQIYIHAO_TASK_INFO, (column_option).column_name = "c_139_n_", (column_option).column_suffix = "${task_id}"];
  //feed信息（由信息流业务方写入）
  optional FeedInfo feed_info = 141 [(field_option).column_group = FEED_INFO, (column_option).column_name = "c_141_n"];
}
/**
 * 开放平台富媒体实体
 */
message OpenRichMedia {
  // option
  option (entity_option).table = OPEN_RICH_MEDIA_TABLE;
  option (entity_option).entity_name = "open_rich_media";
  option (table_option).hbase_table_name = "qipu_open_rich_media_table";
  option (entity_option).entity_id_type = OPEN_RICH_MEDIA;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // 是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // 创建时间
  optional int64 create_time = 4 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];

  // 记录站点或编辑人
  optional int64 uploader_id = 5 [(field_option).column_group = UPLOADER_ID, (column_option).column_name = "uploader_id"];

  // 数据来源类型
  optional OpenRichMediaUploadType upload_type = 6 [default = OPEN_RICH_MEDIA_UPLOAD_TYPE_AUTO_CRAWL,(field_option).column_group = UPLOAD_TYPE, (column_option).column_name = "up_type"];

  // 是否分发泡泡
  optional bool dispatch_paopao = 7 [default = false,(field_option).column_group = DISPATCH_PAOPAO, (column_option).column_name = "dspch_pao"];

  // 是否分发头条
  optional bool dispatch_head_line = 8 [default = false,(field_option).column_group = DISPATCH_HEAD_LINE, (column_option).column_name = "dspch_hline"];

  // 分类标签
  optional CategorySummaryList category_summaries = 9 [(field_option).column_group = CATEGORY_SUMMARIES, (column_option).column_name = "cate_sum"];

  // 标签
  optional StringList tags = 10 [(field_option).column_group = TAGS, (column_option).column_name = "tag"];

  // 原始站点信息
  optional OriginalSiteInfo original_site_info = 11 [(field_option).column_group = ORIGINAL_SITE_INFO, (column_option).column_name = "ori_site_info"];

  // 类型
  optional OpenRichMediaType type = 12 [default = OPEN_RICH_MEDIA_TYPE_NEWS,(field_option).column_group = TYPE, (column_option).column_name = "type"];

  // 封面图
  repeated ImageFormat image_format = 13 [(field_option).column_group = IMAGE_FORMAT, (column_option).column_name = "imgfmt_", (column_option).column_suffix = "${uuid}"];

  // 运营信息
  optional Base base = 14 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  // 头条内容
  repeated OpenRichMediaContent content = 15 [(field_option).column_group = CONTENT, (column_option).column_name = "content_", (column_option).column_suffix = "${order}"];

  // 关联的素材实体id
  optional int64 material_id = 16 [(field_option).column_group = MATERIAL_ID, (column_option).column_name = "material_id"];

  // 头条id
  optional int64 head_line_id = 17 [(field_option).column_group = HEAD_LINE_ID, (column_option).column_name = "hline_id"];

  optional int64 feed_id = 18 [(field_option).column_group = FEED_ID, (column_option).column_name = "feed_id"];

  // 头条审核状态
  optional HeadLineCheckStatus head_line_check_status = 19 [default = HEAD_LINE_CHECK_STATUS_CHECKING,(field_option).column_group = HEAD_LINE_CHECK_STATUS, (column_option).column_name = "hline_chk_stus"];

  // 泡泡审核状态
  optional CheckStatus paopao_check_status = 20 [default = CHECK_DEFAULT,(field_option).column_group = PAOPAO_CHECK_STATUS, (column_option).column_name = "pao_chk_stus"];

  // Feed实体ID关联
  optional LongList feed_id_list = 21 [(field_option).column_group = FEED_ID_LIST, (column_option).column_name = "feed_id_list"];
  //内容来源类型
  optional OpenRichMediaSourceType open_rich_media_source_type = 22 [default = UNKNOWN_OPEN_RICH_MEDIA_SOURCE_TYPE, (field_option).column_group = OPEN_RICH_MEDIA_SOURCE_TYPE, (column_option).column_name = "c_22_n"];
  //上传者类型
  optional OpenRichMediaUploaderType open_rich_media_uploader_type = 23 [default = UNKNOWN_OPEN_RICH_MEDIA_UPLOADER_TYPE, (field_option).column_group = OPEN_RICH_MEDIA_UPLOADER_TYPE, (column_option).column_name = "c_23_n"];
  //全景视频类型
  optional PanoFormat.VideoType pano_type = 24 [default = COMMON_VIDEO, (field_option).column_group = PANO_TYPE, (column_option).column_name = "c_24_n"];
  //百度相关信息
  optional BaiduSummary baidu_summary = 25 [(field_option).column_group = BAIDU_SUMMARY, (column_option).column_name = "c_25_n"];
  //站点关系
  //用来表示内容对应的站点
  repeated Subsite subsite = 26 [(field_option).column_group = SUBSITE, (column_option).column_name = "c_26_n_", (column_option).column_suffix = "${subsite_id}"];
  //品类关系
  //表示内容对应的本地品类（如房产、汽车、旅游等本地服务，地方站独有）
  repeated SubsiteCategory subsite_category = 27 [(field_option).column_group = SUBSITE_CATEGORY, (column_option).column_name = "c_27_n_"];
  //各个业务方的封面图信息
  repeated ImageFormatDemander image_format_demander = 28 [(field_option).column_group = IMAGE_FORMAT_DEMANDER, (column_option).column_name = "c_28_n_", (column_option).column_suffix = "${demander_type}"];
  //关联标签
  repeated TagSummary tag_summary = 29 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_29_n_", (column_option).column_suffix = "${source_type}"];
  //各个业务方的关联标签
  repeated TagSummaryDemander tag_summary_demander = 30 [(field_option).column_group = TAG_SUMMARY_DEMANDER, (column_option).column_name = "c_30_n_", (column_option).column_suffix = "${demander_type}"];
  //各个业务方的运营信息
  repeated BaseDemander base_demander = 31 [(field_option).column_group = BASE_DEMANDER, (column_option).column_name = "c_31_n_", (column_option).column_suffix = "${demander_type}"];
  //各个业务方的内容信息
  repeated ContentDemander content_demander = 32 [(field_option).column_group = CONTENT_DEMANDER, (column_option).column_name = "c_32_n_", (column_option).column_suffix = "${demander_type}"];
  //可用状态（并非上下线状态）
  optional AvailableStatus available_status = 33 [default = ONLINE, (field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "c_33_n"];
  //修改数据来源信息
  repeated OpenRichMediaUpdateInfo update_info = 34 [(field_option).column_group = UPDATE_INFO, (column_option).column_name = "c_34_n_", (column_option).column_suffix = "${demander_type}"];
  //各个业务方的feed信息
  repeated FeedSummaryDemander feed_summary_demander = 35 [(field_option).column_group = FEED_SUMMARY_DEMANDER, (column_option).column_name = "c_35_n_", (column_option).column_suffix = "${demander_type}"];
  //审核信息
  repeated OpenRichMediaCheckStatusInfo check_status_info = 36 [(field_option).column_group = CHECK_STATUS_INFO, (column_option).column_name = "c_36_n_", (column_option).column_suffix = "${demander_type}"];
  //分发信息
  repeated DispatchInfo dispatch_info = 37 [(field_option).column_group = DISPATCH_INFO, (column_option).column_name = "c_37_n_", (column_option).column_suffix = "${demander_type}"];
  //关联的00/09/1070素材信息
  repeated RelatedOpenRichMediaInfo related_open_rich_media_info = 38 [(field_option).column_group = RELATED_OPEN_RICH_MEDIA_INFO, (column_option).column_name = "c_38_n_", (column_option).column_suffix = "${entity_id}"];
}
// Define the Competition
// 赛事 
message Competition {
  //option
  option (entity_option).table = COMPETITION_TABLE;
  option (entity_option).entity_name = "competition";
  option (table_option).hbase_table_name = "qipu_competition_table";
  option (entity_option).entity_id_type = COMPETITION;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional bool deleted = 2  [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional CompetitionMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  // 热点资讯资源位
  optional MetaSummary resource_summary = 5 [(field_option).column_group = RESOURCE_SUMMARY, (column_option).column_name = "chd_res"];

  // 移动端专题资源位组
  optional MetaSummary resource_group_summary = 6 [(field_option).column_group = RESOURCE_GROUP_SUMMARY, (column_option).column_name = "chd_resgroup"];

  // 赛程列表
  repeated MatchSummary match_summary = 7 [(field_option).column_group = MATCH_SUMMARY, (column_option).column_name = "chd_match_", (column_option).column_suffix = "${id}"];

  // 关联榜单
  repeated TrophyListSummary trophy_list_summary = 8 [(field_option).column_group = TROPHY_LIST_SUMMARY, (column_option).column_name = "chd_trophy_", (column_option).column_suffix = "${id}"];

  // 参赛队伍
  repeated CompetitorInfo competitor_info = 9 [(field_option).column_group = COMPETITOR_INFO, (column_option).column_name = "compinfo_", (column_option).column_suffix = "${id}"];

  // 可筛选项目
  //repeated string tag = 10 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // 运营信息
  optional CompetitionBase base = 11 [(field_option).column_group = BASE, (column_option).column_name = "base"];
}
/**
 * 视频码流相关信息实体
 **/
message VideoFormat {
  option (entity_option).table = VIDEO_FORMAT_TABLE;
  option (entity_option).entity_name = "video_format";
  option (table_option).hbase_table_name = "qipu_video_format_table";
  option (entity_option).entity_id_type = VIDEO_FORMAT;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  //视频码流，由媒资写入。
  repeated Format format = 4 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt_", (column_option).column_suffix = "${uuid}"];

  // 码流格式；由乐高媒资写入。
  repeated AudioFormat audio_format = 5 [(field_option).column_group = AUDIO_FORMAT, (column_option).column_name = "aufmt_", (column_option).column_suffix = "${uuid}"];

  // 全景视频参数
  optional PanoFormat pano_format= 6 [(field_option).column_group = PANO_FORMAT, (column_option).column_name = "pano_fmt"];

  // 音视频质量
  optional Quality quality = 7 [(field_option).column_group = QUALITY_COLUMN_GROUP, (column_option).column_name = "quality"];

  //视频码流概要信息
  optional VideoInfo video_info = 8 [(field_option).column_group = VIDEO_INFO, (column_option).column_name = "videoinfo"];

  // 音轨信息
  optional AudioInfo audio_info = 9 [(field_option).column_group = AUDIO_INFO, (column_option).column_name = "auinfo"];

  // 字幕插件信息
  repeated Subtitle subtitle = 10 [(field_option).column_group = SUBTITLE, (column_option).column_name = "sbt_", (column_option).column_suffix = "${uuid}"];

  // DRM key信息
  optional DrmKey drm_key = 11 [(field_option).column_group = DRM_KEY, (column_option).column_name = "drm"];

  // format version
  optional string version = 12 [(field_option).column_group = VERSION, (column_option).column_name = "version"];

  // 视频和码流的关系字段，乐高写入
  repeated MetaSummary episode_summary = 13 [(field_option).column_group = EPISODE_SUMMARY, (column_option).column_name = "episode_sum_", (column_option).column_suffix = "${entity_id}"];
}
// Define the Match
// 赛程
message Match {
  //option
  option (entity_option).table = MATCH_TABLE;
  option (entity_option).entity_name = "match";
  option (table_option).hbase_table_name = "qipu_match_table";
  option (entity_option).entity_id_type = MATCH;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional bool deleted = 2  [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional MatchMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //类别，三级分类，以前用Tag，现在全部改用Category
  repeated CategorySummary category = 5 [(field_option).column_group = CATEGORY_SUMMARY, (column_option).column_name = "cate_", (column_option).column_suffix = "${category_id}"];

  // 参赛运动队/运动员
  repeated CompetitorInfo competitor_info = 6 [(field_option).column_group = COMPETITOR_INFO, (column_option).column_name = "compinfo_", (column_option).column_suffix = "${id}"];

  // 赛事运营
  optional MatchBase base = 7 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  // 关联播单
  repeated MetaSummary collection_summary = 8 [(field_option).column_group = COLLECTION_SUMMARY, (column_option).column_name = "chd_col_", (column_option).column_suffix = "${entity_id}"];

  // 完整回放节目
  optional MetaSummary playback_summary = 9 [(field_option).column_group = PLAYBACK_SUMMARY, (column_option).column_name = "chd_playback"];

  // 关联直播
  optional MetaSummary live_episode_summary = 10 [(field_option).column_group = LIVE_EPISODE_SUMMARY, (column_option).column_name = "chd_liveepi"];

  // 所属赛事
  optional FatherInfo father_competition = 11 [(field_option).column_group = FATHER_COMPETITION, (column_option).column_name = "dad_comp"];
}
/**
 * 明星美图实体
 */
message PeopleImage {
  // option
  option (entity_option).table = PEOPLE_IMAGE_TABLE;
  option (entity_option).entity_name = "people_image";
  option (table_option).hbase_table_name = "qipu_people_image_table";
  option (entity_option).entity_id_type = PEOPLE_IMAGE;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // 是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // 创建时间
  optional int64 create_time = 4 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];

  // 明星ID
  optional int64 people_id = 5 [(field_option).column_group = PEOPLE_ID, (column_option).column_name = "p_id"];

  optional string format = 6 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt"];

  optional int32 height = 7 [(field_option).column_group = HEIGHT, (column_option).column_name = "height"];

  optional int32 width = 8 [(field_option).column_group = WIDTH, (column_option).column_name = "width"];

  optional string url = 9 [(field_option).column_group = URL, (column_option).column_name = "url"];

  // 上传时间
  optional int64 upload_time = 10 [(field_option).column_group = UPLOAD_TIME, (column_option).column_name = "upload_time"];

  // 点赞数
  optional int64 like_count = 11 [(field_option).column_group = LIKE_COUNT, (column_option).column_name = "likcnt"];

  // 举报标识
  optional bool reported = 12 [(field_option).column_group = REPORTED, (column_option).column_name = "reported"];
  //圈主删除字段
  optional OwnerCheckStatus owner_check_status = 13 [default = OWNER_CHECK_STATUS_OK, (field_option).column_group = OWNER_CHECK_STATUS, (column_option).column_name = "owner_check_status"];
  //图集相关
  repeated ImageAlbumSummary image_album_summary = 15 [(field_option).column_group = IMAGE_ALBUM_SUMMARY, (column_option).column_name = "img_abm_smy_", (column_option).column_suffix = "${image_album_id}"];
  //原始图片
  optional OriginalImage original_image = 14 [(field_option).column_group = ORIGINAL_IMAGE, (column_option).column_name = "original_image"];
  //创建用户ID
  optional int64 creator_id = 16 [(field_option).column_group = CREATOR_ID, (column_option).column_name = "c_16_n"];
}
/**
 *@brief  资源位
 *@details 资源位用于为页面上特定组件提供人工运营的数据。目前资源位主要是在乐高后台维护。 
 *
 * 
 **/
message ResourceContainer {
  //option
  option (entity_option).table = RESOURCE_CONTAINER_TABLE;
  option (entity_option).entity_name = "resource_container";
  option (table_option).hbase_table_name = "qipu_resource_container_table";
  option (entity_option).entity_id_type = RESOURCE_CONTAINER;

  //资源位ID，以12结尾。 
  required int64 id = 1 [(column_option).is_auto_set = true];

  //资源位元数据
  optional Metadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //资源位上的元素列表，可以是episode,album,collection等
  repeated ResourceMetaSummary elements_summary = 3 [(field_option).column_group = RESOURCE_ELEMENTS_SUMMARY, (column_option).column_name = "chd_rcr", (column_option).column_suffix = "${entity_id}"];

  //资源位上的二级元素列表
  repeated ResourceMetaSummary secondary_elements_summary = 11 [(field_option).column_group = SECONDARY_RESOURCE_ELEMENTS_SUMMARY, (column_option).column_name = "chd_srcr_", (column_option).column_suffix = "${entity_id}"];

  //是否已删除。奇谱对数据不做物理删除，用这个标志位表示该数据已经删除。 
  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 标记该资源位是否是个资源位组。如果是资源位组，则element_summary是资源位列表
  optional bool is_resource_group = 5 [default = false, (column_option).has_value = false, (field_option).column_group = IS_RESOURCE_GROUP, (column_option).column_name = "is_rcr_gp"];

  /**
   *@brief 资源位类型
   *@details 资源位类型
   */
  enum ResourceType {
    IMAGE_TEXT = 0;
    FOCUS = 1;
    LIST = 2;
    TEXT = 3;
    OTHER = 4;
  }
  //资源位的类型
  optional ResourceType resource_type = 6 [(field_option).column_group = RESOURCE_TYPE, (column_option).column_name = "rcr_tp"];

  //资源位的运营信息
  optional Base base = 7 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  //资源位三级分类标签
  repeated string tag = 8 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  /**
  *@brief 键值对
  *@details 仅供临时、内部使用的属性值，可以使用key-value键值对来保存。
  * 注意：奇谱项目组强烈**不**建议使用Key-Value来存取属性。
  * 如有需要，请务必事先和奇谱项目组沟通，确认无问题后才能使用。 
  * 当前已知的key-value如下:<ol>
  * <li>filter_region: </li>
  * <li>max_view_num: </li>
  * <li>min_view_num：</li>
  * <li>view_num:</li>
  * </ol>
  **/
  repeated KeyValuePair key_value_pair = 9 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];
  
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 10 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional Region post_place = 12 [default = CN, (field_option).column_group = REGION_TYPE, (column_option).column_name = "post_place"];

  // 是否支持联播
  optional bool is_simulcast = 13 [default = false, (field_option).column_group = IS_SIMULCAST, (column_option).column_name = "is_sim"];
}
/**
 * 直播间实体
 */
message LiveRoom {
  // option
  option (entity_option).table = LIVE_ROOM_TABLE;
  option (entity_option).entity_name = "live_room";
  option (table_option).hbase_table_name = "qipu_live_room_table";
  option (entity_option).entity_id_type = LIVE_ROOM;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // 是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // 创建时间
  optional int64 create_time = 4 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];

  // 开始直播时间
  optional int64 live_start_time = 5 [(field_option).column_group = LIVE_START_TIME, (column_option).column_name = "lst"];

  // 上次直播结束时间
  optional int64 last_live_end_time = 6 [(field_option).column_group = LAST_LIVE_END_TIME, (column_option).column_name = "llet"];

  // 运营信息
  optional LiveRoomBase base = 7 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  // 观众数量
  optional int64 audience_count = 8 [(field_option).column_group = AUDIENCE_COUNT, (column_option).column_name = "adc_cnt"];

  // 自动截屏
  optional string auto_screenshot = 9 [(field_option).column_group = AUTO_SCREENSHOT, (column_option).column_name = "auto_scnst"];

  // 身价(没有单位)
  optional int64 live_room_money = 10 [(field_option).column_group = LIVE_ROOM_MONEY, (column_option).column_name = "room_money"];

  // 粉丝数
  optional int64 fans_number = 11 [(field_option).column_group = FANS_NUMBER, (column_option).column_name = "fans_num"];

  // 基本信息
  optional LiveRoomMetadata metadata = 12 [(field_option).column_group = METADATA, (column_option).column_name = "metadata"];

  // 主播等级
  optional int64 presenter_level = 13 [(field_option).column_group = PRESENTER_LEVEL, (column_option).column_name = "presenter_lev"];
  //PCW的url地址
  optional string website_url = 14 [(field_option).column_group = WEBSITE_URL, (column_option).column_name = "website_url"];
  //分平台上下线状态
  repeated Publication publication = 15 [(field_option).column_group = PUBLICATION_COLUMN, (column_option).column_name = "publication_", (column_option).column_suffix = "${platform}"];
  //注册制信息
  optional RegistrationInfo registration_info = 16 [(field_option).column_group = REGISTRATION_INFO, (column_option).column_name = "c_16_n"];
}
/**
 * @brief 图集
 * @details 图集
 **/
message ImageAlbum {
  //option
  option (entity_option).table = IMAGE_ALBUM_TABLE;
  option (entity_option).entity_name = "image_album";
  option (table_option).hbase_table_name = "qipu_image_album_table";
  option (entity_option).entity_id_type = IMAGE_ALBUM;
  //id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //meta信息
  optional ImageAlbumMetadata metadata = 3 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  //创建时间
  optional int64 create_time = 4 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];
  //最后更新时间
  optional int64 last_update_time = 5 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //状态
  optional ImageAlbumStatus status = 6 [default = UNKNOWN_IMAGE_ALBUM_STATUS, (field_option).column_group = STATUS, (column_option).column_name = "status"];
  //关联圈子
  repeated PaopaoSummary paopao_summary = 7 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "paopao_smy_", (column_option).column_suffix = "${circle_id}"];
  //关联明星id
  optional int64 people_id = 8 [(field_option).column_group = PEOPLE_ID, (column_option).column_name = "people_id"];
  //图片总数
  optional int64 image_count = 9 [(field_option).column_group = IMAGE_COUNT, (column_option).column_name = "image_count"];
  //创建者id
  optional int64 creator_id = 10 [(field_option).column_group = CREATOR_ID, (column_option).column_name = "c_10_n"];
}
// The entity message of film and tv.
// Next field id is: 28.
message FilmTvLibrary {
  //option
  option (entity_option).table = FILM_TV_LIBRARY_TABLE;
  option (entity_option).entity_name = "film_tv_library";
  option (table_option).hbase_table_name = "qipu_film_tv_library_table";
  option (entity_option).entity_id_type = FILM_TV_LIBRARY;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional knowledge.pub.library.FilmTvMetadata metadata = 2 [(field_option).column_group = FILM_TV_METADATA, (column_option).column_name = "ftmeta"];

  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  /*
   *  play source id is used to get play source from search.
   *  The play_source_id equals to SearchInfo.doc_id.
   */
  optional string play_source_id = 5 [(field_option).column_group = PLAY_SOURCE_ID, (column_option).column_name = "plss"];

  optional int64 comments_count = 6 [(column_option).is_vint64 = true, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "cmtcnt", (track_option).notracker=true];
  optional int64 share_count = 7 [(column_option).is_vint64 = true, (field_option).column_group = SHARE_COUNT, (column_option).column_name = "shrcnt", (track_option).notracker=true];
  optional int64 up_count = 8 [(column_option).is_vint64 = true, (field_option).column_group = UP_COUNT, (column_option).column_name = "upcnt", (track_option).notracker=true];
  optional int64 down_count = 9 [(column_option).is_vint64 = true, (field_option).column_group = DOWN_COUNT, (column_option).column_name = "dwncnt", (track_option).notracker=true];

  optional RelatedImage poster = 10 [(field_option).column_group = POSTER, (column_option).column_name = "pstr"];
  repeated RelatedImage other_image = 11 [(field_option).column_group = OTHER_IMAGE, (column_option).column_name = "otimg_", (column_option).column_suffix = "${qipu_image_id}"];

  optional Qitan qitan = 12 [(field_option).column_group = QITAN, (column_option).column_name = "qtn"];
  // If qiyi has play source of the filmtv library, this field will connect to it.
  optional int64 qipu_id = 13 [(field_option).column_group = QIPU_ID, (column_option).column_name = "qpid"];

  repeated string tag = 14 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 15 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];

  // The message is deprecated
  // Recommended, to use the message of Feed.
  optional SiteInfoList site_info_list = 16 [(field_option).column_group = SITE_INFO_LIST, (column_option).column_name = "site_info_list"];
  optional DoubanInfo douban_info = 17 [(field_option).column_group = DOUBAN_INFO, (column_option).column_name = "douban_info"];

  // It is used to indicate the lastest episode of different sources.
  repeated Feed feed = 18 [(field_option).column_group = FEED, (column_option).column_name = "feed_", (column_option).column_suffix = "${source_provider}"];

  // Define the film info which screened on the theater.
  optional OnTheater on_theater = 19 [(field_option).column_group = ON_THEATER, (column_option).column_name = "ontht"];

  // Define the related qiqu tag.
  repeated QiquTagSummary qiqu_tag_summary = 20 [(field_option).column_group = CHILD_QIQU_TAG, (column_option).column_name = "chd_qtg_", (column_option).column_suffix = "${qiqu_tag_id}"];

  // 分集剧情(信息).
  repeated Season season = 21 [(field_option).column_group = SEASON, (column_option).column_name = "season_", (column_option).column_suffix = "${order}"];

  // 预告片列表.
  repeated MetaSummary prevue_summary = 22 [(field_option).column_group = CHILD_PREVUE, (column_option).column_name = "chd_pre_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order"];

  // 当前影视资料对应的collection.
  repeated FatherInfo father_collection = 23 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}"];

  optional MetaSummaryList related_videos = 24 [(field_option).column_group = RELATED_VIDEOS, (column_option).column_name = "related_videos", (track_option).notracker=true];
  optional MetaSummaryList related_celebrities = 25 [(field_option).column_group = RELATED_CELEBRITIES, (column_option).column_name = "related_celebrities", (track_option).notracker=true];

  // 顶踩数
  optional float up_down_score = 26 [(field_option).column_group = UP_DOWN_SCORE, (column_option).column_name = "updwnsc", (track_option).notracker=true];

  // 综合评分
  optional float sns_score = 27 [(field_option).column_group = SNS_SCORE, (column_option).column_name = "snssc"];

  repeated MetaSummary ugc_summary = 28 [(field_option).column_group = CHILD_UGC_EPISODE, (column_option).column_name = "chd_ugc_", (column_option).column_suffix = "${entity_id}"];

  //关联的电影节获奖信息，由奇谱负责同步；
  repeated AwardSummary award_summary = 29 [(field_option).column_group = AWARD_SUMMARY, (column_option).column_name = "awa_sum_", (column_option).column_suffix = "${award_id}"];

  // 相关实体id
  optional RelatedEntityId related_entity_id = 30 [(field_option).column_group = RELATED_ENTITY, (column_option).column_name = "rel_ent"];
}
// Define the organization of the share partner.
message OrganizationSharePartner {
  //option
  option (entity_option).table = ORGANIZATION_SHARE_PARTNER_TABLE;
  option (entity_option).entity_name = "organization_share_partner";
  option (table_option).hbase_table_name = "qipu_organization_share_partner_table";
  option (entity_option).entity_id_type = ORGANIZATION_SHARE_PARTNER;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional OrganizationSharePartnerMetadata metadata = 2 [(field_option).column_group = ORGANIZATION_METADATA, (column_option).column_name = "org_meta"];

  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated string tag = 4 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 5 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 6 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
}
/**
 * @brief 头条专辑
 * @details 头条专辑
 **/
message HeadLineAlbum {
  //option
  option (entity_option).table = HEAD_LINE_ALBUM_TABLE;
  option (entity_option).entity_name = "head_line_album";
  option (table_option).hbase_table_name = "qipu_head_line_album_table";
  option (entity_option).entity_id_type = HEAD_LINE_ALBUM;
  //实体id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //头条专辑Meta信息
  optional HeadLineAlbumMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  //内容摘要
  repeated HeadLineAlbumCardSummary card_summary = 3 [(field_option).column_group = CARD_SUMMARY, (column_option).column_name = "card_summary_", (column_option).column_suffix = "${order}"];
  //频道
  repeated int32 channel_id = 4 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "channel_id_"];
  //标签
  repeated string tag = 5 [(field_option).column_group = TAG, (column_option).column_name = "tag_"];
  //详情页信息
  optional HeadLineAlbumAvailableStatus available_status = 6 [default = HEAD_LINE_ALBUM_AVAILABLE_STATUS_OFFLINE, (field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "avail"];
  //最后更新时间
  optional int64 last_update_time = 7 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //创建时间
  optional int64 create_time = 8 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "create_time"];
  //头条专辑类型
  optional HeadLineAlbumType album_type = 9 [default = HEAD_LINE_ALBUM_TYPE_AUTO, (field_option).column_group = ALBUM_TYPE, (column_option).column_name = "album_type"];
  //头条专辑原站点信息
  optional HeadLineIqiyiOriginalInfo iqiyi_original_info = 10 [(field_option).column_group = IQIYI_ORIGINAL_INFO, (column_option).column_name = "iqy_orgl_info"];
  //上传者信息
  optional HeadLineAlbumUploaderInfo uploader_info = 11 [(field_option).column_group = UPLOADER_INFO, (column_option).column_name = "uploader_info"];
  //详情页信息
  optional HeadLineAlbumDetailPageInfo detail_page_info = 12 [(field_option).column_group = DETAIL_PAGE_INFO, (column_option).column_name = "detail_page_info"];
  //是否删除
  optional bool deleted = 13 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
}
// Define the table of the ugc episode set.
// Next field id is: 24
message UgcCollection {
  //option
  option (entity_option).table = UGC_COLLECTION_TABLE;
  option (entity_option).entity_name = "ugc_collection";
  option (table_option).hbase_table_name = "qipu_ugc_collection_table";
  option (entity_option).entity_id_type = UGC_COLLECTION;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional UgcMetadata metadata = 2 [(field_option).column_group = UGC_METADATA, (column_option).column_name = "ugc_meta"];
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated MetaSummary episode_summary = 4 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order,entity_id"];
  repeated MetaSummary image_summary = 5 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}"];
  // Define the elements of playlist
  repeated MetaSummary video_group_summary = 6 [(field_option).column_group = CHILD_VIDEO_GROUP, (column_option).column_name = "chd_vgp_", (column_option).column_suffix = "${entity_id}"];

  optional UgcBase ugc_base = 7 [(field_option).column_group = UGC_BASE, (column_option).column_name = "ugcbase"];

  optional int64 display_play_count = 8 [(column_option).is_vint64 = true, (field_option).column_group = DISPLAY_PLAY_COUNT, (column_option).column_name = "dpcnt", (track_option).notracker=true];
  optional int64 play_count = 9 [(column_option).is_vint64 = true, (field_option).column_group = PLAY_COUNT, (column_option).column_name = "pycnt", (track_option).notracker=true];
  optional int64 comments_count = 10 [(column_option).is_vint64 = true, (field_option).column_group = COMMENT_COUNT, (column_option).column_name = "cmtcnt", (track_option).notracker=true];
  optional int64 share_count = 11 [(column_option).is_vint64 = true, (field_option).column_group = SHARE_COUNT, (column_option).column_name = "shrcnt", (track_option).notracker=true];
  optional int64 up_count = 12 [(column_option).is_vint64 = true, (field_option).column_group = UP_COUNT, (column_option).column_name = "upcnt", (track_option).notracker=true];
  optional int64 down_count = 13 [(column_option).is_vint64 = true, (field_option).column_group = DOWN_COUNT, (column_option).column_name = "dwncnt", (track_option).notracker=true];

  repeated string tag = 14 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 15 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 16 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional UgcCheck ugc_check = 17 [(field_option).column_group = UGC_CHECK, (column_option).column_name = "ugcchk"];

  optional AvailableStatus iqiyi_available_status = 18 [default = ONLINE, (field_option).column_group = IQIYI_AVAILABLE_STATUS, (column_option).column_name = "iqyavail"];
  optional AvailableStatus pps_available_status = 19 [default = ONLINE, (field_option).column_group = PPS_AVAILABLE_STATUS, (column_option).column_name = "ppsavail"];

  optional PagePublishStatus iqiyi_page_publish_status = 20 [default = PAGE_WAIT, (field_option).column_group = IQIYI_PAGE_PUBLISH_STATUS, (column_option).column_name = "ppiqysts"];
  optional PagePublishStatus pps_page_publish_status = 21 [default = PAGE_WAIT, (field_option).column_group = PPS_PAGE_PUBLISH_STATUS, (column_option).column_name = "ppppssts"];

  // Support platform and region control.
  optional PlatformRegionControl iqiyi_platform_region_control = 22 [(field_option).column_group = IQIYI_PLATFORM_REGION_CONTROL, (column_option).column_name = "iqiyiprc"];
  optional PlatformRegionControl pps_platform_region_control = 23 [(field_option).column_group = PPS_PLATFORM_REGION_CONTROL, (column_option).column_name = "ppsprc"];

  // 顶踩数
  optional float up_down_score = 24 [(field_option).column_group = UP_DOWN_SCORE, (column_option).column_name = "updwnsc", (track_option).notracker=true];
}
/**
 * @brief 游戏专场
 * @details 游戏20实体扩展游戏专场实体
 **/
message GameActivity {
  //option
  option (entity_option).table = GAME_ACTIVITY_TABLE;
  option (entity_option).entity_name = "game_activity";
  option (table_option).hbase_table_name = "qipu_game_activity_table";
  option (entity_option).entity_id_type = GAME_ACTIVITY;
  //游戏专场id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //游戏专场的编目信息
  optional AppGroupMetadata metadata = 3 [(field_option).column_group = METADATA, (column_option).column_name = "metadata"];
  //主标签
  optional string main_tag = 4 [(field_option).column_group = MAIN_TAG, (column_option).column_name = "main_tag"];
  //推荐标签
  repeated string recommended_tag = 5 [(field_option).column_group = RECOMMENDED_TAG, (column_option).column_name = "rcmded_tag"];
  //运营信息
  optional AppBase base = 6 [(field_option).column_group = BASE, (column_option).column_name = "base"];
  //是否网页访问
  optional bool is_web = 7 [default = false, (field_option).column_group = IS_WEB, (column_option).column_name = "is_web"];
  //专场页面地址
  optional string home_page_url = 8 [(field_option).column_group = HOME_PAGE_URL, (column_option).column_name = "hme_pge_url"];
  //游戏业务内部游戏id
  optional int64 inward_game_id = 9 [(field_option).column_group = INWARD_GAME_ID, (column_option).column_name = "inwd_gme_id"];
  //IP关联
  optional IntellectualPropertySummary ip_summary = 10 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "ip_smry"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 11 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
}
// Define the ads material info
message AdsMaterial {
  //option
  option (entity_option).table = ADS_MATERIAL_TABLE;
  option (entity_option).entity_name = "ads_material";
  option (table_option).hbase_table_name = "qipu_ads_material_table";
  option (entity_option).entity_id_type = ADS_MATERIAL;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional AdsMaterialMetadata metadata = 2 [(field_option).column_group = ADS_MATERIAL_METADATA, (column_option).column_name = "ads_meta"];

  repeated Format format = 3 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt_", (column_option).column_suffix = "${uuid}"];

  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated string tag = 5 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 6 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 7 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional VideoFileInfo raw_video_file_info = 8 [(field_option).column_group = RAW_VIDEO_FILE_INFO, (column_option).column_name = "rawvfile"];
  optional VideoFileInfo film_video_file_info = 9 [(field_option).column_group = FILM_VIDEO_FILE_INFO, (column_option).column_name = "filmvfile"];
}
/**
 * @brief 轻小说
 * @details 轻小说实体。
 **/
message LightNovel {
  //option
  option (entity_option).table = LIGHT_NOVEL_TABLE;
  option (entity_option).entity_name = "light_novel";
  option (table_option).hbase_table_name = "qipu_light_novel_table";
  option (entity_option).entity_id_type = LIGHT_NOVEL;
  //实体id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //基本信息
  optional LightNovelMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "c_4_n"];
  //运营信息
  optional BookBase base = 5 [(field_option).column_group = BASE, (column_option).column_name = "c_5_n"];
  //卷情况
  repeated MetaSummary volume_summary = 6 [(field_option).column_group = CHILD_VOLUME, (column_option).column_name = "c_6_n_", (column_option).column_suffix = "${entity_id}"];
  //章情况
  repeated MetaSummary chapter_summary = 7 [(field_option).column_group = CHILD_CHAPTER, (column_option).column_name = "c_7_n_", (column_option).column_suffix = "${entity_id}"];
  //创作者信息
  repeated CreatorSummary creator_summary = 8 [(field_option).column_group = CREATOR_SUMMARY, (column_option).column_name = "c_8_n_", (column_option).column_suffix = "${entity_id}"];
  //CP信息
  optional MetaSummary cp_summary = 9 [(field_option).column_group = CP_SUMMARY, (column_option).column_name = "c_9_n"];
  //图片相关
  optional LocaleImage local_image = 10 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "c_10_n"];
  //cp相关
  optional CpInfo cp_info = 11 [(field_option).column_group = CP_INFO, (column_option).column_name = "c_11_n"];
  //二级分类
  repeated CategorySummary category = 12 [(field_option).column_group = CATEGORY_SUMMARY, (column_option).column_name = "c_12_n_", (column_option).column_suffix = "${category_id}"];
  //标签
  repeated TagSummary tag_summary = 13 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_13_n_", (column_option).column_suffix = "${source_type}"];
  //更新信息
  optional LightNovelUpdateInfo update_info = 14 [(field_option).column_group = UPDATE_INFO, (column_option).column_name = "c_14_n"];
  //完结状况
  optional BookAvailableStatus serialize_status = 15 [(field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "c_15_n"];
  //播控
  repeated Publication publication = 16 [(field_option).column_group = BOOK_PUBLICATION, (column_option).column_name = "c_16_n_", (column_option).column_suffix = "${platform}"];
  //最新章发布时间（时间戳，单位毫秒）
  optional int64 chapter_last_online_time = 17 [(field_option).column_group = CHAPTER_LAST_ONLINE_TIME, (column_option).column_name = "c_17_n"];
  //轻小说人气值（前台写入）
  optional int64 book_polularity = 18 [(field_option).column_group = BOOK_POLULARITY, (column_option).column_name = "c_18_n"];
  //总卷数
  optional int64 volume_count = 19 [(field_option).column_group = VOLUME_COUNT, (column_option).column_name = "c_19_n"];
  //总章数
  optional int64 chapter_count = 20 [(field_option).column_group = CHAPTER_COUNT, (column_option).column_name = "c_20_n"];
  //付费控制信息
  repeated PublicatonChargeControl charge_control = 21 [(field_option).column_group = CHARGE_CONTROL, (column_option).column_name = "c_21_n_", (column_option).column_suffix = "${platform}"];
  //合同号
  //乐高写入
  repeated int64 contract_code = 22 [(field_option).column_group = CONTRACT_CODE, (column_option).column_name = "c_22_n_"];
  //版权信息
  //璞玉写入
  repeated Puyu multi_puyu = 23 [(field_option).column_group = MULTI_PUYU, (column_option).column_name = "c_23_n_", (column_option).column_suffix = "${contract_code}"];
  //关联IP
  optional IntellectualPropertySummary ip_summary = 24 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "c_24_n"];
  //日阅读量
  optional int64 click_count_yesterday = 25 [(field_option).column_group = CLICK_COUNT_YESTERDAY, (column_option).column_name = "c_25_n"];
  //周阅读量
  optional int64 click_count_week = 26 [(field_option).column_group = CLICK_COUNT_WEEK, (column_option).column_name = "c_26_n"];
  //月阅读量
  optional int64 click_count_month = 27 [(field_option).column_group = CLICK_COUNT_MONTH, (column_option).column_name = "c_27_n"];
  //总阅读量
  optional int64 click_count = 28 [(field_option).column_group = CLICK_COUNT, (column_option).column_name = "c_28_n"];
  //日收藏量
  optional int64 collect_count_yesterday = 29 [(field_option).column_group = COLLECT_COUNT_YESTERDAY, (column_option).column_name = "c_29_n"];
  //周收藏量
  optional int64 collect_count_week = 30 [(field_option).column_group = COLLECT_COUNT_WEEK, (column_option).column_name = "c_30_n"];
  //月收藏量
  optional int64 collect_count_month = 31 [(field_option).column_group = COLLECT_COUNT_MONTH, (column_option).column_name = "c_31_n"];
  //总收藏量
  optional int64 collect_count = 32 [(field_option).column_group = COLLECT_COUNT, (column_option).column_name = "c_32_n"];
}
// Define the tv live center with EPG.
// The message is deprecated.
// Recommended, to use the message of LiveChannel and LiveEpisode.
// 该实体已被拆分成LiveEpisode和LiveChannel二个实体.
// 直播组写时是同时写TvLiveCenter和LiveEpisode(LiveChannel).
// 一些业务组(如:推荐)还在使用当前实体,而其它业务组(如:广告)则使用新的实体(LiveChannel,LiveEpisode).
message TvLiveCenter {
  //option
  option (entity_option).table = TV_LIVE_CENTER_TABLE;
  option (entity_option).entity_name = "tv_live_center";
  option (table_option).hbase_table_name = "qipu_tv_live_center_table";
  option (entity_option).entity_id_type = TV_LIVE_CENTER;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional TvLiveCenterMetadata metadata = 2 [(field_option).column_group = TV_LIVE_CENTER_METADATA, (column_option).column_name = "tvlive_meta"];

  repeated TvChannel tv_channel = 3 [(field_option).column_group = TV_CHANNEL, (column_option).column_name = "tvchn_", (column_option).column_suffix = "${id}"];

  repeated ElectronicProgramGuide electronic_program_guide = 4 [(field_option).column_group = ELECTRONIC_PROGRAM_GUIDE, (column_option).column_name = "epg_", (column_option).column_suffix = "${program_id}"];

  repeated TvLiveBase tv_live_base = 5 [(field_option).column_group = TV_LIVE_BASE, (column_option).column_name = "tvl_base_", (column_option).column_suffix = "${tv_channel_id}"];

  repeated TvLiveStreamList tv_live_stream_list = 6 [(field_option).column_group = TV_LIVE_STREAM_LIST, (column_option).column_name = "tvl_stmlst_", (column_option).column_suffix = "${tv_channel_id}"];

  repeated string tag = 7 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 8 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 9 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional bool deleted = 10 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  optional Boss boss = 11 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];
}
/**
 * @brief 轻小说卷
 * @details 轻小说的卷
 **/
message LightNovelVolume {
  //option
  option (entity_option).table = LIGHT_NOVEL_VOLUME_TABLE;
  option (entity_option).entity_name = "light_novel_volume";
  option (table_option).hbase_table_name = "qipu_light_novel_volume_table";
  option (entity_option).entity_id_type = LIGHT_NOVEL_VOLUME;
  //实体id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //卷基本信息
  optional LightNovelVolumeMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "c_4_n"];
  //所属书
  optional FatherInfo father_book = 5 [(field_option).column_group = FATHER_BOOK, (column_option).column_name = "c_5_n"];
  //章节
  repeated MetaSummary chapter_summary = 6 [(field_option).column_group = CHAPTER_SUMMARY, (column_option).column_name = "c_6_n_", (column_option).column_suffix = "${entity_id}"];
  //该卷章数
  optional int64 chapter_count = 7 [(field_option).column_group = CHAPTER_COUNT, (column_option).column_name = "c_7_n"];
  //最新章发布时间（时间戳，单位毫秒）
  optional int64 chapter_last_online_time = 8 [(field_option).column_group = CHAPTER_LAST_ONLINE_TIME, (column_option).column_name = "c_8_n"];
  //发布控制
  optional Publication publication = 9 [(field_option).column_group = BOOK_PUBLICATION, (column_option).column_name = "c_9_n"];
}
// Define the pps category.
message PpsCategory {
  //option
  option (entity_option).table = PPS_CATEGORY_TABLE;
  option (entity_option).entity_name = "pps_category";
  option (table_option).hbase_table_name = "qipu_pps_category_table";
  option (entity_option).entity_id_type = PPS_CATEGORY;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional Metadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated MetaSummary category_summary = 4 [(field_option).column_group = PPS_CATEGORY_CHILD, (column_option).column_name = "chd_cat_", (column_option).column_suffix = "${entity_id}"];

  optional PpsCategoryPlatformData pps_category_platform_data = 5 [(field_option).column_group = PPS_CATEGORY_PLATFORM_DATA, (column_option).column_name = "ppscatdata"];
  optional PpsCategoryBase pps_category_base = 6 [(field_option).column_group = PPS_CATEGORY_BASE, (column_option).column_name = "ppscatbase"];

  repeated string tag = 7 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 8 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 last_update_time = 9 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // Support platform and region control.
  optional PlatformRegionControl pps_platform_region_control = 10 [(field_option).column_group = PPS_PLATFORM_REGION_CONTROL, (column_option).column_name = "ppsprc"];

  optional FatherInfo father_pps_category = 11 [(field_option).column_group = FATHER_PPS_CATEGORY, (column_option).column_name = "dad_pcat"];

  // The field is deprecated.
  // Recommended, to use the field of "collection.auto_playlist_info".
  optional RecommendDataSourceList recommend_data_source_list = 12 [(field_option).column_group = RECOMMEND_DATA_SOURCE_LIST, (column_option).column_name = "recdsl"];

  // Define the top recommend place of pps category for the album, episode, collection or ppsCategory.
  repeated PpsCategoryRanking pps_category_ranking = 13 [(field_option).column_group = PPS_CATEGORY_RANKING, (column_option).column_name = "pps_cat_rk_", (column_option).column_suffix = "${pps_category_id}"];

  // 分类或剧集的更新时间(频率), 单位"分钟", 默认为15分钟.
  optional int32 update_frequence = 14 [default = 15, (field_option).column_group = UPDATE_FREQUENCE, (column_option).column_name = "upf"];
  // 数据来源, 标明此分类或剧集的下层信息从特定URL处拿PB文件.
  repeated string update_source = 15 [(column_option).has_value = false, (field_option).column_group = UPDATE_SOURCE, (column_option).column_name = "ups_"];
}
/**
 * @brief 轻小说章
 * @details 轻小说的章
 **/
message LightNovelChapter {
  //option
  option (entity_option).table = LIGHT_NOVEL_CHAPTER_TABLE;
  option (entity_option).entity_name = "light_novel_chapter";
  option (table_option).hbase_table_name = "qipu_light_novel_chapter_table";
  option (entity_option).entity_id_type = LIGHT_NOVEL_CHAPTER;
  //实体id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //基本信息
  optional LightNovelChapterMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "c_4_n"];
  //所属卷
  optional FatherInfo father_volume = 5 [(field_option).column_group = FATHER_VOLUME, (column_option).column_name = "c_5_n"];
  //所属书
  optional FatherInfo father_book = 6 [(field_option).column_group = FATHER_BOOK, (column_option).column_name = "c_6_n"];
  //章节类型
  optional ChapterType chapter_type = 7 [default = UNKNOWN_CHAPTER_TYPE, (field_option).column_group = CHAPTER_TYPE, (column_option).column_name = "c_7_n"];
  //内容相关
  repeated BookFormat format = 8 [(field_option).column_group = FORMAT, (column_option).column_name = "c_8_n_", (column_option).column_suffix = "${file_type}"];
  //发布控制
  optional Publication publication = 9 [(field_option).column_group = BOOK_PUBLICATION, (column_option).column_name = "c_9_n"];
  //章字数
  optional int64 word_count = 10 [(field_option).column_group = WORD_COUNT, (column_option).column_name = "c_10_n"];
  //章图片数
  optional int64 image_count = 11 [(field_option).column_group = IMAGE_COUNT, (column_option).column_name = "c_11_n"];
  //付费控制信息
  repeated PublicatonChargeControl charge_control = 12 [(field_option).column_group = CHARGE_CONTROL, (column_option).column_name = "c_12_n_", (column_option).column_suffix = "${platform}"];
}
// Define the appGroup
message AppGroup {
  //option
  option (entity_option).table = APP_GROUP_TABLE;
  option (entity_option).entity_name = "app_group";
  option (table_option).hbase_table_name = "qipu_app_group_table";
  option (entity_option).entity_id_type = APP_GROUP;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional AppGroupMetadata metadata = 2 [(field_option).column_group = APP_GROUP_METADATA, (column_option).column_name = "appgrp_meta"];

  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  repeated MetaSummary app_summary = 4 [(field_option).column_group = APP_GROUP_CHILD, (column_option).column_name = "chd_appgrp_", (column_option).column_suffix = "${entity_id}"];

  // When the app group, app_summary is the app.
  optional bool is_app_group = 5 [default = false, (column_option).has_value = false, (field_option).column_group = IS_APP_GROUP, (column_option).column_name = "is_app_grp"];

  repeated string tag = 6 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 7 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional int64 install_count = 8 [(column_option).is_vint64 = true, (field_option).column_group = APP_INSTALL_COUNT, (column_option).column_name = "appinstcnt", (track_option).notracker=true];
  optional int64 click_count = 9 [(column_option).is_vint64 = true, (field_option).column_group = APP_CLICK_COUNT, (column_option).column_name = "appclkcnt", (track_option).notracker=true];

  optional int64 last_update_time = 10 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // The app is available or not: ONLINE and OFFLINE_APP.
  optional AvailableStatus available_status = 11 [default = ONLINE, (field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "avail"];

  optional AppMediaList app_media_list = 12 [(field_option).column_group = APP_MEDIA_LIST, (column_option).column_name = "appmdmlst"];

  repeated AppVersionChangeInfo app_version_change_info = 13 [(field_option).column_group = APP_VERSION_CHANGE_INFO, (column_option).column_name = "appvchg", (column_option).column_suffix = "${version_code}"];

  optional AppGameInfo app_game_info = 14 [(field_option).column_group = APP_GAME_INFO, (column_option).column_name = "appgame"];

  optional AppPermissionList app_permission_list = 15 [(field_option).column_group = APP_PERMISSION_LIST, (column_option).column_name = "apppmss"];

  repeated FatherInfo father_app_group = 16 [(field_option).column_group = FATHER_APP_GROUP, (column_option).column_name = "dad_appgrp", (column_option).column_suffix = "${father_id}"];

  optional AppCheck app_check = 17 [(field_option).column_group = APP_CHECK, (column_option).column_name = "appchk"];

  optional AppRating app_rating = 18 [(field_option).column_group = APP_RATING, (column_option).column_name = "apprating"];

  optional AppBase app_base = 19 [(field_option).column_group = APP_BASE, (column_option).column_name = "appbase"];

  // 游戏详情页面(游戏的页游地址, 也称：new_server_url).
  optional string detail_page_url = 20 [(field_option).column_group = DETAIL_PAGE_URL, (column_option).column_name = "dpu"];
  // 月下载量.
  optional int64 monthly_download_count = 21 [(field_option).column_group = MONTHLY_DOWNLOAD_COUNT, (column_option).column_name = "mlydc", (track_option).notracker=true];

  repeated AccessPlayControl access_play_control = 22 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];
  // 游戏/应用的标签字段,由AppStore后端同步到奇谱，保证每个app最多一个标签
  optional Mark mark = 23 [(field_option).column_group = MARK, (column_option).column_name = "mark"];

  // 游戏运营后台参数
  repeated AppGameParameter app_game_parameter= 24 [(field_option).column_group = APP_GAME_PARAMETER, (column_option).column_name = "app_game_par_", (column_option).column_suffix = "${channel_uuid}"];
  //苹果id
  optional int64 apple_id = 25 [(field_option).column_group = APPLE_ID, (column_option).column_name = "appleid"];

  //关联的ip实体的id
  optional int64 ip_id = 26 [(field_option).column_group = IP_ID, (column_option).column_name = "ip_id"];

  // IP相关信息
  optional IntellectualPropertySummary ip_summary = 27 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "ip_sum"];
  //运营组
  optional int32 operation_group = 28 [(field_option).column_group = OPERATION_GROUP, (column_option).column_name = "c_28_n"];
  //游戏价格信息
  optional GamePriceInfo game_price_info = 29 [(field_option).column_group = GAME_PRICE_INFO, (column_option).column_name = "c_29_n"];
  //截图比例
  optional ScreenshotRatio screenshot_ratio = 30 [default = UNKNOWN_SCREENSHOT_RATIO, (field_option).column_group = SCREENSHOT_RATIO, (column_option).column_name = "c_30_n"];
  //游戏鉴权类型
  optional GameAuthenticationType authentication_type = 31 [(field_option).column_group = AUTHENTICATION_TYPE, (column_option).column_name = "c_31_n"];
  //90天下载完成设备数
  optional int64 download_device_count_90_days = 32 [(field_option).column_group = DOWNLOAD_DEVICE_COUNT_90_DAYS, (column_option).column_name = "c_32_n"];
  //30天登录用户数
  optional int64 login_count_30_days = 33 [(field_option).column_group = LOGIN_COUNT_30_DAYS, (column_option).column_name = "c_33_n"];
}
/**
 * @brief 短视频项目
 * @details 短视频项目
 **/
message PizzaVideo {
  //option
  option (entity_option).table = PIZZA_VIDEO_TABLE;
  option (entity_option).entity_name = "pizza_video";
  option (table_option).hbase_table_name = "qipu_pizza_video_table";
  option (entity_option).entity_id_type = PIZZA_VIDEO;
  //实体id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
}
// feed评论
message CircleFeedComment {
    //option
  option (entity_option).table = CIRCLE_FEED_COMMENT_TABLE;
  option (entity_option).entity_name = "circle_feed_comment";
  option (table_option).hbase_table_name = "qipu_circle_feed_comment_table";
  option (entity_option).entity_id_type = CIRCLE_FEED_COMMENT;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional CircleFeedCommentMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  // 创建时间
  optional int64 create_time = 3 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];
   //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 5 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  
  // 点赞数
  optional int64 like_count = 6 [(field_option).column_group = LIKE_COUNT, (column_option).column_name = "like_count"];
  
  // 回复数
  optional int64 reply_count = 7 [(field_option).column_group = REPLY_COUNT, (column_option).column_name = "reply_count"];
  
  // 状态
  optional FeedStatus status = 8 [(field_option).column_group = STATUS, (column_option).column_name = "status"];
  // 赞用户特征
  repeated FeedUserCharacteristics like_user_characteristics = 9 [(field_option).column_group = LIKE_USER_CHARACTERISTICS, (column_option).column_name = "like_ustity_", (column_option).column_suffix = "${user_identity}"];
  // 回复用户特征
  repeated FeedUserCharacteristics reply_user_characteristics = 10 [(field_option).column_group = REPLY_USER_CHARACTERISTICS, (column_option).column_name = "reply_ustity_", (column_option).column_suffix = "${user_identity}"];
  //feed评论类型
  optional CommentType comment_type = 11 [default = COMMENT_TYPE_TABLE, (field_option).column_group = COMMENT_TYPE, (column_option).column_name = "c_11_n"];
}
/**
 * @brief 小剧场直播
 * @details 小剧场直播是主播陪用户看点播视频的一场直播。
一场直播过程中，我们称一个点播视频内容的陪看为一个Act，一场直播会对应多个Act
 * 。
该实体粒度小于直播场次的奇谱类型，对应到每个Act，描述该Act对应的直播场次、点播视频、点播专辑、直转点视频。
 **/
message LiveAct {
  //option
  option (entity_option).table = LIVE_ACT_TABLE;
  option (entity_option).entity_name = "live_act";
  option (table_option).hbase_table_name = "qipu_live_act_table";
  option (entity_option).entity_id_type = LIVE_ACT;
  //实体id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //小剧场直播元数据
  optional LiveActMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "c_4_n"];
  //节目直播状态
  optional PlayStatus play_status = 5 [default = PLAY_STATUS_NULL, (field_option).column_group = PLAY_STATUS, (column_option).column_name = "c_5_n"];
  //开始结束时间信息
  optional StartEndTimeInfo start_end_time_info = 6 [(field_option).column_group = START_END_TIME_INFO, (column_option).column_name = "c_6_n"];
  //原视频信息
  optional LiveActVideoInfo source_video_info = 7 [(field_option).column_group = SOURCE_VIDEO_INFO, (column_option).column_name = "c_7_n"];
  //直播场次关联信息
  optional MetaSummary live_summary = 8 [(field_option).column_group = LIVE_SUMMARY, (column_option).column_name = "c_8_n"];
  //直播间关联信息
  optional MetaSummary live_room_summary = 9 [(field_option).column_group = LIVE_ROOM_SUMMARY, (column_option).column_name = "c_9_n"];
  //直播转点播
  optional MetaSummary episode_summary = 10 [(field_option).column_group = EPISODE_SUMMARY, (column_option).column_name = "c_10_n"];
  //付费相关信息
  optional LiveActChargeBase charge_base = 11 [(field_option).column_group = CHARGE_BASE, (column_option).column_name = "c_11_n"];
}
// Define the live channel information.
message LiveChannel {
  //option
  option (entity_option).table = LIVE_CHANNEL_TABLE;
  option (entity_option).entity_name = "live_channel";
  option (table_option).hbase_table_name = "qipu_live_channel_table";
  option (entity_option).entity_id_type = LIVE_CHANNEL;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // The operation information of live channel.
  optional LiveChannelBase live_channel_base = 2 [(field_option).column_group = LIVE_CHANNEL_BASE, (column_option).column_name = "lvcn_base"];

  // True: the live channel is opening; vice versa.
  optional bool is_enable = 3 [(column_option).has_value = false, (field_option).column_group = IS_ENABLE, (column_option).column_name = "is_enable"];

  // The children(that are live programs) summaries of live channel.
  repeated MetaSummary live_episode_summary = 4 [(field_option).column_group = CHILD_LIVE_EPISODE, (column_option).column_name = "chd_lvepd_", (column_option).column_suffix = "${entity_id}"];

  // The default live streaming info of live channel.
  optional LiveStream default_live_stream = 5 [(field_option).column_group = DEFAULT_LIVE_STREAM, (column_option).column_name = "dftlvstm"];

  // The live streams of live channel.
  repeated LiveStream live_stream = 6 [(field_option).column_group = LIVE_STREAM, (column_option).column_name = "lvstm_", (column_option).column_suffix = "${uuid}"];

  repeated string tag = 7 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // The accounting info of live channel.
  optional Boss boss = 8 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];

  // The play control info of live channel.
  repeated AccessPlayControl access_play_control = 9 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];

  optional int64 last_update_time = 10 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional Qitan qitan = 11 [(field_option).column_group = QITAN, (column_option).column_name = "qtn"];

  optional bool deleted = 12 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 13 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  // 直播中心伪静态播放页URL.
  optional string page_url = 14 [(field_option).column_group = PAGE_URL, (column_option).column_name = "page_url"];

  // 全景视频参数
  optional PanoFormat pano_format= 15 [(field_option).column_group = PANO_FORMAT, (column_option).column_name = "pano_fmt"];

  /**
  * url格式： "qisu:// tvid=246005500;vid=5ec8bb5e840b2b1445c9d0a07be463af; ischarge=true;vtype=0"
  * <ol>
  *<li>tvid对应metadata. entity_id，为int型 ；</li>
  *<li>ischarge对应boss.status的值，如果boss.status值为PAIED_AVAILABLE则输出ischarge=ture，boss.status=其他值或者不存在的时候则输出ischarge=false； </li>
  *<li>vtype对于奇谱id以22结尾的直播节目都会强制写为vtype=1。</li>
  * </ol>
  **/
  optional Qisu qisu = 16 [(field_option).column_group = QISU, (column_option).column_name = "qisu"];
  optional PaopaoSummary paopao_summary = 17 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "paopao_sum"];

  // 专题页URL.
  optional string subject_url = 18 [(field_option).column_group = SUB_URL, (column_option).column_name = "sub_url"];

  // Define the top recommend place of pps category for the album, episode, collection or ppsCategory.
  repeated PpsCategoryRanking pps_category_ranking = 19 [(field_option).column_group = PPS_CATEGORY_RANKING, (column_option).column_name = "pps_cat_rk_", (column_option).column_suffix = "${pps_category_id}"];

  // 3d 直播信息
  optional ThreeDFormat	three_d_format = 20 [(field_option).column_group = THREE_D_FORMAT, (column_option).column_name = "three_d_fmt"];
}
// Define the live program information.
message LiveEpisode {
  //option
  option (entity_option).table = LIVE_EPISODE_TABLE;
  option (entity_option).entity_name = "live_episode";
  option (table_option).hbase_table_name = "qipu_live_episode_table";
  option (entity_option).entity_id_type = LIVE_EPISODE;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // The basic information of live program.
  optional LiveEpisodeMetadata metadata = 2 [(field_option).column_group = LIVE_EPISODE_METADATA, (column_option).column_name = "lvepsd_meta"];

  // The information of live program's father channel.
  repeated FatherInfo father_live_channel = 3 [(field_option).column_group = FATHER_LIVE_CHANNEL, (column_option).column_name = "dad_lvchnl_", (column_option).column_suffix = "${father_id}"];

  // The operation information of live program.
  optional LiveEpisodeBase base = 4 [(field_option).column_group = LIVE_EPISODE_BASE, (column_option).column_name = "lvepsd_base"];

  // The screenshots of live program.
  repeated MetaSummary image_summary = 5 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}"];

  // The paid status of live program.
  // 该字段将停用，请使用 LiveEpisode.boss 字段
  optional LiveEpisodeChargeInfo charge_info = 6 [(field_option).column_group = LIVE_EPISODE_CHARGE_INFO, (column_option).column_name = "lvepsd_charge_info"];

  // The sports live broadcast.
  optional LiveSports live_sports = 7 [(field_option).column_group = LIVE_SPORTS, (column_option).column_name = "lvsports"];

  optional int64 last_update_time = 8 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // Define plug-in subtitle
  repeated Subtitle subtitle = 9 [(field_option).column_group = SUBTITLE, (column_option).column_name = "sbt_", (column_option).column_suffix = "${uuid}"];

  // The highpoint of live episode.
  repeated MetaSummary css_summary = 10 [(field_option).column_group = CHILD_CSS, (column_option).column_name = "chd_css_", (column_option).column_suffix = "${entity_id}"];

  optional bool deleted = 11 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 其中 Boss.paid_start_time、Boss.paid_end_time 暂不使用，
  // 用 LiveEpisodeMetadata中的start_play_time 和 stop_play_time 替代
  optional Boss boss = 12 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 13 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional Qitan qitan = 14 [(field_option).column_group = QITAN, (column_option).column_name = "qtn"];

  // 与播控相关字段：is_download_allowed，is_share_allowed，从LiveChannel中的播控中读取
  optional Puyu puyu = 15 [(field_option).column_group = PUYU, (column_option).column_name = "puyu"];

  /**
  * url格式： "qisu:// tvid=246005500;vid=5ec8bb5e840b2b1445c9d0a07be463af; ischarge=true;vtype=0"
  * <ol>
  *<li>tvid对应metadata. entity_id，为int型 ；</li>
  *<li>ischarge对应boss.status的值，如果boss.status值为PAIED_AVAILABLE则输出ischarge=ture，boss.status=其他值或者不存在的时候则输出ischarge=false； </li>
  *<li>vtype对于奇谱id以22结尾的直播节目都会强制写为vtype=1。</li>
  * </ol>
  **/
  optional Qisu qisu = 16 [(field_option).column_group = QISU, (column_option).column_name = "qisu"];
  optional PaopaoSummary paopao_summary = 17 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "paopao_sum"];

  repeated AccessPlayControl access_play_control = 18 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];

  // 道具开关
  optional Prop prop = 19 [(field_option).column_group = PROP, (column_option).column_name = "prop"];

  //关联投票信息
  repeated VoteSummary vote_summary  = 20 [(field_option).column_group = VOTE_SUMMARY, (column_option).column_name = "vote_sum_", (column_option).column_suffix = "${vote_id}"];

  //秀场可用：推荐图
  repeated LocaleImage locale_image = 21 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];
  // 视频播放角度类型（全景视频）
  optional PanoFormat pano_format= 22 [(field_option).column_group = PANO_FORMAT, (column_option).column_name = "pano_fmt"];
  // 默认直播流信息
  optional LiveStream default_live_stream = 23 [(field_option).column_group = DEFAULT_LIVE_STREAM, (column_option).column_name = "dftlvstm"];
  // 直播流信息
  repeated LiveStream live_stream = 24 [(field_option).column_group = LIVE_STREAM, (column_option).column_name = "lvstm_", (column_option).column_suffix = "${uuid}"];
  // 观众数
  optional int32 audience_count = 25 [(field_option).column_group = AUDIENCE_COUNT, (column_option).column_name = "audience_count", (track_option).notracker=true];
  // UGC直播、秀场、游戏直播；二级分类；三级分类
  repeated CategorySummary category_summary = 26 [(field_option).column_group = CATEGORY_SUMMARY, (column_option).column_name = "cate_", (column_option).column_suffix = "${category_id}"];
  // 聊天室
  optional ChatRoomSummary chat_room_summary = 27 [(field_option).column_group = CHAT_ROOM_SUMMARY, (column_option).column_name = "chat_room"];

  // 大V用户给粉丝的预告时间, 预告开始时间
  optional int64 notice_start_time = 28 [(field_option).column_group = NOTICE_START_TIME, (column_option).column_name = "noti_sta_time"];
  // 大V用户给粉丝的预告时间, 预告结束时间
  optional int64 notice_end_time = 29 [(field_option).column_group = NOTICE_END_TIME, (column_option).column_name = "noti_end_time"];
  // "热门直播"排序字段，字段无值时不进入热门直播列表
  optional string order_hot = 30 [(field_option).column_group = ORDER_HOT, (column_option).column_name = "ord_hot"];
  // "全部直播"排序字段，字段无值时不进入全部直播列表
  optional string order_all = 31 [(field_option).column_group = ORDER_ALL, (column_option).column_name = "ord_all"];
  // "未开始直播"排序字段，字段无值时不进入未开始直播列表
  optional string order_pre = 34 [(field_option).column_group = ORDER_PRE, (column_option).column_name = "ord_pre"];

  // 对应点播节目
  optional MetaSummary episode_summary = 32 [(field_option).column_group = EPISODE_SUMMARY, (column_option).column_name = "rep_video"];

  //付费相关信息
  optional ChargeBase charge_base = 33 [(field_option).column_group = CHARGE_BASE, (column_option).column_name = "charge_base"];

  //奇秀id
  optional int64 qixiu_id =35 [(field_option).column_group = QIXIU_ID, (column_option).column_name = "qixiu_id"];

  repeated string tag = 36 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // 广告Summary
  repeated AdSummary ad_summary = 37 [(field_option).column_group = AD_SUMMARY, (column_option).column_name = "ad_sum_", (column_option).column_suffix = "${uuid}"];

  // 泡泡Summary
  repeated RelatedPaopaoSummary related_paopao_summary = 38 [(field_option).column_group = RELATED_PAOPAO_SUMMARY, (column_option).column_name = "pao_sum_", (column_option).column_suffix = "${order}"];

  // Define the top recommend place of pps category for the album, episode, collection or ppsCategory.
  repeated PpsCategoryRanking pps_category_ranking = 39 [(field_option).column_group = PPS_CATEGORY_RANKING, (column_option).column_name = "pps_cat_rk_", (column_option).column_suffix = "${pps_category_id}"];
  //游戏直播间相关信息
  optional GameLiveRoomSummary game_live_room_summary = 40 [(field_option).column_group = GAME_LIVE_ROOM_SUMMARY, (column_option).column_name = "game_live_room_summary", (track_option).notracker=true];

  // 3d 直播信息
  optional ThreeDFormat	three_d_format = 41 [(field_option).column_group = THREE_D_FORMAT, (column_option).column_name = "three_d_fmt"];
  //关联赛事
  optional MatchSummary match_summary = 42 [(field_option).column_group = MATCH_SUMMARY, (column_option).column_name = "match_smry"];
  //注册制信息
  optional RegistrationInfo registration_info = 43 [(field_option).column_group = REGISTRATION_INFO, (column_option).column_name = "c_43_n"];
  //关联feed
  repeated FeedSummary feed_summary = 44 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "c_44_n_", (column_option).column_suffix = "${entity_id}"];
}
// Define the commodity information.
message Commodity {
  //option
  option (entity_option).table = COMMODITY_TABLE;
  option (entity_option).entity_name = "commodity";
  option (table_option).hbase_table_name = "qipu_commodity_table";
  option (entity_option).entity_id_type = COMMODITY;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // The basic information of commodity.
  optional CommodityBase base = 2 [(field_option).column_group = COMMODITY_BASE, (column_option).column_name = "cmdt_base"];

   // The all video of commodity(that contains the main video).
  optional MetaSummary main_episode = 3 [(field_option).column_group = MAIN_EPISODE, (column_option).column_name = "main_epd"];

  // 商品关联视频
  repeated MetaSummary episode_summary = 4 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order,entity_id"];

  // The statistics of commodity.
  optional ItemStat stat = 5 [(field_option).column_group = ITEM_STAT, (column_option).column_name = "item_stat"];

  // The description of commodity.
  optional ItemDescription description = 6 [(field_option).column_group = ITEM_DESCRIPTION, (column_option).column_name = "item_desc"];

  // The status of commodity which on the shelf.
  optional ItemShelving shelving = 7 [(field_option).column_group = ITEM_SHELVING, (column_option).column_name = "item_shelving"];

  // The after sale service of commodity.
  optional ItemAfterSale after_sale = 8 [(field_option).column_group = ITEM_AFTER_SALE, (column_option).column_name = "item_aftsale"];

  // The description before commodity was been delivered.
  optional ItemShipment shipment = 9 [(field_option).column_group = ITEM_SHIPMENT, (column_option).column_name = "item_shiptmt"];

  repeated Sku sku = 10 [(field_option).column_group = SKU, (column_option).column_name = "sku_", (column_option).column_suffix = "${sku_id}"];

  // The extra related description of commodity.
  optional CommodityExtra extra = 11 [(field_option).column_group = COMMODITY_EXTRA, (column_option).column_name = "cmdt_extra"];

  optional int64 last_update_time = 12 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  enum Status {
      ONSALE = 1;
      INSTOCK = 2;
  }
  // The status after commodity is uploaded.
  optional Status approval_status = 13 [default = INSTOCK, (field_option).column_group = APPROVAL_STATUS, (column_option).column_name = "appr_status"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 14 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional bool deleted = 15 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  /* The basic property list of commodity.
   * Every property contains a pid(ItemProperty.key_id: pid) and vid(ItemProperty.values_id: vid).
   */
  repeated ItemProperty common_property = 16 [(field_option).column_group = ITEM_PROPERTY, (column_option).column_name = "item_property", (column_option).column_suffix = "${key_id}"];

  // 商品关联专辑
  repeated MetaSummary album_summary = 17 [(field_option).column_group = CHILD_ALBUM, (column_option).column_name = "chd_alb_", (column_option).column_suffix = "${entity_id}"];

  // 商品关联偶像
  repeated MetaSummary people_summary = 18 [(field_option).column_group = CHILD_PEOPLE, (column_option).column_name = "chd_pep_", (column_option).column_suffix = "${entity_id}"];

  // 商品关联促销
  repeated Promotion promotion = 19 [(field_option).column_group = PROMOTION, (column_option).column_name = "prom_", (column_option).column_suffix = "${promotion_id}"];

  //商品类目关系
  repeated CommodityCategory commodity_category = 20 [(field_option).column_group = COMMODITY_CATEGORY, (column_option).column_name = "com_cate_", (column_option).column_suffix = "${category_id}"];

  //是否被搜索过滤，true/false
  optional bool reject_search = 21 [default = false, (field_option).column_group = REJECT_SEARCH, (column_option).column_name = "rej_search"];

  // 商品标签
  repeated CommodityTag tag = 22 [(field_option).column_group = COMMODITY_TAG, (column_option).column_name = "com_tag_", (column_option).column_suffix = "${id}"];

}
// Define the spu information.
message Spu {
  //option
  option (entity_option).table = SPU_TABLE;
  option (entity_option).entity_name = "spu";
  option (table_option).hbase_table_name = "qipu_spu_table";
  option (entity_option).entity_id_type = SPU;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional SpuBase base = 2 [(field_option).column_group = SPU_BASE, (column_option).column_name = "spu_base"];

  /* The basic property list of sku.
   * Every property contains a pid(ItemProperty.key_id: pid) and vid(ItemProperty.values_id: vid).
   */
  repeated ItemProperty common_property = 3 [(field_option).column_group = ITEM_PROPERTY, (column_option).column_name = "item_property", (column_option).column_suffix = "${key_id}"];

  optional int64 last_update_time = 4 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // The related album | episode | people entity summary of spu.
  // It's a one-way relationship, so that can't find the spu through entity: album | episode | people.
  repeated MetaSummary album_summary = 5 [(field_option).column_group = CHILD_ALBUM, (column_option).column_name = "chd_alb_", (column_option).column_suffix = "${entity_id}"];
  repeated MetaSummary episode_summary = 6 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order,entity_id"];
  repeated MetaSummary people_summary = 7 [(field_option).column_group = CHILD_PEOPLE, (column_option).column_name = "chd_pep_", (column_option).column_suffix = "${entity_id}"];

  // Store <name,value> pair specific terms
  repeated KeyValuePair key_value_pair = 8 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  optional bool deleted = 9 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
}
// Define the brand information.
message ItemBrand {
  //option
  option (entity_option).table = ITEM_BRAND_TABLE;
  option (entity_option).entity_name = "item_brand";
  option (table_option).hbase_table_name = "qipu_item_brand_table";
  option (entity_option).entity_id_type = ITEM_BRAND;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional ItemBrandBase base = 2 [(field_option).column_group = ITEM_BRAND_BASE, (column_option).column_name = "itmbrand_base"];

  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  optional ItemBrandMetadata metadata= 5 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //乐高、商城，可多选。提交品牌编辑页面，自动写入品牌用户字段
  repeated Application owner_app = 6 [(field_option).column_group = APPLICATION, (column_option).column_name = "owner_app_", (column_option).column_suffix = "${owner_app}"];

  //品牌库实体（26）增加跟老品牌库的对应关系
  optional int64 old_brand_id = 7 [(field_option).column_group = OLD_BRAND_ID, (column_option).column_name = "old_brand_id"];
}
// Define the theater information.
message Theater {
  //option
  option (entity_option).table = THEATER_TABLE;
  option (entity_option).entity_name = "theater";
  option (table_option).hbase_table_name = "qipu_theater_table";
  option (entity_option).entity_id_type = THEATER;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // The base info of theater.
  optional TheaterBase theater_base = 2 [(field_option).column_group = THEATER_BASE, (column_option).column_name = "tht_base"];

  // The rout info of taking the bus | subway to theater.
  optional Route route = 3 [(field_option).column_group = ROUTE, (column_option).column_name = "route"];

  // The true pictures of theater.
  repeated MetaSummary image_summary = 4 [(field_option).column_group = CHILD_IMAGE, (column_option).column_name = "chd_img_", (column_option).column_suffix = "${entity_id}"];

  // The evaluation info of theater.
  // It contains the overall | service | environment evaluation.
  optional TheaterScore score = 5 [(field_option).column_group = THEATER_SCORE, (column_option).column_name = "tht_score"];

  // The openning hours of theater.
  optional string openning = 6 [(field_option).column_group = OPENNING, (column_option).column_name = "opn"];

  // The rank of theater.
  optional int32 rank = 7 [default = 0, (field_option).column_group = RANK, (column_option).column_name = "rank"];

  optional int64 last_update_time = 8 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional bool deleted = 9 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
}
// Define qiqu tag info.
message QiquTag {
  //option
  option (entity_option).table = QIQU_TAG_TABLE;
  option (entity_option).entity_name = "qiqu_tag";
  option (table_option).hbase_table_name = "qipu_qiqu_tag_table";
  option (entity_option).entity_id_type = QIQU_TAG;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional QiquTagMetadata metadata = 2 [(field_option).column_group = QIQU_TAG_METADATA, (column_option).column_name = "qqtg_meta"];

  // The range of value lying between 0 and 10.
  optional int32 quality = 3 [(field_option).column_group = QIQU_TAG_QUALITY, (column_option).column_name = "qqtg_quly"];
  // The range of value lying between 0 and 1.
  optional float hot = 4 [(field_option).column_group = QIQU_TAG_HOT, (column_option).column_name = "qqtg_hot"];

  message RelatedTag {
    required int64 qiqu_tag_id = 1;
    optional string name = 2;

    // The correlation between qiqu tag and related tag.
    // The range of value lying between 0 and 1.
    optional float relativity_score = 3;
  }
  repeated RelatedTag related_tag = 5 [(field_option).column_group = QIQU_TAG_RELATED_TAG, (column_option).column_name = "qqtg_rlttg_", (column_option).column_suffix = "${qiqu_tag_id}"];

  optional ResultCheck result_check = 6 [(field_option).column_group = QIQU_TAG_RESULT_CHECK, (column_option).column_name = "qqtg_rsck"];

  optional bool deleted = 7 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  optional int64 last_update_time = 8 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
}
// Define topic info.
message Topic {
  //option
  option (entity_option).table = TOPIC_TABLE;
  option (entity_option).entity_name = "topic";
  option (table_option).hbase_table_name = "qipu_topic_table";
  option (entity_option).entity_id_type = TOPIC;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional TopicMetadata  metadata = 2 [(field_option).column_group = TOPIC_METADATA, (column_option).column_name = "tpc_meta"];
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 4 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  // 使用base的短标题字段
  optional Base base = 5 [(field_option).column_group = BASE, (column_option).column_name = "base"];
    // 关联的ugc视频
  repeated MetaSummary ugc_episode_summary = 6 [(field_option).column_group = UGC_EPISODE_SUMMARY, (column_option).column_name = "ugc_epd_sum_", (column_option).column_suffix = "${entity_id}"];

  //关联投票信息；
  optional VoteSummary vote_summary  = 7 [(field_option).column_group = VOTE_SUMMARY, (column_option).column_name = "vote_sum"];

  // 视频标签
  repeated string tag = 8 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  optional UgcOperation.UploadActionType upload_action_type = 9 [(field_option).column_group = UPLOAD_ACTION_TYPE, (column_option).column_name = "upactype"];

}
// Define shop info.
message Shop {
  //option
  option (entity_option).table = SHOP_TABLE;
  option (entity_option).entity_name = "shop";
  option (table_option).hbase_table_name = "qipu_shop_table";
  option (entity_option).entity_id_type = SHOP;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional ShopBase base = 2 [(field_option).column_group = SHOP_BASE, (column_option).column_name = "shop_base"];
  optional ShopLinkage linkage = 3 [(field_option).column_group = SHOP_LINKAGE, (column_option).column_name = "shop_linkage"];
  optional ShopScore score = 4 [(field_option).column_group = SHOP_SCORE, (column_option).column_name = "shop_score"];

  // 店铺公告
  optional string bulletin = 5 [(field_option).column_group = BULLETIN, (column_option).column_name = "blt"];

  // 店铺状态
  enum Status {
    REQUESTED = 1; // 申请开店
    APPROVED = 2; // 通过
    PREJECTED = 3; // 拒绝
    FROZEN = 4; // 冻结
  }
  optional Status status = 6 [(field_option).column_group = STATUS, (column_option).column_name = "status"];

  optional bool deleted = 7 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 8 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
}
/**
 *@brief 秀场主播
 *@details 秀场主播，秀场主播和明星（People)分开存储，由秀场编辑维护。明星由明星库编辑维护。 每个主播有一个自己的show room,但在直播时，可能会跑到其他show room.
**/
message Presenter {
  //option
  option (entity_option).table = PRESENTER_TABLE;
  option (entity_option).entity_name = "presenter";
  option (table_option).hbase_table_name = "qipu_presenter_table";
  option (entity_option).entity_id_type = PRESENTER;

  required int64 id = 1 [(column_option).is_auto_set = true];
  repeated string alias_name = 2 [(column_option).has_value = false, (field_option).column_group = ALIAS_NAME, (column_option).column_name = "alias_name_"]; // 主播在秀场内的昵称
  optional int32 grade = 3 [(field_option).column_group = GRADE, (column_option).column_name = "grade"]; // 主播在秀场内的等级
  optional int32 recommend_rate = 4 [(field_option).column_group = RECOMMEND_RATE, (column_option).column_name = "recommend_rate"]; // 推荐度
  optional string recommend_remark = 5 [(field_option).column_group = RECOMMEND_REMARK, (column_option).column_name = "recommend_remark"]; // 推荐语
  // 单向的
  repeated MetaSummary recommend_image = 6 [(field_option).column_group = CHILD_RECOMMEND_IMAGE, (column_option).column_name = "recommend_image_", (column_option).column_suffix = "${entity_id}"]; // 推荐图
  // 单向的
  repeated MetaSummary show_image = 7 [(field_option).column_group = CHILD_SHOW_IMAGE, (column_option).column_name = "show_image_", (column_option).column_suffix = "${entity_id}"]; // 主播开播时候设置的图片

  optional bool deleted = 8 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 9 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //主播在秀场内的头像
  repeated MetaSummary head_portrait = 10 [(field_option).column_group = CHILD_HEAD_PORTRAIT, (column_option).column_name = "head_pt_", (column_option).column_suffix = "${entity_id}"];
  //主播被关注的粉丝数量
  optional int64 fan_count = 11 [(field_option).column_group = FAN_COUNT, (column_option).column_name = "fan_count", (track_option).notracker=true];
  //上次直播结束的时间
  optional int64 last_live_end_time = 12 [(field_option).column_group = LAST_LIVE_END_TIME, (column_option).column_name = "last_end_time"];
  //主播设置的预告下次直播开始的时间
  optional int64 next_live_start_time = 13 [(field_option).column_group = NEXT_LIVE_START_TIME, (column_option).column_name = "next_start_time"];
  //本次直播开始时间
  optional int64 current_live_start_time = 14 [(field_option).column_group = CURRENT_LIVE_START_TIME, (column_option).column_name = "cur_start_time"];
  //本次直播结束时间
  optional int64 current_live_end_time = 15 [(field_option).column_group = CURRENT_LIVE_END_TIME, (column_option).column_name = "cur_end_time"];
  //主播所持有的勋章
  repeated string owned_metal = 16 [(column_option).has_value = false, (field_option).column_group = OWNED_METAL, (column_option).column_name = "owned_metal_"];

  optional int64 passport_id = 17 [(field_option).column_group = PASSPORT_ID, (column_option).column_name = "pss_id"];
  //主播自己的房间
  optional int64 own_room_id = 18 [(field_option).column_group = OWN_ROOM_ID, (column_option).column_name = "ownrmid"];
  //主播直播中的房间
  optional int64 ongoing_room_id = 19 [(field_option).column_group = ONGOING_ROOM_ID, (column_option).column_name = "ongrmid"];
}
// Define ShowRoom info.
// 直播信息
message ShowRoom {
  //option
  option (entity_option).table = SHOW_ROOM_TABLE;
  option (entity_option).entity_name = "showRoom";
  option (table_option).hbase_table_name = "qipu_show_room_table";
  option (entity_option).entity_id_type = SHOW_ROOM;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional string url = 2 [(field_option).column_group = URL, (column_option).column_name = "url"]; // 直播间地址；
  optional int64 current_presenter_id = 3 [(field_option).column_group = CURRENT_PRESENTER_ID, (column_option).column_name = "current_presenter_id"]; // 当前主播；

  // 房间当前的开播状态
  enum ShowStatus{
    ONGOING = 1; // 直播中
    CLOSED = 2; // 未开播
    UPCOMING = 3;//即将直播
  }
  optional ShowStatus show_status = 4 [(field_option).column_group = SHOW_STATUS, (column_option).column_name = "show_status"]; // 房间当前的开播状态

  optional int64 start_time = 5 [(field_option).column_group = START_TIME, (column_option).column_name = "start_time"]; // 房间开始直播的时间
  optional int32 audience_count = 6 [(field_option).column_group = AUDIENCE_COUNT, (column_option).column_name = "audience_count", (track_option).notracker=true]; // 当前在直播间内观看直播的用户数量

  enum RoomType{
    PERSONAL = 1; // 个人房
    FAMILY = 2; // 家族房
  }
  optional RoomType room_type = 7 [(field_option).column_group = ROOM_TYPE, (column_option).column_name = "room_type"]; // 当前房间的类型
  optional int32 recommend_rate = 8 [(field_option).column_group = RECOMMEND_RATE, (column_option).column_name = "recommend_rate"]; // 推荐度
  optional string recommend_remark = 9 [(field_option).column_group = RECOMMEND_REMARK, (column_option).column_name = "recommend_remark"]; // 推荐语
  // 单向的
  repeated MetaSummary recommend_image = 10 [(field_option).column_group = CHILD_RECOMMEND_IMAGE, (column_option).column_name = "recommend_image_", (column_option).column_suffix = "${entity_id}"]; // 推荐图
  // 单向的
  repeated MetaSummary show_image =11 [(field_option).column_group = CHILD_SHOW_IMAGE, (column_option).column_name = "show_image_", (column_option).column_suffix = "${entity_id}"]; // 主播开播时候设置的图片

  optional bool deleted = 12 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 13 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //多个主播id
  repeated MetaSummary current_presenter = 14 [(field_option).column_group = CHILD_CURRENT_PRESENTER, (column_option).column_name = "cur_pre_", (column_option).column_suffix = "${entity_id}"];
  //直播房间名称
  optional string show_room_name = 15 [(field_option).column_group = SHOW_ROOM_NAME, (column_option).column_name = "show_room_name"];
}
// Define Category info.
// 目录
message Category {
  //option
  option (entity_option).table = CATEGORY_TABLE;
  option (entity_option).entity_name = "category";
  option (table_option).hbase_table_name = "qipu_category_table";
  option (entity_option).entity_id_type = CATEGORY;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional string content = 2 [(field_option).column_group = CATEGORY_CONTENT, (column_option).column_name = "content"]; // 目录全部内容
   //分类元数据；
  optional CategoryMetadata metadata = 3 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //所在的父分类；原parent_id和category_order都放在这个数据结构中；
  optional FatherInfo parent = 4 [(field_option).column_group = PARENT, (column_option).column_name = "par"];

  //和语言相关的运营字段
  repeated CategoryBase local_base = 5 [(field_option).column_group = CATEGORY_BASE, (column_option).column_name = "loc_base_", (column_option).column_suffix = "${language}"];

  //状态
  enum Status{
    INVALID = 0;
    VALID = 1;
  }
  optional Status status = 6 [(field_option).column_group = STATUS, (column_option).column_name = "status"];

  //创建时间，原来是Date类型；
  optional int64 create_time = 7 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cre_tim"];
  //最后更新时间，原来是 Date update_time;由奇谱系统设置
  optional int64 last_update_time = 8 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //版本，无用；
  optional int64 version = 9 [(field_option).column_group = VERSION, (column_option).column_name = "ver"];
  //是否已删除；
  optional bool deleted = 10 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //关联的品牌
  optional Brand brand = 11 [(field_option).column_group = CATEGORY_BRAND, (column_option).column_name = "brn"];

  //关联的视频
  repeated MetaSummary episode_summary = 12 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}"];

  //区分视频、图书、app的三级分类，默认为EPISODE
  enum Type {
    EPISODE = 0;
    BOOK = 1;
    APP = 2;
    BOOK_TAG = 3;
    COMPETITION = 4;
    COMIC = 5;
    HEAD_LINE =6;
    //圈子内容标签
    CIRCLE_CONTENT_TAG = 7;
    //轻小说
    LIGHT_NOVEL = 8;
  }
  optional Type type = 13 [default = EPISODE, (field_option).column_group = CATEGORY_TYPE, (column_option).column_name = "type"];

  optional CategorySubType sub_type = 14 [default = CATEGORY_SUB_TYPE_NULL, (field_option).column_group = SUB_TYPE, (column_option).column_name = "sub_type"];

  optional string icon = 15 [(field_option).column_group = ICON_IMAGE, (column_option).column_name = "icon"];

  //关联视频标签id；oldid是头条的标签，会对应一个原来的视频标签
  optional int64 old_category_id = 16 [(field_option).column_group = OLD_CATEGORY_ID, (column_option).column_name = "old_cate_id"];

  //category对应头条运营频道的关系
  repeated int32 head_line_channel_id = 17 [(column_option).has_value = false,(field_option).column_group = HEAD_LINE_CHANNEL_ID, (column_option).column_name = "head_cid_"];
}
// Define Festival info.
// 电影节
message Festival {
  //option
  option (entity_option).table = FESTIVAL_TABLE;
  option (entity_option).entity_name = "festival";
  option (table_option).hbase_table_name = "qipu_festival_table";
  option (entity_option).entity_id_type = FESTIVAL;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional FestivalMetadata metadata = 2 [(field_option).column_group = FESTIVAL_METADATA, (column_option).column_name = "fes_meta"];
  //分年奖项列表
  repeated MetaSummary festival_series = 5 [(field_option).column_group = FESTIVAL_SERIES_SUMMARY, (column_option).column_name = "fes_ser_", (column_option).column_suffix = "${entity_id}"];

  //海报图
  repeated LocaleImage poster = 8 [(field_option).column_group = POSTER, (column_option).column_name = "poster_", (column_option).column_suffix = "${language}_${type}"];

  optional bool deleted = 6 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 7 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

}
// Define SpecialSubject info.
//专题
message SpecialSubject {
  //option
  option (entity_option).table = SPECIAL_SUBJECT_TABLE;
  option (entity_option).entity_name = "special_subject";
  option (table_option).hbase_table_name = "qipu_special_subject_table";
  option (entity_option).entity_id_type = SPECIAL_SUBJECT;

  required int64 id = 1 [(column_option).is_auto_set = true];
  //基本信息
  optional SpecialSubjectMetadata metadata = 2 [(field_option).column_group = SUBJECT_METADATA, (column_option).column_name = "spe_meta"];
  //发布状态
  optional PagePublishStatus page_publish_status = 3 [default = PAGE_WAIT, (field_option).column_group = PAGE_PUBLISH_STATUS, (column_option).column_name = "ppsts"];
  //创建时间
  optional int64 create_time = 4 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cre_time"];
  //最近修改时间
  optional int64 last_update_time = 5 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //第一次上线时间
  optional int64 first_online_time = 6 [(field_option).column_group = FIRST_ONLINE_TIME, (column_option).column_name = "fir_time"];
  //最后上线时间
  optional int64 last_online_time = 7 [(field_option).column_group = LAST_ONLINE_TIME, (column_option).column_name = "last_time"];
  //URL（CMS直接写入）
  optional string url = 8 [(field_option).column_group = URL, (column_option).column_name = "url"];
  //播控
  repeated AccessPlayControl access_play_control = 9 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];

  optional bool deleted = 10 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
}
// Define Character info.
//角色
message Character {
  //option
  option (entity_option).table = CHARACTER_TABLE;
  option (entity_option).entity_name = "character";
  option (table_option).hbase_table_name = "qipu_character_table";
  option (entity_option).entity_id_type = CHARACTER;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional CharMetadata metadata = 2 [(field_option).column_group = CHAR_METADATA, (column_option).column_name = "char_meta"];
  optional bool deleted = 3 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 4 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //关联的其他角色；
  repeated CharacterSummary related_character= 5 [(field_option).column_group = RELATED_CHARACTER, (column_option).column_name = "rel_char_", (column_option).column_suffix = "${entity_id}"];
  //关联的播单
  repeated MetaSummary related_collection = 6 [(field_option).column_group = RELATED_COLLECTION, (column_option).column_name = "rel_col_", (column_option).column_suffix = "${entity_id}"];
  //关联的资源位
  repeated MetaSummary related_resources = 7 [(field_option).column_group = RELATED_RESOURCES, (column_option).column_name = "rel_res_", (column_option).column_suffix = "${entity_id}"];
  //关联的影视资料， 代表作品
  repeated Metadata related_film_tv = 8 [(field_option).column_group = RELATED_FILM_TV, (column_option).column_name = "rel_film_", (column_option).column_suffix = "${entity_id}"];

  //头像
  repeated MetaSummary icon_image = 9 [(field_option).column_group = ICON_IMAGE, (column_option).column_name = "icon_img_", (column_option).column_suffix = "${entity_id}"];

  //其他图片
  repeated MetaSummary other_image = 10 [(field_option).column_group = CHAR_OTHER_IMAGE, (column_option).column_name = "oth_img_", (column_option).column_suffix = "${entity_id}"];

  //角色对应的自定义标签
  repeated string tag = 11 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  repeated KeyValuePair key_value_pair = 12 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  //角色图片
  optional CharacterImageList character_image_list = 13 [(field_option).column_group = CHARACTER_IMAGE_LIST, (column_option).column_name = "chract_img_lst"];
}
/**
 * @brief 图谱计算所使用的分类体系
 * @details 仅支持两级分类。一级分类作为独立的实体来保存，二级分类保存在SubTaxonomy中。 
 **/
message Taxonomy {
  //option
  option (entity_option).table = TAXONOMY_TABLE;
  option (entity_option).entity_name = "taxonomy";
  option (table_option).hbase_table_name = "qipu_taxonomy_table";
  option (entity_option).entity_id_type = TAXONOMY;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional TaxonomyMetadata metadata = 4 [(field_option).column_group = TAXONOMY_METADATA, (column_option).column_name = "tax_meta"]; 
  enum Type {
    UNKNOWN_TAXONOMY_TYPE = -1;
    CHANNEL = 1;
    CATEGORY = 2; 
  };
  optional Type type = 5 [(field_option).column_group = TAXONOMY_TYPE, (column_option).column_name = "tax_type"]; 

  message SubTaxonomy{
    required int64 sub_id = 1; 
    optional TaxonomyMetadata metadata = 2; 
  }
  repeated SubTaxonomy sub_taxonomy = 6 [(field_option).column_group = SUB_TAXONOMY, (column_option).column_name = "sub_tax_", (column_option).column_suffix = "${sub_id}"]; 
}
/**
 * @brief 图谱计算所使用的实体；
 * @details 图谱计算所使用的实体。
 *
 **/
message GraphEntity {
  //option
  option (entity_option).table = GRAPH_ENTITY_TABLE;
  option (entity_option).entity_name = "graph_entity";
  option (table_option).hbase_table_name = "qipu_graph_entity_table";
  option (entity_option).entity_id_type = GRAPH_ENTITY;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del", (track_option).notracker=true];
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional int64 qipu_id = 4 [(field_option).column_group = QIPU_ID, (column_option).column_name = "qipu_id", (track_option).notracker=true]; ;
  optional GraphEntityMetadata metadata = 5 [(field_option).column_group = ENTITY_METADATA, (column_option).column_name = "ent_meta", (track_option).notracker=true];
  repeated KeyValuePair display_property = 6 [deprecated = true,(field_option).column_group = DISPLAY_PROPERTY, (column_option).column_name = "dis_pro_", (column_option).column_suffix = "${name}", (track_option).notracker=true];
  repeated KeyValuePair hidden_property = 7 [deprecated = true, (field_option).column_group = HIDDEN_PROPERTY, (column_option).column_name = "hid_pro_", (column_option).column_suffix = "${name}", (track_option).notracker=true];
  // 一个graph_id 会和多个graph_id 有关系。这个ralation是描述一个graph id 和其他graph id的关系
  // 同一个graph_id + relation_name只会有一条数据
  repeated Relation relation = 8 [deprecated = true, (field_option).column_group = RELATION, (column_option).column_name = "rel_", (column_option).column_suffix = "${graph_id}_${relation_name}", (track_option).notracker=true];
  //属性
  repeated KeyValuePair property = 9 [(field_option).column_group = PROPERTY, (column_option).column_name = "c_9_n_", (column_option).column_suffix = "${name}"];
  //图谱关系
  repeated Relation graph_relation = 10 [(field_option).column_group = GRAPH_RELATION, (column_option).column_name = "c_10_n_", (column_option).column_suffix = "${graph_id}"];
}
/**
 * @brief 图书的实体；
 * @details 图书的实体。
 *
 **/
message Book {
  //option
  option (entity_option).table = BOOK_TABLE;
  option (entity_option).entity_name = "book";
  option (table_option).hbase_table_name = "qipu_book_table";
  option (entity_option).entity_id_type = BOOK;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //元数据
  optional BookMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //图书格式
  repeated BookFormat format = 5 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt_", (column_option).column_suffix = "${file_type}"];

  //总卷数，由奇谱自动计算；
  optional int64 volume_count = 6 [(field_option).column_group = VOLUME_COUNT, (column_option).column_name = "vol_count", (track_option).notracker=true];

  //总章节数，由奇谱自动计算；
  optional int64 chapter_count = 7 [(field_option).column_group = CHAPTER_COUNT, (column_option).column_name = "cha_count", (track_option).notracker=true];

  //总销量
  optional int64 sales_volume = 8 [default = 0, (field_option).column_group = SALES_VOLUME, (column_option).column_name = "sal_vol", (track_option).notracker=true];

  //点击量，由龙源提供，由奇谱自动聚合龙源数据；
  optional int64 click_count = 9 [default = 0, (field_option).column_group = CLICK_COUNT, (column_option).column_name = "cli_count", (track_option).notracker=true];

  //完结状态
  optional BookAvailableStatus serialize_status = 10 [(field_option).column_group = AVAILABLE_STATUS, (column_option).column_name = "avail"];
 
  //适读人群
  repeated HumanGroup suitable_group = 11 [(field_option).column_group = SUITABLE_GROUP, (column_option).column_name = "sui_group_", (column_option).column_suffix = "${suitable_group}"];

  //类别，三级分类，以前用Tag，现在全部改用Category
  repeated CategorySummary category = 12 [(field_option).column_group = CATEGORY_SUMMARY, (column_option).column_name = "cate_", (column_option).column_suffix = "${category_id}"];

  //自定义标签
  repeated string tag = 13 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  //版权信息
  optional Puyu puyu = 14 [(field_option).column_group = PUYU, (column_option).column_name = "puyu"];

  //付费
  optional Boss boss = 15 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];

  //相关图片，包括封面图
  repeated LocaleImage locale_image = 16 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  //发布相关的日期
  repeated Publication publication= 17 [(field_option).column_group = BOOK_PUBLICATION, (column_option).column_name = "publication_", (column_option).column_suffix = "${platform}"];

  //卷
  repeated MetaSummary volume_summary = 18 [(field_option).column_group = CHILD_VOLUME, (column_option).column_name = "chd_vol_", (column_option).column_suffix = "${entity_id}"];

  //最新章发布时间，由奇谱自动计算；
  optional int64 chapter_last_online_time = 19 [(field_option).column_group = LAST_ONLINE_TIME, (column_option).column_name = "cha_las_onl_time"];

  //首次上线时间
  optional int64 book_first_online_time = 20 [(field_option).column_group = BOOK_FIRST_ONLINE_TIME, (column_option).column_name = "book_fir_onl_time"];

  //最后上线时间
  optional int64 book_last_online_time = 21 [(field_option).column_group = BOOK_LAST_ONLINE_TIME, (column_option).column_name = "book_las_onl_time"];

  //章节
  repeated MetaSummary chapter_summary = 22 [(field_option).column_group = CHILD_CHAPTER, (column_option).column_name = "chd_cap_", (column_option).column_suffix = "${entity_id}"];

  //播控信息，使用方式参见http://wiki.qiyi.domain/pages/viewpage.action?pageId=25607995 
  repeated AccessPlayControl access_play_control = 23 [(field_option).column_group = ACCESS_PLAY_CONTROL, (column_option).column_name = "accplayctrl_", (column_option).column_suffix = "${play_platform}"];

  //Book_tag类别
  repeated CategorySummary book_tag = 24 [(field_option).column_group = BOOK_TAG, (column_option).column_name = "book_tag_", (column_option).column_suffix = "${category_id}"];

  // 昨日销售额
  optional int64 sales_yesterday = 25 [(field_option).column_group = SALES_YESTERDAY, (column_option).column_name = "sal_yest"];
  // 七天内销售额
  optional int64 sales_week= 26 [(field_option).column_group = SALES_WEEK, (column_option).column_name = "sal_week"];
  // 三十天内销售额
  optional int64 sales_month = 27 [(field_option).column_group = SALES_MONTH, (column_option).column_name = "sal_month"];
  // 销售额日环比
  optional float sales_day_on_day = 28 [(field_option).column_group = SALES_DAY_ON_DAY, (column_option).column_name = "sales_dod"];
  // 昨日点击量
  optional int64 click_count_yesterday = 29 [(field_option).column_group = CLICK_COUNT_YESTERDAY, (column_option).column_name = "cli_count_yest", (track_option).notracker=true];
  // 七天内点击量
  optional int64 click_count_week = 30 [(field_option).column_group = CLICK_COUNT_WEEK, (column_option).column_name = "cli_count_week", (track_option).notracker=true];
  // 三十天内点击量
  optional int64 click_count_month = 31 [(field_option).column_group = CLICK_COUNT_MONTH, (column_option).column_name = "cli_count_month", (track_option).notracker=true];

  // 昨日销售额
  optional float income_yesterday = 32 [(field_option).column_group = INCOME_YESTERDAY, (column_option).column_name = "inc_yest"];

  //圈子关联
  optional PaopaoSummary paopao_summary = 90 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "paopao_sum"];

  // 阅读免费章节数
  //optional int64 read_free_chapter_count = 33 [(field_option).column_group = READ_FREE_CHAPTER_COUNT, (column_option).column_name = "read_free_chp_count", (track_option).notracker=true];
  // 阅读付费章节数
  //optional int64 read_paid_chapter_count = 34 [(field_option).column_group = READ_PAID_CHAPTER_COUNT, (column_option).column_name = "read_paid_chp_count", (track_option).notracker=true];
  // 阅读字数
  //optional int64 read_word_count = 35 [(field_option).column_group = READ_WORD_COUNT, (column_option).column_name = "read_word_count", (track_option).notracker=true];

  //运营信息；
  optional BookBase base = 36 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  // 书写入作者
  repeated MetaSummary author_summary = 37 [(field_option).column_group = AUTHOR_SUMMARY, (column_option).column_name = "aut_sum_", (column_option).column_suffix = "${entity_id}"];

  // 总阅读章节数
  optional int64 read_chapter_count = 38 [(field_option).column_group = READ_CHAPTER_COUNT, (column_option).column_name = "read_chp_cunt", (track_option).notracker=true];
  // 昨日阅读章节数
  optional int64 read_chapter_count_yesterday = 39 [(field_option).column_group = READ_CHAPTER_COUNT_YESTERDAY, (column_option).column_name = "read_chp_cunt_yest", (track_option).notracker=true];
  // 总加入书架数
  optional int64 added_to_bookshelf_count = 40 [(field_option).column_group = ADDED_TO_BOOKSHELF_COUNT, (column_option).column_name = "add_shelf_cunt", (track_option).notracker=true];
  // 昨日加入书架数
  optional int64 added_to_bookshelf_count_yesterday = 41 [(field_option).column_group = ADDED_TO_BOOKSHELF_COUNT_YESTERDAY, (column_option).column_name = "add_shelf_cunt_yest", (track_option).notracker=true];
  // 总购买章节数
  optional int64 saled_chapter_count = 42 [(field_option).column_group = SALED_CHAPTER_COUNT, (column_option).column_name = "saled_chp_cunt", (track_option).notracker=true];
  // 昨日购买章节数
  optional int64 saled_chapter_count_yesterday = 43 [(field_option).column_group = SALED_CHAPTER_COUNT_YESTERDAY, (column_option).column_name = "saled_chp_cunt_yest", (track_option).notracker=true];
  // 周人均阅读章节数
  optional int64 read_chapter_average_week = 44 [(field_option).column_group = READ_CHAPTER_AVERAGE_WEEK, (column_option).column_name = "read_chp_ave_week", (track_option).notracker=true];
  // 周加入书架
  optional int64 added_to_bookshelf_uv_week = 45 [(field_option).column_group = ADDED_TO_BOOKSHELF_UV_WEEK, (column_option).column_name = "add_bookshelf_uv_week", (track_option).notracker=true];

  // 章节平均订阅
  optional int64 saled_chapter_average = 46 [(field_option).column_group = SALED_CHAPTER_AVERAGE, (column_option).column_name = "saled_chapter_average", (track_option).notracker=true];
  // 章节最高订阅
  optional int64 saled_chapter_most = 47 [(field_option).column_group = SALED_CHAPTER_MOST, (column_option).column_name = "saled_chapter_most", (track_option).notracker=true];
  // 总付费用户
  optional int64 saled_count_uv = 48 [(field_option).column_group = SALED_COUNT_UV, (column_option).column_name = "saled_count_uv", (track_option).notracker=true];
  //图书关联模板的URL
  optional StringList template_url_list = 49 [(field_option).column_group = TEMPLATE_URL_LIST, (column_option).column_name = "template_url_list"];
  //图书页面信息
  optional BookPageInfo page_info = 50 [(field_option).column_group = PAGE_INFO, (column_option).column_name = "book_page_info"];
  //图书文件包
  optional BookFile book_file = 51 [(field_option).column_group = BOOK_FILE, (column_option).column_name = "book_file"];
  //试看的图书包
  optional BookFile file_trial = 52 [(field_option).column_group = FILE_TRIAL, (column_option).column_name = "file_trial"];
  //目录
  optional string catalog = 53 [(field_option).column_group = CATALOG, (column_option).column_name = "catalog"];

  //关联的ip实体的id
  optional int64 ip_id = 54 [(field_option).column_group = IP_ID, (column_option).column_name = "ip_id"];

  // IP相关信息
  optional IntellectualPropertySummary ip_summary = 55 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "ip_sum"];

  // 开始收费的章节序号
  optional int32 start_charge_chapter = 56 [(field_option).column_group = START_CHARGE_CHAPTER, (column_option).column_name = "s_chrg_chptr"];
  //合同号，由乐高写入
  repeated int64 contract_code = 57 [(field_option).column_group = CONTRACT_CODE, (column_option).column_name = "contract_code_"];
  //结算控制信息
  optional SettlementInfo settlement_info = 91 [(field_option).column_group = SETTLEMENT_INFO, (column_option).column_name = "c_91_n"];
  //关联标签
  repeated TagSummary tag_summary = 92 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_92_n_", (column_option).column_suffix = "${source_type}"];
  //书籍总加入书架人数
  optional int64 added_to_bookshelf_uv = 93 [(field_option).column_group = ADDED_TO_BOOKSHELF_UV_COUNT, (column_option).column_name = "c_93_n"];
  //书籍总阅读人数
  optional int64 read_book_uv = 94 [(field_option).column_group = READ_BOOK_UV_COUNT, (column_option).column_name = "c_94_n"];
  //书籍总订阅人数
  optional int64 saled_book_uv = 95 [(field_option).column_group = SALED_BOOK_UV_COUNT, (column_option).column_name = "c_95_n"];
  //内容等级信息
  optional PublicationContentRatingInfo content_rating_info = 96 [(field_option).column_group = CONTENT_RATING_INFO, (column_option).column_name = "c_96_n"];
  //云腾书库信息
  repeated YuntengLibraryInfo yunteng_library_info = 97 [(field_option).column_group = YUNTENG_LIBRARY_INFO, (column_option).column_name = "c_97_n_", (column_option).column_suffix = "${id}"];
}
/**
 * @brief 书的卷的实体；
 * @details 书的卷的实体。
 *
 **/
message BookVolume {
  //option
  option (entity_option).table = BOOK_VOLUME_TABLE;
  option (entity_option).entity_name = "book_volume";
  option (table_option).hbase_table_name = "qipu_book_volume_table";
  option (entity_option).entity_id_type = BOOK_VOLUME;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //基本信息，包括名称等；
  optional BookMetadata metadata = 4 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //所在的图书
  optional FatherInfo father_book = 5 [(field_option).column_group = FATHER_BOOK, (column_option).column_name = "dad_book"];

  //发布相关的日期
  repeated Publication publication = 6 [(field_option).column_group = BOOK_PUBLICATION, (column_option).column_name = "publication_", (column_option).column_suffix = "${platform}"];

  //章节
  repeated MetaSummary chapter_summary = 7 [(field_option).column_group = CHILD_CHAPTER, (column_option).column_name = "chd_cap_", (column_option).column_suffix = "${entity_id}"];

  //总章节数；
  optional int64 chapter_count = 8 [(field_option).column_group = CHAPTER_COUNT, (column_option).column_name = "cha_count", (track_option).notracker=true];

  //章节最后上线时间
  optional int64 chapter_last_online_time = 9 [(field_option).column_group = LAST_ONLINE_TIME, (column_option).column_name = "cha_lut"];
}
/**
 * @brief 书的章节的实体；
 * @details 书的章节的实体。
 *
 **/
message BookChapter{
  //option
  option (entity_option).table = BOOK_CHAPTER_TABLE;
  option (entity_option).entity_name = "book_chapter";
  option (table_option).hbase_table_name = "qipu_book_chapter_table";
  option (entity_option).entity_id_type = BOOK_CHAPTER;

  required int64 id = 1 [(column_option).is_auto_set = true];
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  optional BookMetadata metadata = 3 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //发布相关的日期
  repeated Publication publication = 4 [(field_option).column_group = BOOK_PUBLICATION, (column_option).column_name = "publication_", (column_option).column_suffix = "${platform}"];

   //所在的图书
  optional FatherInfo father_volume = 5[(field_option).column_group = FATHER_VOLUME, (column_option).column_name = "dad_volume"];

  //图书格式
  repeated BookFormat format = 6 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt_", (column_option).column_suffix = "${file_type}"];

  //付费
  optional Boss boss = 7 [(field_option).column_group = BOSS, (column_option).column_name = "boss"];

  //书的内容
  optional BookContent content = 8 [(field_option).column_group = CONTENT, (column_option).column_name = "content"];

  //题外话
  optional Afterword afterword = 9 [(field_option).column_group = AFTERWORD, (column_option).column_name = "afterword"];

  optional int64 last_update_time = 10 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

   //所在的图书
  optional FatherInfo father_book = 11 [(field_option).column_group = FATHER_BOOK, (column_option).column_name = "dad_book"];

  //图书页面信息
  optional BookPageInfo page_info = 12 [(field_option).column_group = PAGE_INFO, (column_option).column_name = "book_page_info"];
}
/**
* @brief 电影节分年奖项信息
* @details电影节分年奖项信息
**/
message FestivalSeries {
  //option
  option (entity_option).table = FESTIVAL_SERIES_TABLE;
  option (entity_option).entity_name = "festival_series";
  option (table_option).hbase_table_name = "qipu_festival_series_table";
  option (entity_option).entity_id_type = FESTIVAL_SERIES;
  
  required int64 id = 1 [(column_option).is_auto_set = true];

  //元数据；
  optional FestivalSeriesMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "fes_ser_meta"];

  //所在的电影节，写入后，将自动同步信息到Festival.series中。
  optional FatherInfo festival = 3 [(field_option).column_group = FATHER_FESTIVAL, (column_option).column_name = "dad_fes"];
  //获奖名单，在写入FestivalAward后由奇谱自动同步过来；
  repeated MetaSummary award_list = 4 [(field_option).column_group = AWARD_SUMMARY, (column_option).column_name = "awa_sum_", (column_option).column_suffix = "${entity_id}"];
  //提名名单，在写入FestivalAward后由奇谱自动同步过来；
  repeated MetaSummary nominate_list = 5 [(field_option).column_group = NOMINATE_SUMMARY, (column_option).column_name = "nom_sum_", (column_option).column_suffix = "${entity_id}"];

  //海报图
  repeated LocaleImage poster = 6 [(field_option).column_group = POSTER, (column_option).column_name = "poster_", (column_option).column_suffix = "${language}_${type}"];
  optional bool deleted = 7 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 8 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

}
/**
* 电影节奖项信息
*
**/
message FestivalAward {
  //option
  option (entity_option).table = FESTIVAL_AWARD_TABLE;
  option (entity_option).entity_name = "festival_award";
  option (table_option).hbase_table_name = "qipu_festival_award_table";
  option (entity_option).entity_id_type = FESTIVAL_AWARD;

  required int64 id = 1 [(column_option).is_auto_set = true]; 

  optional FestivalAwardMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "fes_awa_meta"];
 
  //所在的分年电影节，写入后，奇谱自动将信息同步到FestivalSeries.award_list或FestivalSeries.nomiated_list上。
  optional FatherInfo festival_series = 3 [(field_option).column_group = FATHER_SERIES, (column_option).column_name = "dad_ser"];
  //获奖的制作者和角色
  optional Metadata.Creator creator = 4 [(field_option).column_group = CREATOR, (column_option).column_name = "creator"];
  //获奖的演员和角色
  optional Metadata.Contributor contributor = 5 [(field_option).column_group = CONTRIBUTOR, (column_option).column_name = "contributor"];
  //获奖影片， 写入后，奇谱将自动同步到Episode的AwardSummary上；
  repeated MetaSummary episode_summary = 6 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}"];
  //获奖电视剧， 写入后，奇谱将自动同步到Album的AwardSummary上；
  repeated MetaSummary album_summary = 7 [(field_option).column_group = CHILD_ALBUM, (column_option).column_name = "chd_alb_", (column_option).column_suffix = "${entity_id}"];
  //获奖资料， 写入后，奇谱将自动同步到FilmTVLibrary的AwardSummary上；
  repeated MetaSummary film_tv_summary = 8 [(field_option).column_group = CHILD_FILM_TV, (column_option).column_name = "chd_fil_", (column_option).column_suffix = "${entity_id}"];

  optional AwardSummary.Type type = 9 [(field_option).column_group = AWARD_TYPE, (column_option).column_name = "type"];
  optional AwardStatus status = 10 [(field_option).column_group = STATUS , (column_option).column_name = "status"];
  optional bool deleted = 11 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 12 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

}
/**
* 提示语
*
**/
message OperationTip {
  //option
  option (entity_option).table = OPERATION_TIP_TABLE;
  option (entity_option).entity_name = "operation_tip";
  option (table_option).hbase_table_name = "qipu_operation_tip_table";
  option (entity_option).entity_id_type = OPERATION_TIP;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // 提示语名称
  optional string name = 2 [(field_option).column_group = NAME, (column_option).column_name = "name"];
  // 提示语对应的字段
  optional string field = 3 [(field_option).column_group = FIELD, (column_option).column_name = "field"];
  // 提示语描述
  optional string description = 4 [(field_option).column_group = DESCRIPTION, (column_option).column_name = "des"];
  // 所在的应用
  optional string application = 5 [(field_option).column_group = APPLICATION, (column_option).column_name = "app"];
  // 所在的模块
  optional string module = 6 [(field_option).column_group = MODULE, (column_option).column_name = "mod"];
  // 各种语言的描述语
  repeated LocaleTip local_tip = 7 [(field_option).column_group = LOCAL_TIP, (column_option).column_name = "loc_tip_", (column_option).column_suffix = "${language}"];

  optional bool deleted = 8 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  optional int64 last_update_time = 9 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

}
/**
 * 泡泡
 * 圈子到泡泡的关系是一对多，泡泡只和圈子直接关联
 */
message Paopao {
  //option
  option (entity_option).table = PAOPAO_TABLE;
  option (entity_option).entity_name = "paopao";
  option (table_option).hbase_table_name = "qipu_paopao_table";
  option (entity_option).entity_id_type = PAOPAO;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional PaopaoMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  // 时效时间
  optional int64 expire_time = 3 [(field_option).column_group = EXPIRE_TIME, (column_option).column_name = "expt"];
  // 创建时间
  optional int64 create_time = 4 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];
  // 修改者
  optional int64 modifier = 5 [(field_option).column_group = MODIFIER, (column_option).column_name = "modifire"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 6 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 7 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  optional MetaSummary circle_summary = 8 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "circle_sum"];

  repeated KeyValuePair key_value_pair = 23 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];
  // 热度值sort
  optional int64 hot_sort = 24 [(field_option).column_group = HOT_SORT, (column_option).column_name = "hot_sort"];
}
/**
 * 圈子
 * album 和 episode到circle的关系都是多对一
 */
message Circle {
  //option
  option (entity_option).table = CIRCLE_TABLE;
  option (entity_option).entity_name = "circle";
  option (table_option).hbase_table_name = "qipu_circle_table";
  option (entity_option).entity_id_type = CIRCLE;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional CircleMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  // 创建时间
  optional int64 create_time = 3 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];
   //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 5 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  repeated MetaSummary album_summary = 6 [(field_option).column_group = ALBUM_SUMMARY, (column_option).column_name = "alb_sum_", (column_option).column_suffix = "${entity_id}"];
  repeated MetaSummary episode_summary = 7 [(field_option).column_group = EPISODE_SUMMARY, (column_option).column_name = "epi_sum_", (column_option).column_suffix = "${entity_id}"];
  repeated MetaSummary paopao_summary = 8 [(field_option).column_group = PAOPAO_SUMMARY, (column_option).column_name = "pao_sum_", (column_option).column_suffix = "${entity_id}"];
  optional MetaSummary people_summary = 9 [(field_option).column_group = PEOPLE_SUMMARY, (column_option).column_name = "people_sum"];
  optional MetaSummary feed_summary = 10 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "feed_sum"];
  optional MetaSummary book_summary = 11 [(field_option).column_group = BOOK_SUMMARY, (column_option).column_name = "book_sum"];
  repeated KeyValuePair key_value_pair = 23 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  repeated MetaSummary event_summary = 24 [(field_option).column_group = EVENT_SUMMARY, (column_option).column_name = "feed_sum_", (column_option).column_suffix = "${entity_id}"];
  // 热度值sort
  optional int64 hot_sort = 25 [(field_option).column_group = HOT_SORT, (column_option).column_name = "hot_sort"];

  // 推荐等级 0 unknown 1 general 2 high 3 strong
  optional int64 recommended_level = 26 [(field_option).column_group = RECOMMENDED_LEVEL, (column_option).column_name = "rec_level"];
  // 加圈人数
  optional int64 circle_user_count = 27 [(field_option).column_group = CIRCLE_USER_COUNT, (column_option).column_name = "percnt"];
  // 有效feed数量
  optional int64 valid_feed_count = 28 [(field_option).column_group = VALID_FEED_COUNT, (column_option).column_name = "valfeedcnt"];

  repeated MetaSummary activity_summary = 29 [(field_option).column_group = ACTIVITY_SUMMARY, (column_option).column_name = "activ_sum_", (column_option).column_suffix = "${entity_id}"];

  repeated MetaSummary library_summary = 30 [(field_option).column_group = LIBRARY_SUMMARY, (column_option).column_name = "lib_sum_", (column_option).column_suffix = "${entity_id}"];

  //爱频道用户uid
  optional int64 i_channel_uid = 31 [(field_option).column_group = I_CHANNEL_UID, (column_option).column_name = "i_channel_uid"];

  //认证用户id
  optional int64 verified_user_id = 32 [(field_option).column_group = VERIFIED_USER_ID, (column_option).column_name = "v_user_id"];
  //漫画实体
  optional MetaSummary comic_book_summary = 33 [(field_option).column_group = COMIC_BOOK_SUMMARY, (column_option).column_name = "com_sum_", (column_option).column_suffix = "${entity_id}"];

  //关联的资源位id
  optional int64 resource_container_id = 35 [(field_option).column_group = RESOURCE_CONTAINER_ID, (column_option).column_name = "resource_container_id"];

  // 是否打开基线入口
  optional bool baseline_entrance = 36 [default = true, (field_option).column_group = BASELINE_ENTRANCE, (column_option).column_name = "bl_etrce"];
  //圈子标签
  optional string circle_tag = 37 [(field_option).column_group = CIRCLE_TAG, (column_option).column_name = "circle_tag"];
  //是否展现抓取feed
  optional bool display_crawl_feed = 38 [default = true, (field_option).column_group = DISPLAY_CRAWL_FEED, (column_option).column_name = "dspl_crl_fd"];
  //是否展现套壳feed
  optional bool display_shell_feed = 39 [default = true, (field_option).column_group = DISPLAY_SHELL_FEED, (column_option).column_name = "dspl_shl_fd"];
  //创建类型
  optional CircleCreatorType creator_type = 40 [default = UNKNOWN_CIRCLE_CREATOR_TYPE, (field_option).column_group = CREATOR_TYPE, (column_option).column_name = "c_40_n"];
  //圈子关联标签
  repeated CircleTagSummary tag_summary = 41 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_41_n_", (column_option).column_suffix = "${entity_id}"];
  //粉丝名称
  optional string fans_name = 42 [(field_option).column_group = FANS_NAME, (column_option).column_name = "c_42_n"];
  //粉丝等级头衔
  repeated LevelTitleSummary level_title_summary = 43 [(field_option).column_group = LEVEL_TITLE_SUMMARY, (column_option).column_name = "c_43_n_", (column_option).column_suffix = "${level}"];
  //圈子控制信息
  optional CircleOperationControl operation_control = 44 [(field_option).column_group = OPERATION_CONTROL, (column_option).column_name = "c_44_n"];
}
/**
 * CircleFeed
 * CircleFeed到circle的关系是一对多
 */
message CircleFeed {
  //option
  option (entity_option).table = CIRCLE_FEED_TABLE;
  option (entity_option).entity_name = "circle_feed";
  option (table_option).hbase_table_name = "qipu_circle_feed_table";
  option (entity_option).entity_id_type = CIRCLE_FEED;

  required int64 id = 1 [(column_option).is_auto_set = true];
  
  optional FeedMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  
  //关联圈子id
  repeated FatherInfo father_circle = 3 [(field_option).column_group = FATHER_CIRCLE, (column_option).column_name = "dad_vgp_", (column_option).column_suffix = "${father_id}"];
  
  optional FeedContent content = 4 [(field_option).column_group = CONTENT, (column_option).column_name = "content"];
  
  // feed状态
  optional FeedStatus status = 5 [(field_option).column_group = STATUS, (column_option).column_name = "status"];
  
  // 创建时间
  optional int64 create_time = 6 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];
  
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 7 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 8 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // feed评分
  optional float score = 9 [(field_option).column_group = SCORE, (column_option).column_name = "score", (track_option).notracker=true];

  //feed审核状态
  optional CheckStatus check_status = 10 [default = CHECK_DEFAULT, (field_option).column_group = CHECK_STATUS, (column_option).column_name = "check_status"];
  repeated KeyValuePair key_value_pair = 23 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}"];

  // 圈主对feed的标记
  repeated FeedMasterTagStatus master_tag_status = 24 [(field_option).column_group = TAG, (column_option).column_name = "mas_tag_", (column_option).column_suffix = "${master_tag_status}"];

  repeated MetaSummary event_summary = 25 [(field_option).column_group = EVENT_SUMMARY, (column_option).column_name = "feed_sum_", (column_option).column_suffix = "${entity_id}"];

  optional bool is_blocked = 26 [default = false, (field_option).column_group = IS_BLOCKED, (column_option).column_name = "blocked"];

  // 爬虫字段
  optional CrawlerInfo crawler_info = 27 [(field_option).column_group = CRAWLER_INFO, (column_option).column_name = "crawler_info"];

  // 私密feed
  optional bool is_private = 28 [default = false, (field_option).column_group = IS_PRIVATE, (column_option).column_name = "is_private"];

  // 评论数
  optional int64 comment_count = 29 [(field_option).column_group = COMMENT_COUNT, (column_option).column_name = "cmtcnt"];
  // 分享数
  optional int64 share_count = 30 [(field_option).column_group = SHARE_COUNT, (column_option).column_name = "shrcnt"];
  // 赞数
  optional int64 like_count = 31 [(field_option).column_group = LIKE_COUNT, (column_option).column_name = "likcnt"];
  // VV（仅视频类feed)
  optional int64 display_play_count = 32 [(field_option).column_group = DISPLAY_PLAY_COUNT, (column_option).column_name = "dpcnt"];
  // 参与人数（仅投票类feed)
  optional int64 participation_count = 33 [(field_option).column_group = PARTICIPATION_COUNT, (column_option).column_name = "parcnt"];
  // 置顶
  optional bool is_top = 34 [(field_option).column_group = IS_TOP, (column_option).column_name = "is_top"];
  // 加精
  optional bool is_distillate = 35 [(field_option).column_group = IS_DISTILLATE, (column_option).column_name = "is_dist"];
  // 发布人用户身份
  optional CircleFeedCommentUserIdentity user_identity = 36 [(field_option).column_group = USER_IDENTITY, (column_option).column_name = "user_identity"];
  // 评论用户特征
  repeated FeedUserCharacteristics comment_user_characteristics = 37 [(field_option).column_group = COMMENT_USER_CHARACTERISTICS, (column_option).column_name = "comment_ustity_", (column_option).column_suffix = "${user_identity}"];
  // 赞用户特征
  repeated FeedUserCharacteristics like_user_characteristics = 38 [(field_option).column_group = LIKE_USER_CHARACTERISTICS, (column_option).column_name = "like_ustity_", (column_option).column_suffix = "${user_identity}"];
  // 分享用户特征
  repeated FeedUserCharacteristics share_user_characteristics = 39 [(field_option).column_group = SHARE_USER_CHARACTERISTICS, (column_option).column_name = "share_ustity_", (column_option).column_suffix = "${user_identity}"];

  // 相关圈子
  repeated MetaSummary circle_summary = 40 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "circle_sum_", (column_option).column_suffix = "${entity_id}"];

  repeated string tag = 41 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  repeated CategorySummary category_summary = 42 [(field_option).column_group = CATEGORY_SUMMARY, (column_option).column_name = "cat_summary_", (column_option).column_suffix = "${category_id}"];

  //推荐上看点数据统计
  optional int64 recommend_count = 43 [(field_option).column_group = RECOMMEND_COUNT, (column_option).column_name = "reccnt"];

  //图片特征
  repeated FeedImageSummary feed_image_summary = 44 [(field_option).column_group = FEED_IMAGE_SUMMARY, (column_option).column_name = "feed_img_sum_", (column_option).column_suffix = "${feed_image_name}"];

  //过滤搜索内容
  optional bool reject_search = 45 [(field_option).column_group = REJECT_SEARCH, (column_option).column_name = "reject_sch"];

  //过滤推荐内容
  optional bool reject_recommend = 46 [(field_option).column_group = REJECT_RECOMMEND, (column_option).column_name = "reject_recmd"];

  //反作弊类型
  repeated AntiCheatType anti_cheat_type = 47 [(field_option).column_group = ANTI_CHEAT_TYPE, (column_option).column_name = "anti_cheat_type"];

  //看点页提权
  optional EditorRecommendLevel editor_recommend_level = 48 [(field_option).column_group = EDITOR_RECOMMEND_LEVEL, (column_option).column_name = "editor_recmd_level"];

  //阅读数
  optional int64 read_count = 49 [(field_option).column_group = READ_COUNT, (column_option).column_name = "read_count"];

  // 父素材ID
  optional int64 father_material_id = 50 [(field_option).column_group = FATHER_MATERIAL_ID, (column_option).column_name = "fthr_mtrl_id"];
  //电影票summary
  repeated MetaSummary ticket_summary = 54 [(field_option).column_group = TICKET_SUMMARY, (column_option).column_name = "ticket_summary_", (column_option).column_suffix = "${entity_id}"];
  //打赏次数
  optional int64 reward_count = 51 [(field_option).column_group = REWARD_COUNT, (column_option).column_name = "reward_count"];
  //打赏人数
  optional int64 reward_people_count = 52 [(field_option).column_group = REWARD_PEOPLE_COUNT, (column_option).column_name = "reward_people_count"];
  //打赏总金额
  optional int64 reward_money = 53 [(field_option).column_group = REWARD_MONEY, (column_option).column_name = "reward_money"];

  // 图书Summary
  repeated MetaSummary book_summary = 55 [(field_option).column_group = BOOK_SUMMARY, (column_option).column_name = "book_sum_", (column_option).column_suffix = "${entity_id}"];

  // 漫画Summary
  repeated MetaSummary comic_book_summary = 56 [(field_option).column_group = COMIC_BOOK_SUMMARY, (column_option).column_name = "com_sum_", (column_option).column_suffix = "${entity_id}"];

  // 电商Summary
  repeated MetaSummary commodity_summary = 57 [(field_option).column_group = COMMODITY_SUMMARY, (column_option).column_name = "cmdty_sum_", (column_option).column_suffix = "${entity_id}"];

  // 游戏Summary
  repeated MetaSummary game_summary = 58 [(field_option).column_group = GAME_SUMMARY, (column_option).column_name = "game_sum_", (column_option).column_suffix = "${entity_id}"];
  //IP相关信息
  optional IntellectualPropertySummary ip_summary = 59 [(field_option).column_group = IP_SUMMARY, (column_option).column_name = "ip_summary"];
  //NLP自动识别IP信息
  optional IntellectualPropertySummary nlp_ip_summary = 60 [(field_option).column_group = NLP_IP_SUMMARY, (column_option).column_name = "nlp_ip_summary"];
  //泡泡业务kol用户认证系统，面向全体普通用户。
  optional KolUserIdentity kol_user_identity = 61 [(field_option).column_group = KOL_USER_IDENTITY, (column_option).column_name = "kol_user_identity"];
  //人工标签
  repeated string manual_tag = 62 [(field_option).column_group = MANUAL_TAG, (column_option).column_name = "c_62_n_"];
  //关联标签
  repeated TagSummary tag_summary = 63 [(field_option).column_group = TAG_SUMMARY, (column_option).column_name = "c_63_n_", (column_option).column_suffix = "${source_type}"];
  //feed平台
  optional PlayPlatform play_platform = 64 [default = UNKNOWN_PLAYPLATFORM, (field_option).column_group = PLAY_PLATFORM, (column_option).column_name = "c_64_n"];
  //原始站点信息
  optional OriginalSiteInfo original_site_info = 65 [(field_option).column_group = ORIGINAL_SITE_INFO, (column_option).column_name = "c_65_n"];
  //信息流业务类型
  optional BeehiveBusinessType beehive_business_type = 66 [default = UNKNOWN_BEEHIVE_BUSINESS_TYPE, (field_option).column_group = BEEHIVE_BUSINESS_TYPE, (column_option).column_name = "c_66_n"];
}
/**
 * ChatRoom
 * 聊天室，空实体，分配占用id段
 */
message ChatRoom {
  //option
  option (entity_option).table = CHAT_ROOM_TABLE;
  option (entity_option).entity_name = "chat_room";
  option (table_option).hbase_table_name = "qipu_chat_room_table";
  option (entity_option).entity_id_type = CHAT_ROOM;

  required int64 id = 1 [(column_option).is_auto_set = true];
}
/**
 * BookAuthor
 * 作者
 */
message BookAuthor {
  //option
  option (entity_option).table = BOOK_AUTHOR_TABLE;
  option (entity_option).entity_name = "book_author";
  option (table_option).hbase_table_name = "qipu_book_author_table";
  option (entity_option).entity_id_type = BOOK_AUTHOR;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // 元数据
  optional BookAuthorMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];

  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 书列表
  repeated MetaSummary book_summary = 5 [(field_option).column_group = BOOK_SUMMARY, (column_option).column_name = "book_sum_", (column_option).column_suffix = "${entity_id}"];
}
/**
 * 事件
 */
message Event {
  //option
  option (entity_option).table = EVENT_TABLE;
  option (entity_option).entity_name = "event";
  option (table_option).hbase_table_name = "qipu_event_table";
  option (entity_option).entity_id_type = EVENT;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional EventMetadata metadata = 2 [(field_option).column_group = METADATA, (column_option).column_name = "meta"];
  // 创建时间
  optional int64 create_time = 3 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];
   //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。 
  optional bool deleted = 4 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 5 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  optional EventPaopaoBase paopao_base = 6 [(field_option).column_group = PAOPAO_BASE, (column_option).column_name = "paobase"];

  // 相关圈子
  repeated MetaSummary circle_summary = 7 [(field_option).column_group = CIRCLE_SUMMARY, (column_option).column_name = "circle_sum_", (column_option).column_suffix = "${entity_id}"];

  // 推荐feed
  repeated MetaSummary feed_summary = 8 [(field_option).column_group = FEED_SUMMARY, (column_option).column_name = "feed_sum_", (column_option).column_suffix = "${entity_id}"];

  optional EventType type = 9 [(field_option).column_group = EVENT_TYPE, (column_option).column_name = "type"];

  // 热议人数
  optional int64 hot_comment_people_count = 10 [(field_option).column_group = HOT_COMMENT_PEOPLE_COUNT, (column_option).column_name = "hotcopecnt"];

  // 阅读数
  optional int64 read_count = 11 [(field_option).column_group = READ_COUNT, (column_option).column_name = "readcount"];

  // 和原有的type字段做区分
  optional EventForm form = 12 [default = EVENT_FORM_GENERAL_EVENT, (field_option).column_group = FORM, (column_option).column_name = "form"];
  //是否关联全部明星圈
  optional bool is_related_all_star_circles = 13 [default = false, (field_option).column_group = IS_RELATED_ALL_STAR_CIRCLES, (column_option).column_name = "is_related_all_star_circles"];
  //投票系统id
  optional int64 vote_id = 14 [(field_option).column_group = VOTE_ID, (column_option).column_name = "c_14_n"];
  //奖品信息
  optional PrizeInfo prize_info = 15 [(field_option).column_group = PRIZE_INFO, (column_option).column_name = "c_15_n"];
  //话题创建者ID
  optional int64 creator_id = 16 [(field_option).column_group = CREATOR_ID, (column_option).column_name = "c_16_n"];
  //话题素材信息
  repeated EventMaterialInfo material_info = 17 [(field_option).column_group = MATERIAL_INFO, (column_option).column_name = "c_17_n_", (column_option).column_suffix = "${material_id}"];
  //通用平台类型
  optional GeneralPlatform general_platform = 18 [default = UNKNOWN_GENERAL_PLATFORM, (field_option).column_group = GENERAL_PLATFORM, (column_option).column_name = "c_18_n"];
}
/**
 * @brief 爱奇艺用户
 * @details 爱奇艺用户，包括爱奇艺号和普通用户。
 **/
message IqiyiUser {
  //option
  option (entity_option).table = IQIYI_USER_TABLE;
  option (entity_option).entity_name = "iqiyi_user";
  option (table_option).hbase_table_name = "qipu_iqiyi_user_table";
  option (entity_option).entity_id_type = IQIYI_USER;
  //实体id
  required int64 id = 1 [(column_option).is_auto_set = true];
  //是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];
  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];
  //爱奇艺号
  optional Iqiyihao iqiyihao = 4 [(field_option).column_group = IQIYIHAO, (column_option).column_name = "c_4_n"];
  //爱奇艺号认证信息
  repeated IqiyihaoAuthInfo iqiyihao_auth_info = 9 [(field_option).column_group = IQIYIHAO_AUTH_INFO, (column_option).column_name = "c_9_n_", (column_option).column_suffix = "${iqiyihao_type}"];
  //爱奇艺号运营信息
  optional IqiyihaoBase iqiyihao_base = 10 [(field_option).column_group = IQIYIHAO_BASE, (column_option).column_name = "c_10_n"];
  //爱奇艺用户类型
  optional IqiyiUserType user_type = 11 [default = UNKNOWN_IQIYI_USER_TYPE, (field_option).column_group = USER_TYPE, (column_option).column_name = "c_11_n"];
  //质量等级信息
  optional IqiyiUserQualityInfo quality_rating_info = 12 [(field_option).column_group = QUALITY_RATING_INFO, (column_option).column_name = "c_12_n"];
  //爱奇艺号等级信息
  optional IqiyihaoLevelInfo iqiyihao_level_info = 7 [(field_option).column_group = IQIYIHAO_LEVEL_INFO, (column_option).column_name = "c_7_n"];
  //爱奇艺号指数信息
  optional IqiyihaoScoreInfo iqiyihao_score_info = 8 [(field_option).column_group = IQIYIHAO_SCORE_INFO, (column_option).column_name = "c_8_n"];
  //爱奇艺号行业信息
  repeated DomainInfo iqiyihao_domain_info = 14 [(field_option).column_group = IQIYIHAO_DOMAIN_INFO, (column_option).column_name = "c_14_n_", (column_option).column_suffix = "${iqiyihao_type}"];
  //代表作信息
  repeated RepresentativeWorkInfo representative_work_info = 13 [(field_option).column_group = REPRESENTATIVE_WORK_INFO, (column_option).column_name = "c_13_n_", (column_option).column_suffix = "${entity_id}"];
  //用户昵称
  optional string nickname = 15 [(field_option).column_group = NICKNAME, (column_option).column_name = "c_15_n"];
  //用户头像（url）
  optional string profile_picture_url = 16 [(field_option).column_group = PROFILE_PICTURE_URL, (column_option).column_name = "c_16_n"];
  //粉丝数
  optional int64 fans_following_count = 17 [(field_option).column_group = FANS_FOLLOWING_COUNT, (column_option).column_name = "c_17_n"];
  //视频数
  optional int64 video_count = 18 [(field_option).column_group = VIDEO_COUNT, (column_option).column_name = "c_18_n"];
  //展示播放数
  optional int64 display_play_count = 19 [(field_option).column_group = DISPLAY_PLAY_COUNT, (column_option).column_name = "c_19_n"];
  //爱奇艺号MCN信息
  optional McnInfo mcn_info = 20 [(field_option).column_group = MCN_INFO, (column_option).column_name = "c_20_n"];
}
