// Author: Jiannan Tan (tanjiannan@qiyi.com)
//
// 定义local grounding接口的数据结构.
//

package knowledge.pub.service.fusion;

import "knowledge/fusion/longyuan/longyuan_service.proto";
import "knowledge/pub/read_service.proto";
import "knowledge/pub/knowledge.proto";
import "knowledge/pub/common.proto";
import "knowledge/pub/metadatas.proto";
import "knowledge/graph/pub/properties.proto";
import "knowledge/fusion/query/properties.proto";


/**
 * VideoView和Entity合并request
 */
message MergeEntityRequest {
  optional GetVideoPlayCountResponse get_video_play_count_response = 1;
  optional knowledge.pub.GetEntityResponse get_entity_response = 2;
}

/**
 * VideoView和Entity合并response
 */
message MergeEntityResponse {
  optional knowledge.pub.GetEntityResponse get_entity_response = 1;
}

message EmptyRequest {

}

message EmptyResponse {

}

message PreHandleRelatedVideoRequest {
  optional knowledge.pub.GetEntityResponse get_celebrity_response = 1;

  // If true, will return all child videos of albums
  optional bool include_child_data = 2 [default = false];

  optional bool include_film_tv_lib = 3 [default = false];

  // If you specify some channel ids here,
  // we will only return the works of those channels.
  // If not, we will return works of all channels.
  repeated int32 channel_id = 4;

  // If true, will remove Albums from response
  optional bool exclude_album = 5 [default = false];
}

message PreHandleRelatedVideoResponse {
  // 经过处理后的明星相关视频
  repeated knowledge.graph.pub.AlbumVideoData filter_related_video_data = 1;

  // 未经处理后的明星相关视频id.
  repeated int64 fully_related_video_id = 2;
}

message PostHandleRelatedVideoRequest {
  optional knowledge.pub.GetEntityResponse get_related_videos_response = 1;

  repeated knowledge.graph.pub.AlbumVideoData related_video_data = 2;
  repeated int64 fully_related_video_id = 3;

  optional knowledge.graph.pub.RankingPolicy ranking_policy = 4 [default = PUBLISH_TIME];

  // only qiyi produced flag, if it is true, filter out the non-qiyi produced album
  optional bool only_qiyi_produced = 5 [default = false];

  repeated string include_role = 6;
  repeated string exclude_role = 7;

  // If true, will keep film_tv_lib instead of album/episode if they have the same title
  optional bool film_tv_lib_first = 8 [default = false];

  // If true, will return all child videos of albums
  optional bool include_child_data = 9 [default = false];

  // 调用方的平台类型和IP地址，用于播控过滤
  optional knowledge.graph.pub.CallerInfo caller_info = 10;

  // If true, will only return videos with role info
  optional bool filter_no_roles = 11 [default = false];

  // The offset of start point begins with 0.
  optional int32 offset = 12 [default = 0];
  optional int32 limit = 13 [default = 5];
}

message PostHandleRelatedVideoResponse {
  // 经过处理后的明星相关视频
  repeated knowledge.graph.pub.AlbumVideoData related_video_data = 1;

  repeated knowledge.pub.KeyValuePair lastest_episode_map = 2;

  optional int32 total_related_video_size = 3;
}

message SetRelatedVideoMoreInfoRequest {
  // If true, will return film_tv_category for related entities
  optional bool include_category_info = 1 [default = false];
  // If true, will include qipu entity info in response
  optional bool include_entity = 2 [default = false];
  // Columns of entities that user want to include in response
  repeated knowledge.pub.ColumnGroup entity_columns = 3;
  // If true, will return film_tv_category for related entities
  optional bool include_tag_info = 4 [default = false];
  // NOTE: this function is moved to GetFilmTvLibPlaySource
  optional bool include_film_tv_play_source = 5 [deprecated = true];

  repeated knowledge.graph.pub.AlbumVideoData related_video_data = 6;
  repeated knowledge.pub.KeyValuePair lastest_episode_map = 7;

  repeated knowledge.pub.ColumnGroup columns_of_get_lastest_issue_date_request = 8;

  optional User user = 9;
}

message SetRelatedVideoMoreInfoResponse {
 repeated knowledge.graph.pub.AlbumVideoData related_video_data = 1;
}

message HandleRelatedCelebritiesOfVideoRequest {
  optional knowledge.pub.MetaSummaryList related_celebrity_list = 1;

  // The required celebrity number for this video.
  optional int32 limit = 2 [default = 3];
  optional int32 offset = 3 [default = 0];

  // Indicates whether limit needs to be filled up.
  optional bool should_be_filled_up = 4 [default = false];
  optional User user = 5;
  optional SiteType iqiyi_site = 6 [default = SITE_ZH];
  repeated Language iqiyi_language = 7;
}

message HandleRelatedCelebritiesOfVideoResponse {
  optional knowledge.graph.pub.CelebrityDataList related_celebrity = 1;

  // Indicates the total number of celebrities who have direct relation with this video.
  optional int32 total_count = 2;

  // Indicates the number of returned celebrities who have direct relation with this video.
  optional int32 direct_count = 3;

  repeated int64 all_related_celebrity_id = 4;
}

message HandleRelatedCelebritiesRequest {
  repeated knowledge.pub.People people_list = 1;

  optional int32 offset = 2 [default = 0];
  optional int32 limit = 3 [default = 6];

  // 是否在返回结果中包含被查询明星自己的信息
  optional bool include_self_info = 4 [default = false];

  optional User user = 5;
  optional SiteType iqiyi_site = 6 [default = SITE_ZH];
  repeated Language iqiyi_language = 7;
}

message HandleRelatedCelebritiesResponse {
  optional knowledge.graph.pub.CelebrityDataList related_celebrity = 1;
  optional int32 total_count = 2;

  // 被查询的明星本人的信息
  optional knowledge.graph.pub.CelebrityDataList self_info = 3;

  repeated int64 filled_celebrity_id = 4;
  optional int32 filled_celebrity_count = 5;
}

message FillRelatedCelebritiesOfPersonRequest {
  repeated int64 person_id_list = 1;
  optional int32 count = 2;
  optional knowledge.graph.pub.CelebrityDataList old_related_celebrity = 3;
  optional User user = 4;
  optional SiteType iqiyi_site = 5 [default = SITE_ZH];
  repeated Language iqiyi_language = 6;
}

message FillRelatedCelebritiesOfPersonResponse {
  optional knowledge.graph.pub.CelebrityDataList new_related_celebrity = 1;
}

message DspVideosFilterRequest {
  repeated knowledge.pub.query.QueryHit hit = 1;
}

message DspVideosFilterResponse {
  repeated knowledge.pub.query.QueryHit hit = 1;
}

message GetAvailablePrevueSummaryRequest {
  repeated knowledge.pub.MetaSummary prevue_summary = 1;

  optional User user = 2;
  optional SiteType iqiyi_site = 3 [default = SITE_ZH];
  repeated Language iqiyi_language = 4;
}

message GetAvailablePrevueSummaryResponse {
  repeated knowledge.pub.MetaSummary prevue_summary = 1;
}