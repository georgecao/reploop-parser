2017/03/28 (2.0.170328)
1. entity/schema-22-live-channel.fproto
message LiveChannel {
  // 3d 直播信息
  optional ThreeDFormat	three_d_format = 20 [(field_option).column_group = THREE_D_FORMAT, (column_option).column_name = "three_d_fmt"];
}

2. entity/schema-23-live-episode.fproto
message LiveEpisode {
  // 3d 直播信息
  optional ThreeDFormat	three_d_format = 41 [(field_option).column_group = THREE_D_FORMAT, (column_option).column_name = "three_d_fmt"];
}

3. knowledge/pub/formats.proto
message ThreeDFormat {
  // 3d类型
  optional ThreeDType three_d_type = 1 [default = TYPE_THREE_DIMEN_COMMON];
}

4. knowledge/pub/common.proto
enum ColumnGroup {
 THREE_D_FORMAT = 560;
}

2017/03/21 (2.0.170321)
1. read新增统一接口readEntity
2. write新增统一接口writeEntity
2017/03/21 (2.0.170321)
CircleFeed下新增其他垂线summary结构
1./entity/schema-48-circle-feed.fproto
message CircleFeed {
  // 图书Summary
  repeated MetaSummary book_summary = 55 [(field_option).column_group = BOOK_SUMMARY, (column_option).column_name = "book_sum_", (column_option).column_suffix = "${entity_id}"];

  // 漫画Summary
  repeated MetaSummary comic_book_summary = 56 [(field_option).column_group = COMIC_BOOK_SUMMARY, (column_option).column_name = "com_sum_", (column_option).column_suffix = "${entity_id}"];

  // 电商Summary
  repeated MetaSummary commodity_summary = 57 [(field_option).column_group = COMMODITY_SUMMARY, (column_option).column_name = "cmdty_sum_", (column_option).column_suffix = "${entity_id}"];

  // 游戏Summary
  repeated MetaSummary game_summary = 58 [(field_option).column_group = GAME_SUMMARY, (column_option).column_name = "game_sum_", (column_option).column_suffix = "${entity_id}"];
}

2017/03/20 (2.0.170320)
1. entity/schema-1370-live-room.fproto
/**
 * 直播间实体
 */
message LiveRoom {
  // option
  option (entity_option).table = LIVE_ROOM_TABLE;
  option (entity_option).entity_name = "live_room";
  option (table_option).hbase_table_name = "qipu_live_room_table";
  option (entity_option).entity_id_type = LIVE_ROOM;

  required int64 id = 1 [(column_option).is_auto_set = true];

  // 是否删除。奇谱不真正删除数据。 使用这个标识来标记该数据已经删除。
  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true];

  // 创建时间
  optional int64 create_time = 4 [(field_option).column_group = CREATE_TIME, (column_option).column_name = "cret"];

  // 开始直播时间
  optional int64 live_start_time = 5 [(field_option).column_group = LIVE_START_TIME, (column_option).column_name = "lst"];

  // 上次直播结束时间
  optional int64 last_live_end_time = 6 [(field_option).column_group = LAST_LIVE_END_TIME, (column_option).column_name = "llet"];

  // 运营信息
  optional LiveRoomBase base = 7 [(field_option).column_group = BASE, (column_option).column_name = "base"];

  // 观众数量
  optional int64 audience_count = 8 [(field_option).column_group = AUDIENCE_COUNT, (column_option).column_name = "adc_cnt"];

  // 自动截屏
  optional string auto_screenshot = 9 [(field_option).column_group = AUTO_SCREENSHOT, (column_option).column_name = "auto_scnst"];

  // 身价(没有单位)
  optional int64 live_room_money = 10 [(field_option).column_group = LIVE_ROOM_MONEY, (column_option).column_name = "room_money"];

  // 粉丝数
  optional int64 fans_number = 11 [(field_option).column_group = FANS_NUMBER, (column_option).column_name = "fans_num"];

  // 基本信息
  optional LiveRoomMetadata metadata = 12 [(field_option).column_group = METADATA, (column_option).column_name = "metadata"];

  // 主播等级
  optional int64 presenter_level = 13 [(field_option).column_group = PRESENTER_LEVEL, (column_option).column_name = "presenter_lev"];
}

2. knowledge/fusion/query/properties.proto
message QipuEntity {
  optional LiveRoom live_room = 66;
}

3. knowledge/pub/common.proto
enum EntityIdType {
  // 直播间实体
  LIVE_ROOM = 1370;
}

enum Table {
  // 直播间实体
  LIVE_ROOM_TABLE = 64;
}

enum ColumnGroup {
  LIVE_START_TIME = 552;
  AUTO_SCREENSHOT = 553;
  FANS_NUMBER = 554;
  LIVE_ROOM_MONEY = 555;
  PRESENTER_LEVEL = 559;
}

// 直播间类型
enum LiveRoomType {
  UNKNOWN_LIVE_ROOM_TYPE = -1;
  // 游戏
  LIVE_ROOM_TYPE_GAME = 1;
}

4. knowledge/pub/metadatas.proto
message LiveRoomMetadata {
  // 主播信息
  message PresenterMetadata {
    // ID
    optional int64 entity_id = 1;
    // 昵称
    optional string nickname = 2;
    // 头像
    optional string head_portrait = 3;
  }

  // 主播信息
  optional PresenterMetadata presenter = 1;
  // 聊天室id
  optional int64 chat_room_id = 2;
  // 直播标题
  optional string live_room_title = 3;
  // 直播标签
  optional string live_room_tag = 4;
  // 直播类型
  optional LiveRoomType live_room_type = 5 [default = LIVE_ROOM_TYPE_GAME];
  // 业务线内部直播间id
  optional int64 live_room_id = 6;
}

5. knowledge/pub/properties.proto
message LiveRoomBase {
  // 直播间公告
  optional string notify = 1;
  // 默认封面，主播开播的设置的图片
  optional string cover_image = 2;
  // 流地址
  optional string rtmp_url = 3;
  // 直播节目id
  optional int64 episode_id = 4;
  // 是否循环播放
  optional bool is_loop_play = 5 [default = false];
  // 直播状态
  optional PlayStatus live_status = 6 [default = PLAY_STATUS_NULL];
}

6. knowledge/pub/read_service.proto
message GetEntityResponse {
  // Response for request of entity: LiveRoom
  repeated LiveRoom live_room = 66;
}

7. knowledge/pub/write_rpc_service.thrift
service WriteRpcService {
  /**
   * The write interfaces of setting for LiveRoom.
   * Set all field of LiveRoom,
   * or throws an exception if this operation is not valid.
   */
  binary setLiveRoom(1:binary set_live_room_request)
      throws (1:InvalidWriteOperation e);
}

8. knowledge/pub/write_service.proto

// Proto for setLiveRoom method defined in write_rpc_service.thrift
message SetLiveRoomRequest {
  //option
  option (request_options).set_table = LIVE_ROOM_TABLE;
  option (request_options).set_interface = "setLiveRoom";

  required User user = 1;

  optional LiveRoom merge_live_room = 2;

  optional LiveRoom delete_live_room = 3;

  // Whether to send message to activeMQ to notify audience. If you don't know
  // what exactly it is, leave it as default.
  optional bool should_notify_audience = 4 [default = true];

  // If you're doing a batch update,
  // please consider setting is_updated_in_batch_mode = true.
  // So the audience will know this is a batch update,
  // in which they may optimize the message processing.
  optional bool is_updated_in_batch_mode = 5 [default = false];

  // 消息优先级
  optional Priority priority = 6;
}

2017/03/16 (2.0.170316)
1. knowledge/pub/formats.proto
message FileInfo {
  // 原始地址（仅内部使用）
  optional string file_uri = 5;
}

2017/03/14 (2.0.170314)
1. entity/schema-07-multi-publish-episode.fproto
message MultiPublishEpisode {
  // 主实体的最新修改时间；由奇谱同步，用于在主发更新的情况下，触发多发ID的消息
  //optional Date primary_last_update_time = 8 [(field_option).column_group = PRIMARY_LAST_UPDATE_TIME, (column_option).column_name = "primary_lut"];
}

2. entity/schema-08-multi-publish-album.fproto
message MultiPublishAlbum {
  // 主实体的最新修改时间；由奇谱同步，用于在主发更新的情况下，触发多发ID的消息
  //optional Date primary_last_update_time = 8 [(field_option).column_group = PRIMARY_LAST_UPDATE_TIME, (column_option).column_name = "primary_lut"];
}

3. knowledge/pub/common.proto
enum ColumnGroup {
 //PRIMARY_LAST_UPDATE_TIME = 511;
}

Schema3.0新增字段
1. entity/schema-00-episode.fproto
message Episode {
  option (site_option).zh_tw.site = SITE_ZH_TW;
  option (site_option).zh_tw.table_name = "qipu_episode_tw_table";

  //最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 20 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // VideoFormat ID 关联 同步
  optional FormatSummary format_summary = 200 [(field_option).column_group = FORMAT_SUMMARY, (column_option).column_name = "format_sum"];

  // 资料的上下线状态
  optional AvailableStatus film_tv_available_status = 201 [(field_option).column_group = FILM_TV_AVAILABLE_STATUS, (column_option).column_name = "film_tv_avail"];

  // 基础信息(不分站点,不分语种,不分多发)
  optional MetaBasicInfo meta_basic_info = 202 [(field_option).column_group = META_BASIC_INFO, (column_option).column_name = "meta_bsc_info"];

  // 多语种相关信息(不分站点,分语种,不分多发)
  repeated MetaMultilingualInfo meta_multilingual_info = 203 [(field_option).column_group = META_MULTILINGUAL_INFO, (column_option).column_name = "meta_mul_lang_info_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  // 高级信息
  optional MetaAdvancedInfo meta_advanced_info = 204 [(field_option).column_group = META_ADVANCED_INFO, (column_option).column_name = "meta_adv_info"];

  // 内容分级(分站点)
  optional ContentRating content_rating = 205 [(field_option).column_group = CONTENT_RATING, (column_option).column_name = "con_rat",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 视频相关base[无维度]
  optional VideoCommonBase video_common_base = 206 [(field_option).column_group = VIDEO_COMMON_BASE, (column_option).column_name = "v_cm_base"];

  // 主展示运营base[无维度]
  optional OperationBase operation_base = 207 [(field_option).column_group = OPERATION_BASE, (column_option).column_name = "op_base"];

  // 合作相关运营[无维度]
  optional OperationCooperationBase operation_cooperation_base = 208 [(field_option).column_group = OPERATION_COOPERATION_BASE, (column_option).column_name = "op_coop_base"];

  // 控制base[站点](分站点)
  optional OperationControlBase operation_control_base = 209 [(field_option).column_group = OPERATION_CONTROL_BASE, (column_option).column_name = "op_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 多发控制base[站点]乐高来写(分站点,分多发)
  optional OperationMultiControlBase operation_multi_control_base = 210 [(field_option).column_group = OPERATION_MULTI_CONTROL_BASE, (column_option).column_name = "op_mul_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 频道ID
  optional int32 channel_id = 211 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "c_id"];

  // 多语言显示base(分多发)
  repeated OperationLanguageBase operation_language_base = 212 [(field_option).column_group = OPERATION_LANGUAGE_BASE, (column_option).column_name = "op_lang_base_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  // 页面相关[站点](分站点,分多发)
  optional OperationPage operation_page = 213 [(field_option).column_group = OPERATION_PAGE, (column_option).column_name = "op_page",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 关联人物信息
  optional RelatedPeopleInfo related_people_info = 214 [(field_option).column_group = RELATED_PEOPLE_INFO, (column_option).column_name = "related_people"];

  // 关联角色信息
  optional RelatedCharacterInfo related_character_info = 215 [(field_option).column_group = RELATED_CHARACTER_INFO, (column_option).column_name = "related_char"];

  // 资料关联的ugc视频
  repeated MetaSummary ugc_summary = 216 [(field_option).column_group = UGC_SUMMARY, (column_option).column_name = "ugc_sum_", (column_option).column_suffix = "${entity_id}"];

  optional StagePhotos stage_photos = 217 [(field_option).column_group = STAGE_PHOTOS, (column_option).column_name = "stage_pto"];

  optional Feeds feeds = 218 [(field_option).column_group = FEEDS, (column_option).column_name = "feeds"];

  // 影视大全相关视频
  repeated MetaSummary filmtv_related_summary = 219 [(field_option).column_group = FILMTV_RELATED_SUMMARY, (column_option).column_name = "flv_rltd_sum", (column_option).column_suffix = "${entity_id}"];
}

2. entity/schema-01-album.fproto
message Album {

  option (site_option).zh_tw.site = SITE_ZH_TW;
  option (site_option).zh_tw.table_name = "qipu_album_tw_table";

  optional int64 last_update_time = 16 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // VideoFormat ID 关联 同步
  optional FormatSummary format_summary = 200 [(field_option).column_group = FORMAT_SUMMARY, (column_option).column_name = "format_sum"];

  // 资料的上下线状态
  optional AvailableStatus film_tv_available_status = 201 [(field_option).column_group = FILM_TV_AVAILABLE_STATUS, (column_option).column_name = "film_tv_avail"];

  // 基础信息(不分站点,不分语种,不分多发)
  optional MetaBasicInfo meta_basic_info = 202 [(field_option).column_group = META_BASIC_INFO, (column_option).column_name = "meta_bsc_info"];

  // 多语种相关信息(不分站点,分语种,不分多发)
  repeated MetaMultilingualInfo meta_multilingual_info = 203 [(field_option).column_group = META_MULTILINGUAL_INFO, (column_option).column_name = "meta_mul_lang_info_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  // 高级信息
  optional MetaAdvancedInfo meta_advanced_info = 204 [(field_option).column_group = META_ADVANCED_INFO, (column_option).column_name = "meta_adv_info"];

  // 内容分级(分站点)
  optional ContentRating content_rating = 205 [(field_option).column_group = CONTENT_RATING, (column_option).column_name = "con_rat",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 视频相关base[无维度]
  optional VideoCommonBase video_common_base = 206 [(field_option).column_group = VIDEO_COMMON_BASE, (column_option).column_name = "v_cm_base"];

  // 主展示运营base[无维度]
  optional OperationBase operation_base = 207 [(field_option).column_group = OPERATION_BASE, (column_option).column_name = "op_base"];

  // 合作相关运营[无维度]
  optional OperationCooperationBase operation_cooperation_base = 208 [(field_option).column_group = OPERATION_COOPERATION_BASE, (column_option).column_name = "op_coop_base"];

  // 控制base[站点](分站点)
  optional OperationControlBase operation_control_base = 209 [(field_option).column_group = OPERATION_CONTROL_BASE, (column_option).column_name = "op_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 多发控制base[站点]乐高来写(分站点,分多发)
  optional OperationMultiControlBase operation_multi_control_base = 210 [(field_option).column_group = OPERATION_MULTI_CONTROL_BASE, (column_option).column_name = "op_mul_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 频道ID
  optional int32 channel_id = 211 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "c_id"];

  // 多语言显示base(分多发)
  repeated OperationLanguageBase operation_language_base = 212 [(field_option).column_group = OPERATION_LANGUAGE_BASE, (column_option).column_name = "op_lang_base_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  // 页面相关[站点](分站点,分多发)
  optional OperationPage operation_page = 213 [(field_option).column_group = OPERATION_PAGE, (column_option).column_name = "op_page",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  optional AlbumSourceType album_source_type = 214 [default = ALBUM_SOURCE_TYPE_EPISODE,(field_option).column_group = ALBUM_SOURCE_TYPE, (column_option).column_name = "src_type"];

  // 关联人物信息
  optional RelatedPeopleInfo related_people_info = 215 [(field_option).column_group = RELATED_PEOPLE_INFO, (column_option).column_name = "related_people"];

  // 关联角色信息
  optional RelatedCharacterInfo related_character_info = 216 [(field_option).column_group = RELATED_CHARACTER_INFO, (column_option).column_name = "related_char"];

  // 资料关联的ugc视频
  repeated MetaSummary ugc_summary = 217 [(field_option).column_group = UGC_SUMMARY, (column_option).column_name = "ugc_sum_", (column_option).column_suffix = "${entity_id}"];

  optional StagePhotos stage_photos = 218 [(field_option).column_group = STAGE_PHOTOS, (column_option).column_name = "stage_pto"];

  optional Feeds feeds = 219 [(field_option).column_group = FEEDS, (column_option).column_name = "feeds"];

  // 影视大全相关视频
  repeated MetaSummary filmtv_related_summary = 220 [(field_option).column_group = FILMTV_RELATED_SUMMARY, (column_option).column_name = "flv_rltd_sum", (column_option).column_suffix = "${entity_id}"];
}

3. pub/properties.proto
// 视频相关base[无维度]
message VideoCommonBase {
  // Determine the head of episode, in order to skip
  optional StartEndPoint video_head = 1;

  // Determine the tail of episode, in order to skip
  optional StartEndPoint video_tail = 2;

  // The time segments can be skipped for episode.
  repeated SkipTimeSegment skip_time_segment = 3;

  // The start and end point of advertisement video, for jiangsu TV, or other TVs.
  // If multiple advertisement videoes, one or multiple may be cancelled.
  repeated StartEndPoint advertise_start_end_point = 4;
}

// 主展示运营base[无维度]
message OperationBase {
  // 爱奇艺出品:是/否
  optional bool is_qiyi_produced = 1;

  // 关键字
  optional string video_related_keyword = 2;

  // 正片间关键字
  optional string video_feature_keyword = 3;

  // 剧集内排序字段 pps
  optional SortType pps_sort_type = 4;

  // 剧集内排序方式 pps
  optional SortWard pps_sort_ward = 5;

  // 版权危险等级
  optional SecurityLevel pps_security_level = 6;

  // 内容类型标识
  optional SpecialContentType special_content_type = 7;

  // 更新频率
  optional int32 pps_update_interval_in_minutes = 9;

  // 水印位置
  optional Base.LogoPosition logo_position = 10;

  // 是否开启第三方抓取
  optional bool pps_is_enable_third_spider = 11 [default = false];

  // 列表客户端对应PB文件URL
  optional string pps_update_source = 12;

  repeated KeyValuePair key_value_pair = 13;
}

// 合作相关运营[无维度]
message OperationCooperationBase {
  // For baidu video square, corresponding to vrs.expand_type
  // 百度视频广场
  repeated string video_square = 1;

  // 作品版本信息
  optional string video_version_info = 2;

  // 艾瑞统计频道
  optional int32 ext_irsearch_stat_channel = 3;

  // 对外合作推广类型,电影、电视剧、动漫、综艺、其他
  optional int32 television_program = 4;

  repeated KeyValuePair key_value_pair = 5;
}

// 控制base[站点](分站点)
message OperationControlBase {
  // 是否强制播广告
  optional bool ad_status = 1 [default = false];

  // 是否独播
  optional bool exclusive_status = 2 [default = false];

  // 是否政治敏感
  optional bool is_politically_sensitive = 3 [default = false];

  // 敏感人物
  optional string sensitive_person = 4;

  // 是否展现评论区
  optional bool is_display_comment_status = 5 [default = true];

  // 是否开启弹幕
  optional bool is_display_barrage = 6 [default = true];

  repeated KeyValuePair key_value_pair = 7;
}

// 多发控制base[站点]乐高来写(分站点和分多发)
message OperationMultiControlBase {
  // 是否允许进入首页
  optional bool is_available_for_homepage = 1 [default = false];

  // 推荐等级
  optional EditorRecommendLevel editor_recommend_level = 2 [default = EDITOR_RECOMMEND_LEVEL_NONE];
}

// 多语言显示base(分多发)
message OperationLanguageBase {
  // 语言
  optional Language language = 1;

  // 短标题，用于移动端显示
  optional string short_display_name = 2;

  // 显示名称
  optional string display_name = 3;

  // pps短标题，主要用于移动端显示
  optional string pps_short_display_name = 4;

  // pps显示名称
  optional string pps_display_name = 5;

  // 副标题
  optional string subordinate_title = 6;

  // 爱奇艺更新策略
  optional string update_strategy = 7;

  // 描述
  optional string description = 8;

  // 一句话推荐
  optional string prompt_description = 9;

  // 播放策略短标题
  optional string short_update_strategy = 10;

  // 吸睛标题
  optional string fantasy_title = 11;
}

// 页面相关[站点](分站点分多发)
message OperationPage {
  // 页面状态
  optional PagePublishStatus page_publish_status = 1 [default = PAGE_WAIT];

  // 页面发布时间
  optional Date page_publish_time = 2;

  // 页面首次发布时间
  optional int64 page_first_publish_time = 3;

  // 页面URL
  optional string page_url = 4;
}

// 高级信息
message MetaAdvancedInfo {
  // IMDB编号
  optional string imdb_id = 1;

  // 豆瓣关联
  optional DoubanInfo douban_info = 2;

  // 时光网ID
  optional string mtime_id = 3;

  // 百度百科URL
  optional string baike_url = 4;

  // 电视台关联
  optional TvInfo tv_info = 5;
}

message StagePhotos {
  repeated RelatedImage stage_photo = 1;
}

message Feeds {
  repeated Feed feed = 1;
  optional string filmtv_update_strategy = 2;   // 资料更新策略
  optional int64 filmtv_last_update_episode_publishtime = 3; // (资料最新一集更新)的发布时间
}

4. pub/common.proto
enum EntityIdType {
  // 视频码流
  VIDEO_FORMAT = 1170;
}

enum Table {
  // 视频码流实体
  VIDEO_FORMAT_TABLE = 60;
  // 多发Episode实体
  MULTI_PUBLISH_EPISODE_TABLE = 61;
  // 多发Album实体
  MULTI_PUBLISH_ALBUM_TABLE = 62;
}
enum SiteType{
  UNKNOWN_SITE_TYPE = -1;

  // CHINESE
  SITE_ZH = 1;

  // CHINESE_TAIWAN
  SITE_ZH_TW = 2;
}

enum ColumnGroup {
  //for the format_summary of Episode|Album
  FORMAT_SUMMARY = 490;

  //for the film_tv_available_status of Episode|Album
  FILM_TV_AVAILABLE_STATUS = 491;

  //for the meta_basic_info of Episode|Album
  META_BASIC_INFO = 492;

  //for the meta_multilingual_info of Episode|Album
  META_MULTILINGUAL_INFO = 493;

  //for the meta_advanced_info of Episode|Album
  META_ADVANCED_INFO = 494;

  //for the content_rating of Episode|Album
  CONTENT_RATING = 495;

  //for the video_common_base of Episode|Album
  VIDEO_COMMON_BASE = 496;

  //for the operation_base of Episode|Album
  OPERATION_BASE = 497;

  //for the operation_cooperation_base of Episode|Album
  OPERATION_COOPERATION_BASE = 498;

  //for the operation_control_base of Episode|Album
  OPERATION_CONTROL_BASE = 499;

  //for the operation_multi_control_base of Episode|Album
  OPERATION_MULTI_CONTROL_BASE = 500;

  //for the operation_language_base of Episode|Album
  OPERATION_LANGUAGE_BASE = 501;

  //for the operation_page of Episode|Album
  OPERATION_PAGE = 502;

  //for the album_source_type of Album
  ALBUM_SOURCE_TYPE = 503;

  //for the related_people_info of Episode|Album
  RELATED_PEOPLE_INFO = 504;

  //for the related_character_info of Episode|Album
  RELATED_CHARACTER_INFO = 505;

  //for the ugc_summary of Episode|Album
  UGC_SUMMARY = 506;

  //for the stage_photo of Episode|Album
  STAGE_PHOTOS = 507;

  //for the feeds of Episode|Album
  FEEDS = 508;

  //for the filmtvRelatedSummary of Episode|Album
  FILMTV_RELATED_SUMMARY = 509;

  //for the quality of VideoFormat
  QUALITY_COLUMN_GROUP = 510;

  // for MultiPublishAlbum|MultiPublishEpisode
  PRIMARY_LAST_UPDATE_TIME = 511;

  // for MultiPublishAlbum|MultiPublishEpisode
  PRIMARY_ENTITY_ID = 512;
}

enum AlbumSourceType {
  UNKNOWN_ALBUM_SOURCE_TYPE = -1;
  ALBUM_SOURCE_TYPE_EPISODE = 1; // 剧集类(按集数正序)
  ALBUM_SOURCE_TYPE_SOURCE = 2;  // 综艺类(按发行时间逆序)
}

enum SecurityLevel{
  UNKNOWN_SECURITY_LEVEL = -1;
  SECURITY_LEVEL_COPYRIGHTED = 0;
  SECURITY_LEVEL_FUZZY_COPYRIGHTED = 1;
  SECURITY_LEVEL_NONE_COPYRIGHTED = 2;
}

5. pub/metadatas.proto
// 基础信息(不分站点,不分语种,不分多发)
message MetaBasicInfo {
  // 科学分类
  optional int32 scientific_channel_id = 1;

  // 外文名
  repeated Title.ParallelProperTitle parallel_proper_title = 2;

  // 片长:minute
  optional int32 duration = 3;

  // 发行日期
  optional Date global_publish_date = 4;

  // 大陆上映时间
  optional Date china_publish_date = 5;

  // 奇艺上映时间
  optional Date qiyi_publish_date = 6;

  // 影院上线时间
  optional Date cinema_online_date = 7;

  // 影院下线时间
  optional Date cinema_offline_date = 8;

  // 第 X 季(部)
  optional int32 season = 9;

  // 第 X 期
  optional int32 phase = 10;

  // 总集数
  optional int32 total_number_of_episodes = 11;

  // 全球首映时间
  optional DATE original_show_date = 12;

  // 播放源ID
  optional string play_source_id = 13;
}

// 多语种相关信息(不分站点,分语种,不分多发)
message MetaMultilingualInfo {
  // 语种
  optional Language language = 1;

  // 名称(节目原名/资料名)
  optional string proper_title = 2;

  // 别名
  repeated string alternative_title = 3;

  // 描述
  optional string description = 4;

  // 一句话短评
  optional string short_comment = 5;
}

// 电视台关联信息
message TvInfo {
  // 首播电视台
  optional string original_play_tv_station = 1;

  // 电视台首播日期
  optional string original_play_time = 2;

  // 电视台首播播放策略
  optional string original_play_frequency = 3;

  // 电视台
  repeated string play_tv_station = 4;
}

message RelatedPeopleInfo{
  message PeopleInfo{
    enum Role {
      CHIEF_EDITOR = 0;
      SUPERVISOR = 1;
      PRODUCER = 2;
      DIRECTOR =3 ;
      SCENARIST_DIRECTOR = 4;
      SONG_WRITER = 5;
      COMPOSER = 6;
      SCREENWRITER = 7;
      CHOREOGRAPHER = 8;
      ARRANGER = 9;
      PLANNER = 10;
      COPY_WRITER = 11;
      EDITOR = 12;
      JOURNALIST = 13;
      PHOTOGRAPHER = 14;
      VIDEOGRAPHER = 15;
      SCRIPT_CLERK = 16;
      TRANSLATOR = 17;
      CUTTING = 18;
      ART_DIRECTOR = 19;
      LIGHTING = 20;
      AUDIO = 21;
      AUDIO_MIXER = 22;
      MAKEUP_STYLING = 23;
      COSTUMER = 24;
      SINGING_DESIGN = 25;
      AUDIO_VIDEO_TECH = 26;
      // The people creates art
      CREATOR = 27;
      SCRIPT = 28;
      HOST = 29;
      CAST = 30;
      DUBBER = 31;
      COMMENTATOR = 32;
      SPEAKER = 33;
      INTERVIEWEE = 34;
      GUEST = 35;
      LETURER = 36;
      MAIN_CHARACTER = 37;
      DANCER = 38;
      SINGER = 39;
      ACTOR = 40;
      GROUP_ACT = 41;
      CONDUCTOR = 42;
      ACCOMPANIST = 43;
      COACH = 44;
      ACTION_DIRECTOR = 45;
      ADVISER = 46;
      // General character related the entity.
      RELATE = 47;
      JUDGE = 48;
      PLAYER = 49;
      // Famous actor
      STAR = 50;
      // The people works on art.
      ARTIST = 51;
    }

    // 影片中具体的角色
    message CharacterInfo{
      optional string character = 1;
      optional Language language = 2;
    }

    // 人物奇谱ID
    optional int64 entity_id = 1;

    // 角色：导演、演员等
    optional string entity_name = 2;

    optional string tw_entity_name = 3;

    repeated Role role = 4;

    repeated CharacterInfo character_info = 5;

    optional string other_information = 6;
  }

  // 导演
  message Creator{
    repeated PeopleInfo creator = 1;
  }

  // 主演和演员
  message Contributor{
    repeated PeopleInfo contributor = 1;
  }

  message PublishInfo {
    optional int64 entity_id = 1;
    optional Location place_of_publication = 2;
  }

  // 出版者
  message Publisher {
    repeated PublishInfo publishInfo = 1;
  }

  // 出品者
  message Producer {
    repeated PublishInfo publishInfo = 1;
  }

  // 导演信息
  optional Creator creators = 1;

  // 主演和演员信息
  optional Contributor contributors = 2;

  // 出版者信息
  optional Publisher publishers = 3;

  // 出品者信息
  optional Producer producers = 4;
}

// 相关角色信息
message RelatedCharacterInfo{

  // 角色信息
  message CharacterInfo{
    optional int64 entity_id = 1;
  }

  // 角色信息
  repeated CharacterInfo characters = 1;
}

6. pub/formats.proto
// 新增关联的format 同步
message FormatSummary {
  optional int64 id = 1;
  optional VideoInfo video_info = 2;
  optional string version = 3;
}

7. entity/schema-000-header.fproto

// 除去主站之外，其他站点的信息
message MultiSiteOptions {
  message SiteOption {
    // 站点
    optional SiteType site = 1;
    // 站点表名
    optional string table_name = 2;
    // 所属站点
    optional SiteType fallback_site = 3 [default = SITE_ZH];
  }
  optional SiteOption zh_tw = 1;
}

// 字段属性
enum FieldMultiType {
  // 普通字段
  FIELD_MULTI_TYPE_NONE = 0;
  // 多站点字段
  FIELD_MULTI_TYPE_SITE = 1;
  // 多语言字段
  FIELD_MULTI_TYPE_LANGUAGE = 2;
}

extend google.protobuf.MessageOptions {
  optional MultiSiteOptions site_option = 50033;
}

message FieldOptions {
  optional FieldMultiType multi_type = 3 [default = FIELD_MULTI_TYPE_NONE];
}

8. pub/activemq_message.proto

// 多语言字段更新信息
message MultiLanguageFieldsUpdateInfo {
  optional ColumnGroup columngroup = 1;

  // columnGroup 中 变更值的语言列表
  repeated Language language = 2;
}

message NotificationMessage {
  repeated MultiLanguageFieldsUpdateInfo multi_language_update_info = 9;
  repeated SiteType site_type = 10;
}

9. message/wal_message.proto
message WALMessage {
  // 站点
  repeated .knowledge.pub.SiteType site = 14;
}

10. pub/read_service.proto
message GetEntityRequest {
  optional SiteType site = 5 [default = SITE_ZH];
  repeated Language language = 6;
}

message GetEntityResponse {
  // Response for request of entity: VideoFormat
  repeated VideoFormat video_format = 62;

  // Response for request of entity: MultiPublishEpisode
  repeated MultiPublishEpisode multi_publish_episode = 63;

  // Response for request of entity: MultiPublishAlbum
  repeated MultiPublishAlbum multi_publish_album = 64;
}

11. pub/write_service.proto

message SetAlbumRequest {
  // 写入站点
  repeated SiteType site = 7;
}

message SetEpisodeRequest {
  // 写入站点
  repeated SiteType site = 7;
}

// Proto for setVideoFormat method defined in write_rpc_service.thrift
message SetVideoFormatRequest {
  //option
  option (request_options).set_table = VIDEO_FORMAT_TABLE;
  option (request_options).set_interface = "setVideoFormat";

  required User user = 1;

  optional VideoFormat merge_video_format = 2;

  optional VideoFormat delete_video_format = 3;

  // Whether to send message to activeMQ to notify audience. If you don't know
  // what exactly it is, leave it as default.
  optional bool should_notify_audience = 4 [default = true];

  // If you're doing a batch update,
  // please consider setting is_updated_in_batch_mode = true.
  // So the audience will know this is a batch update,
  // in which they may optimize the message processing.
  optional bool is_updated_in_batch_mode = 5 [default = false];

  // 消息优先级
  optional Priority priority = 6;
}

// Proto for setMultiPublishEpisode method defined in write_rpc_service.thrift
message SetMultiPublishEpisodeRequest {
  //option
  option (request_options).set_table = MULTI_PUBLISH_EPISODE_TABLE;
  option (request_options).set_interface = "setMultiPublishEpisode";

  required User user = 1;

  optional MultiPublishEpisode merge_multi_publish_episode = 2;

  optional MultiPublishEpisode delete_multi_publish_episode = 3;

  // Whether to send message to activeMQ to notify audience. If you don't know
  // what exactly it is, leave it as default.
  optional bool should_notify_audience = 4 [default = true];

  // If you're doing a batch update,
  // please consider setting is_updated_in_batch_mode = true.
  // So the audience will know this is a batch update,
  // in which they may optimize the message processing.
  optional bool is_updated_in_batch_mode = 5 [default = false];

  // 消息优先级
  optional Priority priority = 6;
}

// Proto for setMultiPublishAlbum method defined in write_rpc_service.thrift
message SetMultiPublishAlbumRequest {
  //option
  option (request_options).set_table = MULTI_PUBLISH_ALBUM_TABLE;
  option (request_options).set_interface = "setMultiPublishAlbum";

  required User user = 1;

  optional MultiPublishAlbum merge_multi_publish_album = 2;

  optional MultiPublishAlbum delete_multi_publish_album = 3;

  // Whether to send message to activeMQ to notify audience. If you don't know
  // what exactly it is, leave it as default.
  optional bool should_notify_audience = 4 [default = true];

  // If you're doing a batch update,
  // please consider setting is_updated_in_batch_mode = true.
  // So the audience will know this is a batch update,
  // in which they may optimize the message processing.
  optional bool is_updated_in_batch_mode = 5 [default = false];

  // 消息优先级
  optional Priority priority = 6;
}

12. pub/tracker/tracker_service.proto
message ChangeLog{
  repeated SiteType site = 14;
}

13. schema-1170-video-format.fproto 新增实体
/**
 * 视频码流相关信息实体
 **/
message VideoFormat {
  option (entity_option).table = VIDEO_FORMAT_TABLE;
  option (entity_option).entity_name = "video_format";
  option (table_option).hbase_table_name = "qipu_video_format_table";
  option (entity_option).entity_id_type = VIDEO_FORMAT;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  //视频码流，由媒资写入。
  repeated Format format = 4 [(field_option).column_group = FORMAT, (column_option).column_name = "fmt_", (column_option).column_suffix = "${uuid}"];

  // 码流格式；由乐高媒资写入。
  repeated AudioFormat audio_format = 5 [(field_option).column_group = AUDIO_FORMAT, (column_option).column_name = "aufmt_", (column_option).column_suffix = "${uuid}"];

  // 全景视频参数
  optional PanoFormat pano_format= 6 [(field_option).column_group = PANO_FORMAT, (column_option).column_name = "pano_fmt"];

  // 音视频质量
  optional Quality quality = 7 [(field_option).column_group = QUALITY_COLUMN_GROUP, (column_option).column_name = "quality"];

  //视频码流概要信息
  optional VideoInfo video_info = 8 [(field_option).column_group = VIDEO_INFO, (column_option).column_name = "videoinfo"];

  // 音轨信息
  optional AudioInfo audio_info = 9 [(field_option).column_group = AUDIO_INFO, (column_option).column_name = "auinfo"];

  // 字幕插件信息
  repeated Subtitle subtitle = 10 [(field_option).column_group = SUBTITLE, (column_option).column_name = "sbt_", (column_option).column_suffix = "${uuid}"];

  // DRM key信息
  optional DrmKey drm_key = 11 [(field_option).column_group = DRM_KEY, (column_option).column_name = "drm"];

  // format version
  optional string version = 12 [(field_option).column_group = VERSION, (column_option).column_name = "version"];

  // 视频和码流的关系字段，乐高写入
  repeated MetaSummary episode_summary = 13 [(field_option).column_group = EPISODE_SUMMARY, (column_option).column_name = "episode_sum", (column_option).column_suffix = "${entity_id}"];
}

14. schema-07-multi_publish_episode.fproto 新增实体
/**
 * 多发Episode实体
 **/
message MultiPublishEpisode {
  option (entity_option).table = MULTI_PUBLISH_EPISODE_TABLE;
  option (entity_option).entity_name = "multi_publish_episode";
  option (table_option).hbase_table_name = "qipu_multi_publish_episode_table";
  option (entity_option).entity_id_type = MULTI_PUBLISH_EPISODE;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  optional OperationMultiControlBase operation_multi_control_base = 4 [(field_option).column_group = OPERATION_MULTI_CONTROL_BASE, (column_option).column_name = "op_mul_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 频道id
  optional int32 channel_id = 5 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "c_id"];

  //区分主多发的多语种base
  repeated OperationLanguageBase operation_language_base = 6 [(field_option).column_group = OPERATION_LANGUAGE_BASE, (column_option).column_name = "op_lang_base_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  optional OperationPage operation_page = 7 [(field_option).column_group = OPERATION_PAGE, (column_option).column_name = "op_page",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  optional Date primary_last_update_time = 8 [(field_option).column_group = PRIMARY_LAST_UPDATE_TIME, (column_option).column_name = "primary_lut"];

  optional int64 primary_entity_id = 9 [(field_option).column_group = PRIMARY_ENTITY_ID, (column_option).column_name = "primary_id"];

  repeated FatherInfo father_album = 10 [(field_option).column_group = FATHER_ALBUM, (column_option).column_name = "dad_alb", (validator_options).id_type.type = "08", (validator_options).id_type.inside_field = "father_id"];

  repeated FatherInfo father_collection = 11 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}"];

  repeated string tag = 12 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  repeated LocaleImage local_image = 13 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  repeated KeyValuePair key_value_pair = 14 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];

  optional ContentType content_type = 15 [(field_option).column_group = CONTENT_TYPE, (column_option).column_name = "contype"];
}

15. schema-08-multi_publish_album.fproto
/**
 * 多发Album实体
 **/
message MultiPublishAlbum {
  option (entity_option).table = MULTI_PUBLISH_ALBUM_TABLE;
  option (entity_option).entity_name = "multi_publish_album";
  option (table_option).hbase_table_name = "qipu_multi_publish_album_table";
  option (entity_option).entity_id_type = MULTI_PUBLISH_ALBUM;

  required int64 id = 1 [(column_option).is_auto_set = true];

  optional bool deleted = 2 [default = false, (column_option).has_value = false, (field_option).column_group = DELETED, (column_option).column_name = "del"];

  // 最后更新时间，任何字段更新都会导致这个最后更新时间被修改。这个字段由奇谱自动维护。
  optional int64 last_update_time = 3 [(field_option).column_group = LAST_UPDATE_TIME, (column_option).column_name = "lut", (column_option).is_auto_set = true, (track_option).notracker=true,(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  // 区分主多发的控制base
  optional OperationMultiControlBase operation_multi_control_base = 4 [(field_option).column_group = OPERATION_MULTI_CONTROL_BASE, (column_option).column_name = "op_mul_ctrl_base",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  //频道
  optional int32 channel_id = 5 [(field_option).column_group = CHANNEL_ID, (column_option).column_name = "c_id"];

  //区分主多发的多语种base
  repeated OperationLanguageBase operation_language_base = 6 [(field_option).column_group = OPERATION_LANGUAGE_BASE, (column_option).column_name = "op_lang_base_", (column_option).column_suffix = "${language}",(field_option).multi_type = FIELD_MULTI_TYPE_LANGUAGE];

  optional OperationPage operation_page = 7 [(field_option).column_group = OPERATION_PAGE, (column_option).column_name = "op_page",(field_option).multi_type = FIELD_MULTI_TYPE_SITE];

  optional Date primary_last_update_time = 8 [(field_option).column_group = PRIMARY_LAST_UPDATE_TIME, (column_option).column_name = "primary_lut"];

  optional int64 primary_entity_id = 9 [(field_option).column_group = PRIMARY_ENTITY_ID, (column_option).column_name = "primary_id"];

  repeated MetaSummary episode_summary = 10 [(field_option).column_group = CHILD_EPISODE, (column_option).column_name = "chd_epd_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order,entity_id", (field_option).is_repeated_column_notified = true];

  // 预告片列表
  repeated  MetaSummary prevue_summary = 11 [(field_option).column_group = CHILD_PREVUE, (column_option).column_name = "chd_pre_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order", (field_option).is_repeated_column_notified = true];

  // 剪辑列表
  repeated  MetaSummary trailer_summary = 12 [(field_option).column_group = CHILD_TRAILER, (column_option).column_name = "chd_tlr_", (column_option).column_suffix = "${entity_id}", (column_option).order_by = "order"];

  // 花絮列表
  repeated  MetaSummary titbit_summary = 13 [(field_option).column_group = CHILD_TITBIT, (column_option).column_name = "chd_ttb_", (column_option).column_suffix = "${entity_id}"];

  // 片段列表
  repeated  MetaSummary clip_summary = 14 [(field_option).column_group = CHILD_CLIP, (column_option).column_name = "chd_clp_", (column_option).column_suffix = "${entity_id}"];

  repeated  MetaSummary other_summary = 15 [(field_option).column_group = CHILD_OTHER, (column_option).column_name = "chd_oth_", (column_option).column_suffix = "${entity_id}"];

  repeated FatherInfo father_collection = 16 [(field_option).column_group = FATHER_COLLECTION, (column_option).column_name = "dad_cln_", (column_option).column_suffix = "${father_id}"];

  repeated string tag = 17 [(column_option).has_value = false, (field_option).column_group = TAG, (column_option).column_name = "tag_"];

  // 支持本地化设置的图片。
  repeated LocaleImage local_image = 18 [(field_option).column_group = LOCAL_IMAGE, (column_option).column_name = "loc_image_", (column_option).column_suffix = "${language}_${type}"];

  repeated KeyValuePair key_value_pair = 19 [(field_option).column_group = KEY_VALUE_PAIR, (column_option).column_name = "kvp_", (column_option).column_suffix = "${name}", (field_option).is_repeated_column_notified = true];
}

16. fusion/query/properties.proto
message QipuEntity {
  optional VideoFormat video_format = 62;
  optional MultiPublishEpisode multi_publish_episode = 63;
  optional MultiPublishAlbum multi_publish_album = 64;
}

17. pub/write_rpc_service.thrift
service WriteRpcService {

  /**
   * The write interfaces of setting for VideoFormat.
   * Set all field of VideoFormat,
   * or throws an exception if this operation is not valid.
   */
  binary setVideoFormat(1:binary set_video_format_request)
      throws (1:InvalidWriteOperation e);

  /**
   * The write interfaces of setting for MultiPublishEpisode.
   * Set all field of MultiPublishEpisode,
   * or throws an exception if this operation is not valid.
   */
  binary setMultiPublishEpisode(1:binary set_multi_publish_episode_request)
      throws (1:InvalidWriteOperation e);

  /**
   * The write interfaces of setting for MultiPublishAlbum.
   * Set all field of MultiPublishAlbum,
   * or throws an exception if this operation is not valid.
   */
  binary setMultiPublishAlbum(1:binary set_multi_publish_album_request)
      throws (1:InvalidWriteOperation e);
}

2017/03/13 (1.6.170313)
1. knowledge/pub/properties.proto
message LiveStream {
  // 码流名称
  optional string stream_name = 20;
}

2017/03/09 (1.6.170309)
1. knowledge/pub/common.proto
enum EntityIdType {
  MULTI_PUBLISH_EPISODE = 7;
  MULTI_PUBLISH_ALBUM = 8;
}

2017/03/09 (1.5.170309)
1. /knowledge/pub/common.proto
enum FeedCometExtendedType {
  // 应援小尾巴
  FEED_COMET_EXTENDED_TYPE_FUND = 4;
}

2017/03/08 (1.5.170308)
1. /knowledge/pub/formats.proto
message ImageFormat {
  optional float score = 12 [default = 1.0];//封面图权重
}

2. entity/schema-0770-intellectual-property.fproto
message IntellectualProperty {
  //电商商品
  repeated IntellectualPropertySummary commodity_summary = 11 [(field_option).column_group = COMMODITY_SUMMARY, (column_option).column_name = "cmdt_sum_", (column_option).column_suffix = "${entity_id}"];

  //电商专题
  repeated IntellectualPropertySummary commodity_subject_summary = 12 [(field_option).column_group = COMMODITY_SUBJECT_SUMMARY, (column_option).column_name = "cmdt_sbjct_sum_", (column_option).column_suffix = "${entity_id}"];
}

3. knowledge/pub/common.proto
enum ColumnGroup {
  COMMODITY_SUMMARY = 557;
  COMMODITY_SUBJECT_SUMMARY = 558;
}

4. /entity/schema-22-live-channel.fproto
message LiveChannel {
  // Define the top recommend place of pps category for the album, episode, collection or ppsCategory.
  repeated PpsCategoryRanking pps_category_ranking = 19 [(field_option).column_group = PPS_CATEGORY_RANKING, (column_option).column_name = "pps_cat_rk_", (column_option).column_suffix = "${pps_category_id}"];
}

5. /entity/schema-23-live-episode.fproto
message LiveEpisode {
  // Define the top recommend place of pps category for the album, episode, collection or ppsCategory.
  repeated PpsCategoryRanking pps_category_ranking = 39 [(field_option).column_group = PPS_CATEGORY_RANKING, (column_option).column_name = "pps_cat_rk_", (column_option).column_suffix = "${pps_category_id}"];
}

2017/03/06 (1.5.170307)
1.去掉脸谱相关定义
删除knowledge/face目录
删除fusion_service中脸谱相关定义
2017/03/06 (1.4.170306)
1. entity/schema-01-album.fproto
message Album {
  repeated MetaSummary clip_summary = 37 [(field_option).column_group = CHILD_CLIP, (column_option).column_name = "chd_clp_", (column_option).column_suffix = "${entity_id}", (field_option).is_repeated_column_notified = true];
}

2017/03/03 (1.4.170303)
添加Hybrid用Schema3.0字段

2017/03/01 (1.4.170301)
添加portal相关proto定义文件